[
    {
        "title": "Determine the Winner of a Bowling Game",
        "question_content": "You are given two 0-indexed integer arrays player1 and player2, that represent the number of pins that player 1 and player 2 hit in a bowling game, respectively.\nThe bowling game consists of n turns, and the number of pins in each turn is exactly 10.\nAssume a player hit xi pins in the ith turn. The value of the ith turn for the player is:\n\n\t2xi if the player hit 10 pins in any of the previous two turns.\n\tOtherwise, It is xi.\n\nThe score of the player is the sum of the values of their n turns.\nReturn\n\n\t1 if the score of player 1 is more than the score of player 2,\n\t2 if the score of player 2 is more than the score of player 1, and\n\t0 in case of a draw.\n\n&nbsp;\nExample 1:\n\nInput: player1 = [4,10,7,9], player2 = [6,5,2,3]\nOutput: 1\nExplanation: The score of player1 is 4 + 10 + 2*7 + 2*9 = 46.\nThe score of player2 is 6 + 5 + 2 + 3 = 16.\nScore of player1 is more than the score of player2, so, player1 is the winner, and the answer is 1.\n\nExample 2:\n\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\nOutput: 2\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\n\nExample 3:\n\nInput: player1 = [2,3], player2 = [4,1]\nOutput: 0\nExplanation: The score of player1 is 2 + 3 = 5\nThe score of player2 is 4 + 1 = 5\nThe score of player1 equals to the score of player2, so, there is a draw, and the answer is 0.\n\n&nbsp;\nConstraints:\n\n\tn == player1.length == player2.length\n\t1 <= n <= 1000\n\t0 <= player1[i], player2[i] <= 10",
        "solutions": [
            {
                "id": 3468463,
                "title": "explained-very-simple-easy-to-understand-solution",
                "content": "<b>Up vote if you like the solution</b>\\n# Approach\\n1. When ever we see a 10 update flag to 2 and keep decrementing it from next time.\\n2. When ever the flag is non zero then add the value with 2x ohterwise simply add it as it is.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int getScore(vector<int>& player){\\n        int s = 0, f = 0;\\n        for(auto p:player){\\n            s += (f > 0)? 2*p: p;\\n            f--;\\n            if(p == 10) f = 2;\\n        }\\n        return s;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1 = getScore(player1), s2 = getScore(player2);\\n        if(s1 > s2) return 1;\\n        if(s1 < s2) return 2;\\n        return 0;\\n    }\\n};\\n```\\n<b>Here is an article of my recent interview experience - A Journey to FAANG Company, I recomand you to go through this to know which all resources I have used & how I cracked interview at Amazon:\\nhttps://leetcode.com/discuss/interview-experience/3171859/Journey-to-a-FAANG-Company-Amazon-or-SDE2-(L5)-or-Bangalore-or-Oct-2022-Accepted",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int getScore(vector<int>& player){\\n        int s = 0, f = 0;\\n        for(auto p:player){\\n            s += (f > 0)? 2*p: p;\\n            f--;\\n            if(p == 10) f = 2;\\n        }\\n        return s;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1 = getScore(player1), s2 = getScore(player2);\\n        if(s1 > s2) return 1;\\n        if(s1 < s2) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468269,
                "title": "day-395-easy-100-0ms-python-java-c-explained-approach",
                "content": "# Please Upvote as it really motivates me \\uD83C\\uDD99\\uD83C\\uDD99\\uD83C\\uDD99\\n# Intuition & Approach\\n<!-- Describe your approach to solving the problem. -->\\n##### \\u2022\\tWe first initialize ans, s1, and  s2 to 0.  Ans will store the winner of the game, and  s1 and  s2 will store the total scores of players 1 and 2, respectively.\\n##### \\u2022\\tWe compute the total scores of players 1 and 2 by iterating over the elements of  p1 and  p2 and adding them to  s1 and  s2 , respectively.\\n##### \\u2022\\tIf the length of  p1   is greater than 1, we iterate over the elements of p1 and  p2 again, starting from the second element. For each element, we check if the previous element was a strike (score of 10) or a spare (sum of the previous two scores is 10). If either of these conditions is true, we add the current score to the total score of the corresponding player.\\n##### \\u2022\\tWe then compare the total scores of players 1 and 2. If they are equal, we set  ans  to 0, indicating a tie. If the total score of player 1 is greater than that of player 2, we set ans to 1, indicating that player 1 is the winner. Otherwise, we set  ans to 2, indicating that player 2 is the winner.\\n##### \\u2022\\tWe return  ans.\\n##### \\u2022\\tThe intuition behind this approach is that we can compute the total scores of players 1 and 2 by simply adding up the scores in their respective arrays. However, in the case of strikes and spares, the score of the current frame depends on the scores of the previous frames. Therefore, we need to iterate over the arrays again and adjust the scores accordingly. Once we have the total scores of both players, we can compare them to determine the winner of the game.\\n\\n\\n\\n# Complexity\\n- Time complexity:o(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:o(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```java []\\n    public int isWinner(int[] p1, int[] p2) {\\n        int ans=0,s1=0,s2=0;\\n        int n=p1.length;\\n       for(int i=0;i<n;i++){\\n               s1+=p1[i];\\n               s2+=p2[i];\\n           }\\n        if(n>1) {\\n            for(int i=1;i<n;i++){\\n                if(p1[i-1]==10 ||((i>=2) && p1[i-2]==10))s1+=p1[i];\\n                if(p2[i-1]==10 ||((i>=2)&& p2[i-2]==10))s2+=p2[i];\\n            }\\n        }\\n        if(s1==s2) ans= 0;\\n        else if(s1>s2) ans= 1;\\n        else ans= 2;\\n        return ans;\\n        \\n    }\\n```\\n\\n```python []\\ndef isWinner(p1: List[int], p2: List[int]) -> int:\\n    ans, s1, s2 = 0, 0, 0\\n    n = len(p1)\\n    for i in range(n):\\n        s1 += p1[i]\\n        s2 += p2[i]\\n    if n > 1:\\n        for i in range(1, n):\\n            if p1[i - 1] == 10 or ((i >= 2) and p1[i - 2] == 10):\\n                s1 += p1[i]\\n            if p2[i - 1] == 10 or ((i >= 2) and p2[i - 2] == 10):\\n                s2 += p2[i]\\n    if s1 == s2:\\n        ans = 0\\n    elif s1 > s2:\\n        ans = 1\\n    else:\\n        ans = 2\\n    return ans\\n```\\n\\n```c++ []\\nint isWinner(vector<int>& p1, vector<int>& p2) {\\n    int ans = 0, s1 = 0, s2 = 0;\\n    int n = p1.size();\\n    for (int i = 0; i < n; i++) {\\n        s1 += p1[i];\\n        s2 += p2[i];\\n    }\\n    if (n > 1) {\\n        for (int i = 1; i < n; i++) {\\n            if (p1[i - 1] == 10 || ((i >= 2) && p1[i - 2] == 10)) {\\n                s1 += p1[i];\\n            }\\n            if (p2[i - 1] == 10 || ((i >= 2) && p2[i - 2] == 10)) {\\n                s2 += p2[i];\\n            }\\n        }\\n    }\\n    if (s1 == s2) {\\n        ans = 0;\\n    } else if (s1 > s2) {\\n        ans = 1;\\n    } else {\\n        ans = 2;\\n    }\\n    return ans;\\n}\\n```\\n# Please Upvote as it really motivates me \\uD83C\\uDD99\\uD83C\\uDD99\\uD83C\\uDD99\\n\\n![BREUSELEE.webp](https://assets.leetcode.com/users/images/062630f0-ef80-4e74-abdb-302827b99235_1680054012.5054147.webp)\\n![image.png](https://assets.leetcode.com/users/images/303fa18d-281d-49f0-87ef-1a018fc9a488_1681355186.0923774.png)\\n\\n\\n# Please Upvote\\uD83D\\uDC4D\\uD83D\\uDC4D\\nThanks for visiting my solution.\\uD83D\\uDE0A Keep Learning\\nPlease give my solution an upvote! \\uD83D\\uDC4D \\uD83C\\uDD99\\uD83C\\uDD99\\uD83C\\uDD99\\nIt\\'s a simple way to show your appreciation and\\nkeep me motivated. Thank you! \\uD83D\\uDE0A",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```java []\\n    public int isWinner(int[] p1, int[] p2) {\\n        int ans=0,s1=0,s2=0;\\n        int n=p1.length;\\n       for(int i=0;i<n;i++){\\n               s1+=p1[i];\\n               s2+=p2[i];\\n           }\\n        if(n>1) {\\n            for(int i=1;i<n;i++){\\n                if(p1[i-1]==10 ||((i>=2) && p1[i-2]==10))s1+=p1[i];\\n                if(p2[i-1]==10 ||((i>=2)&& p2[i-2]==10))s2+=p2[i];\\n            }\\n        }\\n        if(s1==s2) ans= 0;\\n        else if(s1>s2) ans= 1;\\n        else ans= 2;\\n        return ans;\\n        \\n    }\\n```\n```python []\\ndef isWinner(p1: List[int], p2: List[int]) -> int:\\n    ans, s1, s2 = 0, 0, 0\\n    n = len(p1)\\n    for i in range(n):\\n        s1 += p1[i]\\n        s2 += p2[i]\\n    if n > 1:\\n        for i in range(1, n):\\n            if p1[i - 1] == 10 or ((i >= 2) and p1[i - 2] == 10):\\n                s1 += p1[i]\\n            if p2[i - 1] == 10 or ((i >= 2) and p2[i - 2] == 10):\\n                s2 += p2[i]\\n    if s1 == s2:\\n        ans = 0\\n    elif s1 > s2:\\n        ans = 1\\n    else:\\n        ans = 2\\n    return ans\\n```\n```c++ []\\nint isWinner(vector<int>& p1, vector<int>& p2) {\\n    int ans = 0, s1 = 0, s2 = 0;\\n    int n = p1.size();\\n    for (int i = 0; i < n; i++) {\\n        s1 += p1[i];\\n        s2 += p2[i];\\n    }\\n    if (n > 1) {\\n        for (int i = 1; i < n; i++) {\\n            if (p1[i - 1] == 10 || ((i >= 2) && p1[i - 2] == 10)) {\\n                s1 += p1[i];\\n            }\\n            if (p2[i - 1] == 10 || ((i >= 2) && p2[i - 2] == 10)) {\\n                s2 += p2[i];\\n            }\\n        }\\n    }\\n    if (s1 == s2) {\\n        ans = 0;\\n    } else if (s1 > s2) {\\n        ans = 1;\\n    } else {\\n        ans = 2;\\n    }\\n    return ans;\\n}\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3468263,
                "title": "short-simple-clean-java-solution",
                "content": "\\n```java []\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = 0, p2 = 0;\\n        for(int i=0; i<player1.length; i++){\\n            if((i == 1 && player1[i-1] == 10) || (i >= 2 && (player1[i-1] == 10 || player1[i-2] == 10)))    p1 += player1[i];\\n            if((i == 1 && player2[i-1] == 10) || (i >= 2 && (player2[i-1] == 10 || player2[i-2] == 10)))    p2 += player2[i];\\n            p1 += player1[i];\\n            p2 += player2[i];\\n        }\\n        return p1 == p2 ? 0 : p1 > p2 ? 1 : 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```java []\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = 0, p2 = 0;\\n        for(int i=0; i<player1.length; i++){\\n            if((i == 1 && player1[i-1] == 10) || (i >= 2 && (player1[i-1] == 10 || player1[i-2] == 10)))    p1 += player1[i];\\n            if((i == 1 && player2[i-1] == 10) || (i >= 2 && (player2[i-1] == 10 || player2[i-2] == 10)))    p2 += player2[i];\\n            p1 += player1[i];\\n            p2 += player2[i];\\n        }\\n        return p1 == p2 ? 0 : p1 > p2 ? 1 : 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3470369,
                "title": "python-3-6-lines-w-explanation-t-m-99-93",
                "content": "Here\\'s the intuition:\\nWe don\\'t care about the actual scores, just which player wins. We keep track of the accumulated difference on each round. We use booleans to remember whether either of the two previous rounds were strikes.\\n\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        isTen1 = isTen2 = wasTen1 = wasTen2 = False\\n        diff = 0\\n\\n        for n1, n2 in zip(player1, player2):\\n\\n            diff+= (1+(wasTen1|isTen1))*n1 - (1+(wasTen2|isTen2))*n2\\n \\n            isTen1,isTen2, wasTen1, wasTen2 = n1 == 10, n2 == 10,isTen1,isTen2 \\n\\n        return  (diff < 0) + (diff != 0)\\n```\\n[https://leetcode.com/problems/determine-the-winner-of-a-bowling-game/submissions/945548312/](http://)\\n\\n\\n\\nI could be wrong, but I think that time complexity is *O*(*N*) and space complexity is *O*(1).\\n\\n\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        isTen1 = isTen2 = wasTen1 = wasTen2 = False\\n        diff = 0\\n\\n        for n1, n2 in zip(player1, player2):\\n\\n            diff+= (1+(wasTen1|isTen1))*n1 - (1+(wasTen2|isTen2))*n2\\n \\n            isTen1,isTen2, wasTen1, wasTen2 = n1 == 10, n2 == 10,isTen1,isTen2 \\n\\n        return  (diff < 0) + (diff != 0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468294,
                "title": "c-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size(),n2=player2.size(),ans1=0,ans2=0,x1=0,x2=0;\\n        \\n        for(int i=0;i<n1;i++){\\n            ans1+=player1[i];\\n            ans2+=player2[i];\\n            \\n            if(x1){\\n                x1--;\\n                ans1+=player1[i];\\n            }\\n            if(x2){\\n                x2--;\\n                ans2+=player2[i];\\n            }\\n            if(player1[i] == 10){\\n                x1=2;\\n            }\\n            if(player2[i] == 10){\\n                x2=2; \\n            }\\n        }\\n        if(ans1 > ans2)\\n            return 1;\\n        else if(ans1 < ans2)\\n            return 2;\\n        else\\n            return 0;\\n    }\\n};\\n```\\n\\n\\n\\nPlease Upvote if it helps :)",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size(),n2=player2.size(),ans1=0,ans2=0,x1=0,x2=0;\\n        \\n        for(int i=0;i<n1;i++){\\n            ans1+=player1[i];\\n            ans2+=player2[i];\\n            \\n            if(x1){\\n                x1--;\\n                ans1+=player1[i];\\n            }\\n            if(x2){\\n                x2--;\\n                ans2+=player2[i];\\n            }\\n            if(player1[i] == 10){\\n                x1=2;\\n            }\\n            if(player2[i] == 10){\\n                x2=2; \\n            }\\n        }\\n        if(ans1 > ans2)\\n            return 1;\\n        else if(ans1 < ans2)\\n            return 2;\\n        else\\n            return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468280,
                "title": "easy-solution-python",
                "content": "**Python**\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        Stack_A = []\\n        stack_B = []\\n        aScore = 0\\n        bScore = 0\\n        for n,m in zip(player1,player2):\\n        \\n            if 10 in Stack_A[-2:]:\\n                aScore += 2*n\\n            else:\\n                aScore += n\\n            \\n            if 10 in stack_B[-2:]:\\n                bScore += 2*m\\n            else:\\n                bScore += m\\n            Stack_A.append(n)\\n            stack_B.append(m)\\n                \\n        if aScore == bScore:return 0\\n        return 1 if aScore > bScore else 2\\n        \\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        Stack_A = []\\n        stack_B = []\\n        aScore = 0\\n        bScore = 0\\n        for n,m in zip(player1,player2):\\n        \\n            if 10 in Stack_A[-2:]:\\n                aScore += 2*n\\n            else:\\n                aScore += n\\n            \\n            if 10 in stack_B[-2:]:\\n                bScore += 2*m\\n            else:\\n                bScore += m\\n            Stack_A.append(n)\\n            stack_B.append(m)\\n                \\n        if aScore == bScore:return 0\\n        return 1 if aScore > bScore else 2\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468389,
                "title": "simplest-solution-just-do-what-is-asked",
                "content": "**Approach-->**\\n\\n**First loop** : just calculate player1 score by iterating and if previous 2 turns we get >=10 then multiply by2\\n**Second loop**: same for player 2\\n\\n##### NOTE: just done what is asked in problem \\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n    int o=0,t=0;\\n    \\n        for(int i=0;i<player1.size();i++){\\n            \\n            if(i>=1 and player1[i-1]>=10) o+=2*player1[i];  // just checking previous turn for 10 or greater\\n            else if(i>=2 and (player1[i-1]>=10 or player1[i-2]>=10)) o+=2*player1[i]; // checking previous 2 turn for a 10 or greater\\n            else o+=player1[i];   // else add that value\\n        }\\n     for(int i=0;i<player2.size();i++){\\n            \\n         if(i>=1 and player2[i-1]>=10) t+=2*player2[i];\\n           else if(i>=2 and (player2[i-1]>=10 or player2[i-2]>=10)) t+=2*player2[i];\\n            else t+=player2[i];\\n        }\\n    if(o>t) return 1;\\n    else if(t>o) return 2;\\n    else return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n    int o=0,t=0;\\n    \\n        for(int i=0;i<player1.size();i++){\\n            \\n            if(i>=1 and player1[i-1]>=10) o+=2*player1[i];  // just checking previous turn for 10 or greater\\n            else if(i>=2 and (player1[i-1]>=10 or player1[i-2]>=10)) o+=2*player1[i]; // checking previous 2 turn for a 10 or greater\\n            else o+=player1[i];   // else add that value\\n        }\\n     for(int i=0;i<player2.size();i++){\\n            \\n         if(i>=1 and player2[i-1]>=10) t+=2*player2[i];\\n           else if(i>=2 and (player2[i-1]>=10 or player2[i-2]>=10)) t+=2*player2[i];\\n            else t+=player2[i];\\n        }\\n    if(o>t) return 1;\\n    else if(t>o) return 2;\\n    else return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468311,
                "title": "c-solution-with-2-solutions",
                "content": "\\n\\n# first approach \\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int a = player1.size(), b = player2.size();\\n        \\n        int first = 0, second = 0, count = 0, i = 0;\\n        while (i < a) {\\n            if (player1[i] == 10) {\\n                count = 2;\\n                first += player1[i];\\n                i++;\\n                while (count != 0 && i < a) {\\n                    first += (2 * player1[i]);\\n                    count--;\\n                    if (player1[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                first += player1[i];\\n                i++;\\n            }\\n        }\\n        \\n        i = 0;\\n        count = 0;\\n        while (i < b) {\\n            if (player2[i] == 10) {\\n                count = 2;\\n                second += player2[i];\\n                i++;\\n                while (count != 0 && i < b) {\\n                    second += (2 * player2[i]);\\n                    count--;\\n                    if (player2[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                second += player2[i];\\n                i++;\\n            }\\n        }\\n        \\n        if (first > second) return 1;\\n        else if (first < second) return 2;\\n        else return 0;\\n    }\\n};\\n\\n```\\n# second approach \\n```\\n\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        if(player1.size() == 1) {\\n        if(player1[0] == player2[0]) {\\n            return 0;\\n        }\\n        return player1[0] > player2[0] ? 1 : 2;\\n    }\\n\\n    int sum1 = 0;\\n    int sum2 = 0;\\n\\n    sum1 += player1[0];\\n    sum2 += player2[0];\\n\\n    if(player1[0] == 10) {\\n        sum1 += (2 * player1[1]);\\n    } else {\\n        sum1 += player1[1];\\n    }\\n\\n    if(player2[0] == 10) {\\n        sum2 += (2 * player2[1]);\\n    } else {\\n        sum2 += player2[1];\\n    }\\n\\n    for(int i = 2; i < length; i++) {\\n        if(player1[i-1] == 10 || player1[i-2] == 10) {\\n            sum1 += (2 * player1[i]);\\n        } else {\\n            sum1 += player1[i];\\n        }\\n\\n        if(player2[i-1] == 10 || player2[i-2] == 10) {\\n            sum2 += (2 * player2[i]);\\n        } else {\\n            sum2 += player2[i];\\n        }\\n    }\\n\\n    if(sum1 == sum2) {\\n        return 0;\\n    }\\n\\n    return sum1 > sum2 ? 1 : 2;\\n}",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int a = player1.size(), b = player2.size();\\n        \\n        int first = 0, second = 0, count = 0, i = 0;\\n        while (i < a) {\\n            if (player1[i] == 10) {\\n                count = 2;\\n                first += player1[i];\\n                i++;\\n                while (count != 0 && i < a) {\\n                    first += (2 * player1[i]);\\n                    count--;\\n                    if (player1[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                first += player1[i];\\n                i++;\\n            }\\n        }\\n        \\n        i = 0;\\n        count = 0;\\n        while (i < b) {\\n            if (player2[i] == 10) {\\n                count = 2;\\n                second += player2[i];\\n                i++;\\n                while (count != 0 && i < b) {\\n                    second += (2 * player2[i]);\\n                    count--;\\n                    if (player2[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                second += player2[i];\\n                i++;\\n            }\\n        }\\n        \\n        if (first > second) return 1;\\n        else if (first < second) return 2;\\n        else return 0;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468249,
                "title": "simple-java-solution",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=0,sum2=0;\\n        for(int i=0;i<player1.length;i++)\\n        {\\n            if(i==1)\\n            {\\n                if(player1[i-1]==10)\\n                {\\n                    sum1+=(2*player1[i]);\\n                }\\n                else\\n                {\\n                    sum1+=player1[i];\\n                }\\n            }\\n            else if(i>1)\\n            {\\n                if(player1[i-1]==10 || player1[i-2]==10)\\n                {\\n                    sum1+=(2*player1[i]);\\n                }\\n                else\\n                {\\n                    sum1+=player1[i];\\n                }\\n            }\\n            else\\n            {\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int i=0;i<player1.length;i++)\\n        {\\n            if(i==1)\\n            {\\n                if(player2[i-1]==10)\\n                {\\n                    sum2+=(2*player2[i]);\\n                }\\n                else\\n                {\\n                    sum2+=player2[i];\\n                }\\n            }\\n            else if(i>1)\\n            {\\n                if(player2[i-1]==10 || player2[i-2]==10)\\n                {\\n                    sum2+=(2*player2[i]);\\n                }\\n                else\\n                {\\n                    sum2+=player2[i];\\n                }\\n            }\\n            else\\n            {\\n                sum2+=player2[i];\\n            }\\n        }\\n        return sum1>sum2 ? 1 : sum2>sum1 ? 2 : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=0,sum2=0;\\n        for(int i=0;i<player1.length;i++)\\n        {\\n            if(i==1)\\n            {\\n                if(player1[i-1]==10)\\n                {\\n                    sum1+=(2*player1[i]);\\n                }\\n                else\\n                {\\n                    sum1+=player1[i];\\n                }\\n            }\\n            else if(i>1)\\n            {\\n                if(player1[i-1]==10 || player1[i-2]==10)\\n                {\\n                    sum1+=(2*player1[i]);\\n                }\\n                else\\n                {\\n                    sum1+=player1[i];\\n                }\\n            }\\n            else\\n            {\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int i=0;i<player1.length;i++)\\n        {\\n            if(i==1)\\n            {\\n                if(player2[i-1]==10)\\n                {\\n                    sum2+=(2*player2[i]);\\n                }\\n                else\\n                {\\n                    sum2+=player2[i];\\n                }\\n            }\\n            else if(i>1)\\n            {\\n                if(player2[i-1]==10 || player2[i-2]==10)\\n                {\\n                    sum2+=(2*player2[i]);\\n                }\\n                else\\n                {\\n                    sum2+=player2[i];\\n                }\\n            }\\n            else\\n            {\\n                sum2+=player2[i];\\n            }\\n        }\\n        return sum1>sum2 ? 1 : sum2>sum1 ? 2 : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3471140,
                "title": "strike",
                "content": "It would be more interesting to implement the real bowling scoring.\\n\\n**C++**\\n```cpp\\nint score(vector<int>& pins, int strike = 0) {\\n    return accumulate(begin(pins), end(pins), 0, [&](int res, int p){\\n        res += p * (strike > 0 ? 2 : 1);\\n        strike = p == 10 ? 2 : strike - 1;\\n        return res;\\n    });\\n}\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n    int s1 = score(player1), s2 = score(player2);\\n    return s1 > s2 ? 1 : s1 < s2 ? 2 : 0;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nint score(vector<int>& pins, int strike = 0) {\\n    return accumulate(begin(pins), end(pins), 0, [&](int res, int p){\\n        res += p * (strike > 0 ? 2 : 1);\\n        strike = p == 10 ? 2 : strike - 1;\\n        return res;\\n    });\\n}\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n    int s1 = score(player1), s2 = score(player2);\\n    return s1 > s2 ? 1 : s1 < s2 ? 2 : 0;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3470681,
                "title": "beats-100-in-runtime-and-space-solution-in-java-simple-and-easy",
                "content": "![image.png](https://assets.leetcode.com/users/images/6c7c44b5-f7d2-4821-ad7e-687f9f08cf6f_1682875832.839368.png)\\n\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=player1[0], sum2=player2[0];\\n        for(int i=1; i<player1.length; i++){\\n            if(i==1){\\n                if(player1[i-1]==10) sum1+=2*player1[i];\\n                else sum1+=player1[i];\\n                \\n                if(player2[i-1]==10) sum2+=2*player2[i];\\n                else sum2+=player2[i];\\n            }\\n            else{\\n                if(player1[i-1]==10 || player1[i-2]==10) sum1+=2*player1[i];\\n                else sum1+=player1[i];\\n                \\n                if(player2[i-1]==10 || player2[i-2]==10) sum2+=2*player2[i];\\n                else sum2+=player2[i];\\n            }      \\n        }\\n        if(sum2>sum1) return 2;\\n        else if(sum1>sum2) return 1;\\n        return 0;\\n    }\\n}\\n```\\n![image.png](https://assets.leetcode.com/users/images/0c40297b-fcdb-42e1-9a4e-b8b80120f9ee_1682876025.9059646.png)\\n\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=player1[0], sum2=player2[0];\\n        for(int i=1; i<player1.length; i++){\\n            if(i==1){\\n                if(player1[i-1]==10) sum1+=2*player1[i];\\n                else sum1+=player1[i];\\n                \\n                if(player2[i-1]==10) sum2+=2*player2[i];\\n                else sum2+=player2[i];\\n            }\\n            else{\\n                if(player1[i-1]==10 || player1[i-2]==10) sum1+=2*player1[i];\\n                else sum1+=player1[i];\\n                \\n                if(player2[i-1]==10 || player2[i-2]==10) sum2+=2*player2[i];\\n                else sum2+=player2[i];\\n            }      \\n        }\\n        if(sum2>sum1) return 2;\\n        else if(sum1>sum2) return 1;\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469164,
                "title": "easy-to-understand-beginner-friendly-code",
                "content": "# Intuition \\n\\nBrute force thinking simply did what question asked step by step\\n\\n# Approach \\nAt each index we know score has to be added atleast one time so increase the score of player by the value. Then check if any of the previous 2 value of a player is 10 then again add the value in his total score.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n=player1.size();\\n        int score1=player1[0];\\n        int score2=player2[0];\\n        for(int i=1;i<n;i++){\\n            score1+=player1[i];\\n            score2+=player2[i];\\n            if(i==1){\\n                if( player1[0]==10) score1+=player1[1];         \\n                if(player2[0]==10) score2+=player2[1];          \\n            }\\n            else{\\n                if(player1[i-1]==10 || player1[i-2]==10){\\n                    score1+=player1[i];\\n                }\\n                if(player2[i-1]==10 || player2[i-2]==10){\\n                    score2+=player2[i];\\n                }\\n            }\\n        }\\n        if(score1==score2)return 0;\\n        else if(score1>score2) return 1;\\n        else return 2;\\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n=player1.size();\\n        int score1=player1[0];\\n        int score2=player2[0];\\n        for(int i=1;i<n;i++){\\n            score1+=player1[i];\\n            score2+=player2[i];\\n            if(i==1){\\n                if( player1[0]==10) score1+=player1[1];         \\n                if(player2[0]==10) score2+=player2[1];          \\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3469116,
                "title": "c-o-n-solution",
                "content": "\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& p1, vector<int>& p2) {\\n        int a = 0, b = 0;\\n        for(int i = 0; i < p1.size(); i++) {\\n            if(i == 0) {\\n                a += p1[i];\\n                b += p2[i];\\n            }\\n            else {\\n                if(i == 1) {\\n                    if(p1[i - 1] == 10) a += (2 * p1[i]);\\n                    else a += p1[i];\\n                    if(p2[i - 1] == 10) b += (2 * p2[i]);\\n                    else b += p2[i];\\n                }\\n                else {\\n                    if(p1[i - 1] == 10 || p1[i - 2] == 10) a += (2 * p1[i]);\\n                    else a += p1[i];\\n                    if(p2[i - 1] == 10 || p2[i - 2] == 10) b += (2 * p2[i]);\\n                    else b += p2[i];\\n                }\\n            }\\n        }\\n        if(a > b) return 1;\\n        if(a < b) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& p1, vector<int>& p2) {\\n        int a = 0, b = 0;\\n        for(int i = 0; i < p1.size(); i++) {\\n            if(i == 0) {\\n                a += p1[i];\\n                b += p2[i];\\n            }\\n            else {\\n                if(i == 1) {\\n                    if(p1[i - 1] == 10) a += (2 * p1[i]);\\n                    else a += p1[i];\\n                    if(p2[i - 1] == 10) b += (2 * p2[i]);\\n                    else b += p2[i];\\n                }\\n                else {\\n                    if(p1[i - 1] == 10 || p1[i - 2] == 10) a += (2 * p1[i]);\\n                    else a += p1[i];\\n                    if(p2[i - 1] == 10 || p2[i - 2] == 10) b += (2 * p2[i]);\\n                    else b += p2[i];\\n                }\\n            }\\n        }\\n        if(a > b) return 1;\\n        if(a < b) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468312,
                "title": "java-simple-solution",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  public int isWinner(int[] player1, int[] player2) {\\n    int n = player1.length, p1, p2;\\n    \\n    for (var i=0; i<n; i++) {\\n      p1 += player1[i];\\n      p2 += player2[i];\\n      \\n      if ((i>0 && player1[i-1] == 10) ||\\n          (i>1 && player1[i-2] == 10))\\n        p1 += player1[i];\\n      \\n      if ((i>0 && player2[i-1] == 10) ||\\n          (i>1 && player2[i-2] == 10))\\n        p2 += player2[i];\\n    }\\n    return p1 == p2 ? 0 : (p1 > p2 ? 1 : 2);\\n  }\\n}\\n```\\nIf you like my solution, please upvote it!",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n  public int isWinner(int[] player1, int[] player2) {\\n    int n = player1.length, p1, p2;\\n    \\n    for (var i=0; i<n; i++) {\\n      p1 += player1[i];\\n      p2 += player2[i];\\n      \\n      if ((i>0 && player1[i-1] == 10) ||\\n          (i>1 && player1[i-2] == 10))\\n        p1 += player1[i];\\n      \\n      if ((i>0 && player2[i-1] == 10) ||\\n          (i>1 && player2[i-2] == 10))\\n        p2 += player2[i];\\n    }\\n    return p1 == p2 ? 0 : (p1 > p2 ? 1 : 2);\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3492083,
                "title": "math-easy-to-understand-c",
                "content": "# Intuition\\nCHECK FOR i-1 or i-2 there is 10 or not if yes than increment player score 2*v[i] else v[i]\\n\\n# Approach\\nsimple linear traversal\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\n(1))\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& v1, vector<int>& v2) {\\n        int x = v1[0], y = v2[0];//for size 1 score = index 0 score\\n        i = 0, n = v1.size();\\n        for(i = 1; i < n; i++){\\n            if(i==1){//for index 1 check for index 0\\n                if(v1[i-1]==10)x += v1[i]*2;\\n                else x += v1[i];\\n                if(v2[i-1]==10)y += v2[i]*2;\\n                else y += v2[i];\\n            }else{//for other indexs check for i-1 || i-2\\n                if(v1[i-1]==10||v1[i-2]==10)x += v1[i]*2;\\n                else x += v1[i];\\n                if(v2[i-1]==10||v2[i-2]==10)y += v2[i]*2;\\n                else y += v2[i];\\n            }\\n        }\\n        if(x>y)return 1;\\n        if(y>x)return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& v1, vector<int>& v2) {\\n        int x = v1[0], y = v2[0];//for size 1 score = index 0 score\\n        i = 0, n = v1.size();\\n        for(i = 1; i < n; i++){\\n            if(i==1){//for index 1 check for index 0\\n                if(v1[i-1]==10)x += v1[i]*2;\\n                else x += v1[i];\\n                if(v2[i-1]==10)y += v2[i]*2;\\n                else y += v2[i];\\n            }else{//for other indexs check for i-1 || i-2\\n                if(v1[i-1]==10||v1[i-2]==10)x += v1[i]*2;\\n                else x += v1[i];\\n                if(v2[i-1]==10||v2[i-2]==10)y += v2[i]*2;\\n                else y += v2[i];\\n            }\\n        }\\n        if(x>y)return 1;\\n        if(y>x)return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469409,
                "title": "python-elegant-short",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player_a: List[int], player_b: List[int]) -> int:\\n        score_a = self.get_score(player_a)\\n        score_b = self.get_score(player_b)\\n\\n        return {\\n            score_a > score_b: 1,\\n            score_a < score_b: 2,\\n        }.get(True, 0)\\n\\n    @staticmethod\\n    def get_score(player: List[int]) -> int:\\n        score = 0\\n\\n        for i, sc in enumerate(player):\\n            if i > 0 and player[i - 1] == 10:\\n                score += 2 * sc\\n            elif i > 1 and player[i - 2] == 10:\\n                score += 2 * sc\\n            else:\\n                score += sc\\n\\n        return score\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player_a: List[int], player_b: List[int]) -> int:\\n        score_a = self.get_score(player_a)\\n        score_b = self.get_score(player_b)\\n\\n        return {\\n            score_a > score_b: 1,\\n            score_a < score_b: 2,\\n        }.get(True, 0)\\n\\n    @staticmethod\\n    def get_score(player: List[int]) -> int:\\n        score = 0\\n\\n        for i, sc in enumerate(player):\\n            if i > 0 and player[i - 1] == 10:\\n                score += 2 * sc\\n            elif i > 1 and player[i - 2] == 10:\\n                score += 2 * sc\\n            else:\\n                score += sc\\n\\n        return score\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468562,
                "title": "easy-and-simple-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\ntraverse and check the previous 2\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n-here we set a variable named \\'set\\' that works when it is near the 2 or 1 only as it is moving forward it will decrease \\n-use this in the function and check for the both the vectors\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int getcount(vector<int>& a)\\n    {\\n        int count=0,set=0;\\n        for(int i=0;i<a.size();i++)\\n        {\\n            if(set)\\n            {\\n                count+=2*a[i];\\n                set--;\\n            }\\n            else\\n            {\\n                count+=a[i];\\n            }\\n            if(a[i]==10)\\n            set=2;\\n        }\\n        return count;\\n\\n    }\\n\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n        int first=getcount(player1);\\n        int second=getcount(player2);\\n        if(first>second)\\n        return 1;\\n        else if(second>first)\\n        return 2;\\n        return 0;        \\n    }\\n};\\n```\\n# upvote me if you like the solution comment if any doubts\\n![images.jpeg](https://assets.leetcode.com/users/images/104d4992-67f5-4b9b-aab4-0b17af99b548_1682830426.6456287.jpeg)\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int getcount(vector<int>& a)\\n    {\\n        int count=0,set=0;\\n        for(int i=0;i<a.size();i++)\\n        {\\n            if(set)\\n            {\\n                count+=2*a[i];\\n                set--;\\n            }\\n            else\\n            {\\n                count+=a[i];\\n            }\\n            if(a[i]==10)\\n            set=2;\\n        }\\n        return count;\\n\\n    }\\n\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n        int first=getcount(player1);\\n        int second=getcount(player2);\\n        if(first>second)\\n        return 1;\\n        else if(second>first)\\n        return 2;\\n        return 0;        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468480,
                "title": "easy-short-java-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] p1, int[] p2) {\\n        int a1=0, a2=0;\\n            for(int i=0; i<p1.length; i++){\\n                a1+= p1[i];\\n                a2+= p2[i];  \\n                a1 += i>0 && p1[i-1] == 10 || i>1 && p1[i-2] ==10 ? p1[i]: 0;                  \\n                a2 += i>0 && p2[i-1] == 10 || i>1 && p2[i-2] ==10 ? p2[i]: 0;\\n            }\\n             return a1>a2 ? 1 : (a2>a1 ? 2 : 0);\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] p1, int[] p2) {\\n        int a1=0, a2=0;\\n            for(int i=0; i<p1.length; i++){\\n                a1+= p1[i];\\n                a2+= p2[i];  \\n                a1 += i>0 && p1[i-1] == 10 || i>1 && p1[i-2] ==10 ? p1[i]: 0;                  \\n                a2 += i>0 && p2[i-1] == 10 || i>1 && p2[i-2] ==10 ? p2[i]: 0;\\n            }\\n             return a1>a2 ? 1 : (a2>a1 ? 2 : 0);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468446,
                "title": "c-best-solution-100-faster-easy-to-understand",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n         int cnt1=0, cnt2=0, player1_Value=0, player2_Value=0;\\n        \\n        for(int i=0; i<player1.size(); i++) {\\n            if(cnt1 > 0)    {\\n                player1_Value += (2*player1[i]);\\n                cnt1--;\\n            }\\n            else    player1_Value += player1[i];\\n            if(player1[i] == 10)    cnt1 = 2;\\n            \\n            if(cnt2 > 0)    {\\n                player2_Value += (2*player2[i]);\\n                cnt2--;\\n            }\\n            else    player2_Value += player2[i];\\n            if(player2[i] == 10)    cnt2 = 2;\\n        }\\n        \\n        if(player1_Value == player2_Value)    return 0;\\n        if(player1_Value > player2_Value)     return 1;\\n        return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n         int cnt1=0, cnt2=0, player1_Value=0, player2_Value=0;\\n        \\n        for(int i=0; i<player1.size(); i++) {\\n            if(cnt1 > 0)    {\\n                player1_Value += (2*player1[i]);\\n                cnt1--;\\n            }\\n            else    player1_Value += player1[i];\\n            if(player1[i] == 10)    cnt1 = 2;\\n            \\n            if(cnt2 > 0)    {\\n                player2_Value += (2*player2[i]);\\n                cnt2--;\\n            }\\n            else    player2_Value += player2[i];\\n            if(player2[i] == 10)    cnt2 = 2;\\n        }\\n        \\n        if(player1_Value == player2_Value)    return 0;\\n        if(player1_Value > player2_Value)     return 1;\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468342,
                "title": "time-o-n-space-o-1-c-simple-easy-solution",
                "content": "````\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int x = 0, y = 0;\\n        int i = 0, n = player1.size();\\n        for(i = 0; i < n; i++){\\n            if(i==0){\\n                x += player1[i];\\n            }else if(i==1){\\n                if(player1[i-1]==10){\\n                    x += player1[i]*2;\\n                }else{\\n                    x += player1[i];\\n                }\\n            }else{\\n                if(player1[i-1]==10||player1[i-2]==10){\\n                    x += player1[i]*2;\\n                }else{\\n                    x += player1[i];\\n                }\\n            }\\n        }\\n        for(i = 0; i < n; i++){\\n            if(i==0){\\n                y += player2[i];\\n            }else if(i==1){\\n                if(player2[i-1]==10){\\n                    y += player2[i]*2;\\n                }else{\\n                    y += player2[i];\\n                }\\n            }else{\\n                if(player2[i-1]==10||player2[i-2]==10){\\n                    y += player2[i]*2;\\n                }else{\\n                    y += player2[i];\\n                }\\n            }\\n        }\\n        cout<<x<<\" \"<<y;\\n        if(x>y)return 1;\\n        else if(x<y)return 2;\\n        return 0;\\n    }\\n};\\n````",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "````\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int x = 0, y = 0;\\n        int i = 0, n = player1.size();\\n        for(i = 0; i < n; i++){\\n            if(i==0){\\n                x += player1[i];\\n            }else if(i==1){\\n                if(player1[i-1]==10){\\n                    x += player1[i]*2;\\n                }else{\\n                    x += player1[i];\\n                }\\n            }else{\\n                if(player1[i-1]==10||player1[i-2]==10){\\n                    x += player1[i]*2;\\n                }else{\\n                    x += player1[i];\\n                }\\n            }\\n        }\\n        for(i = 0; i < n; i++){\\n            if(i==0){\\n                y += player2[i];\\n            }else if(i==1){\\n                if(player2[i-1]==10){\\n                    y += player2[i]*2;\\n                }else{\\n                    y += player2[i];\\n                }\\n            }else{\\n                if(player2[i-1]==10||player2[i-2]==10){\\n                    y += player2[i]*2;\\n                }else{\\n                    y += player2[i];\\n                }\\n            }\\n        }\\n        cout<<x<<\" \"<<y;\\n        if(x>y)return 1;\\n        else if(x<y)return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3468309,
                "title": "c-solutions-easy-to-understand-full-explanaiton-line-by-line",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe code is written to solve a problem related to a game of bowling. The function isWinner takes in two vectors, player1 and player2, that represent the scores of the two players in the game.\\n\\nThe fn lambda function calculates the total score for a given player\\'s vector. It does so by iterating through each frame and adding up the scores. If the current frame is a strike or spare, it adds bonus points accordingly.\\n\\nThe isWinner function then calculates the score difference between player1 and player2 by calling the fn function for each player\\'s vector. If player1\\'s score is greater, it returns 1 to indicate that player1 wins. If player2\\'s score is greater, it returns 2 to indicate that player2 wins. If both scores are equal, it returns 0 to indicate a tie.\\n\\nOverall, the code is intuitive in its approach and easy to understand. It uses lambda functions to reduce code duplication and improve readability. The use of simple if-else statements to determine the winner based on score difference is straightforward and easy to follow.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThis code defines a function named isWinner that takes two vectors player1 and player2 representing the scores of two players in a game of bowling.\\n\\nThe function first defines a lambda function named fn that takes an integer vector as an argument. This lambda function iterates over each element of the vector and adds up the score for each frame. If the current frame is a strike (10 pins knocked down on the first ball) or a spare (10 pins knocked down in two balls), it adds extra points accordingly. The lambda function returns the total score for the given vector.\\n\\nThe isWinner function then calls the fn function with player1 and player2 vectors to calculate their respective scores. It then calculates the difference between the two scores and returns 1 if player1 wins, 2 if player2 wins, and 0 if it\\'s a tie.\\n\\nOverall, the code follows a simple approach to calculate the total scores for both players and determine the winner based on their score difference. The use of a lambda function makes the code more concise and reusable, allowing the fn function to be called multiple times with different vectors.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe fn lambda function iterates over each element of the vector and performs a constant amount of work for each element. Therefore, the time complexity of fn is O(n), where n is the length of the input vector.\\n\\nThe isWinner function calls fn twice and performs a constant amount of additional work to calculate the score difference and determine the winner. Therefore, the time complexity of isWinner is O(n), where n is the length of the input vectors.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe fn lambda function does not allocate any additional memory other than the input vector. Therefore, the space complexity of fn is O(1).\\n\\nThe isWinner function uses a constant amount of additional memory to store the scores and score difference. Therefore, the space complexity of isWinner is O(1).\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    // Define a function named isWinner that takes two integer vectors as arguments\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n    // Define a lambda function named fn that takes an integer vector as an argument\\n    auto fn = [&](vector<int>& p) {\\n        // Initialize a variable named ans to 0\\n        int ans = 0; \\n        // Loop through each element of the vector\\n        for (int i = 0; i < p.size(); ++i) {\\n            // Add the current element to ans\\n            ans += p[i]; \\n            // If the previous element is 10, add the current element to ans\\n            // If the element two positions back is 10, add the current element to ans\\n            if (i && p[i-1] == 10 || i >= 2 && p[i-2] == 10) ans += p[i]; \\n        }\\n        // Return the value of ans\\n        return ans; \\n    }; \\n    \\n    // Calculate the score of player1 by calling the fn function with player1 vector\\n    int player1_score = fn(player1);\\n    // Calculate the score of player2 by calling the fn function with player2 vector\\n    int player2_score = fn(player2);\\n    \\n    // Calculate the difference between the two scores\\n    int score_diff = player1_score - player2_score; \\n    // If player1\\'s score is greater than player2\\'s score, return 1 (player1 wins)\\n    if (score_diff > 0) return 1; \\n    // If player2\\'s score is greater than player1\\'s score, return 2 (player2 wins)\\n    else if (score_diff < 0) return 2; \\n    // If both scores are equal, return 0 (tie)\\n    return 0; \\n}\\n\\n};\\n```\\n\\n\\n\\n\\n\\n# Code without comments\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        auto fn = [&](vector<int>& p) {\\n            int ans = 0; \\n            for (int i = 0; i < p.size(); ++i) {\\n                ans += p[i]; \\n                if (i && p[i-1] == 10 || i >= 2 && p[i-2] == 10) ans += p[i]; \\n            }\\n            return ans; \\n        }; \\n        \\n        int x = fn(player1) - fn(player2); \\n        if (x > 0) return 1; \\n        else if (x < 0) return 2; \\n        return 0; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    // Define a function named isWinner that takes two integer vectors as arguments\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n    // Define a lambda function named fn that takes an integer vector as an argument\\n    auto fn = [&](vector<int>& p) {\\n        // Initialize a variable named ans to 0\\n        int ans = 0; \\n        // Loop through each element of the vector\\n        for (int i = 0; i < p.size(); ++i) {\\n            // Add the current element to ans\\n            ans += p[i]; \\n            // If the previous element is 10, add the current element to ans\\n            // If the element two positions back is 10, add the current element to ans\\n            if (i && p[i-1] == 10 || i >= 2 && p[i-2] == 10) ans += p[i]; \\n        }\\n        // Return the value of ans\\n        return ans; \\n    }; \\n    \\n    // Calculate the score of player1 by calling the fn function with player1 vector\\n    int player1_score = fn(player1);\\n    // Calculate the score of player2 by calling the fn function with player2 vector\\n    int player2_score = fn(player2);\\n    \\n    // Calculate the difference between the two scores\\n    int score_diff = player1_score - player2_score; \\n    // If player1\\'s score is greater than player2\\'s score, return 1 (player1 wins)\\n    if (score_diff > 0) return 1; \\n    // If player2\\'s score is greater than player1\\'s score, return 2 (player2 wins)\\n    else if (score_diff < 0) return 2; \\n    // If both scores are equal, return 0 (tie)\\n    return 0; \\n}\\n\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        auto fn = [&](vector<int>& p) {\\n            int ans = 0; \\n            for (int i = 0; i < p.size(); ++i) {\\n                ans += p[i]; \\n                if (i && p[i-1] == 10 || i >= 2 && p[i-2] == 10) ans += p[i]; \\n            }\\n            return ans; \\n        }; \\n        \\n        int x = fn(player1) - fn(player2); \\n        if (x > 0) return 1; \\n        else if (x < 0) return 2; \\n        return 0; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3825291,
                "title": "python-3-simulation-beats-100-234ms",
                "content": "```python3 []\\nclass Solution:\\n    def getSum(nums):\\n            res, prev1, prev2 = 0, 0, 0\\n            for n in nums:\\n                if prev1 == 10 or prev2 == 10:\\n                    res += 2*n\\n                else:\\n                    res += n\\n                prev2, prev1 = prev1, n\\n            return res\\n\\n        s1, s2 = getSum(player1), getSum(player2)\\n\\n        if s2 > s1: return 2\\n        if s1 > s2: return 1\\n        return 0\\n```\\n![Screenshot 2023-07-27 at 21.20.20.png](https://assets.leetcode.com/users/images/ed58e8d4-873d-4fcd-8c2d-d909cfd2514a_1690482073.2618957.png)\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Simulation"
                ],
                "code": "```python3 []\\nclass Solution:\\n    def getSum(nums):\\n            res, prev1, prev2 = 0, 0, 0\\n            for n in nums:\\n                if prev1 == 10 or prev2 == 10:\\n                    res += 2*n\\n                else:\\n                    res += n\\n                prev2, prev1 = prev1, n\\n            return res\\n\\n        s1, s2 = getSum(player1), getSum(player2)\\n\\n        if s2 > s1: return 2\\n        if s1 > s2: return 1\\n        return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3470872,
                "title": "determine-the-winner-of-a-bowling-game-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int i, p1=0, p2=0;\\n\\n        // Player 1 points\\n        for(i=0 ; i<player1.size() ; i++)\\n        {\\n            if((i>=1 && player1[i-1]==10) || (i>=2 && player1[i-2]==10))\\n            {\\n                p1 += 2*player1[i];\\n            }\\n            else\\n            {\\n                p1 += player1[i];\\n            }\\n        }\\n\\n        // Player 2 points\\n        for(i=0 ; i<player2.size() ; i++)\\n        {\\n            if((i>=1 && player2[i-1]==10) || (i>=2 && player2[i-2]==10))\\n            {\\n                p2 += 2*player2[i];\\n            }\\n            else\\n            {\\n                p2 += player2[i];\\n            }\\n        }\\n\\n        //Results\\n        if(p1>p2)\\n            return 1;\\n        else if(p1==p2)\\n            return 0;\\n        return 2;\\n    }\\n};\\n```\\n![upvote new.jpg](https://assets.leetcode.com/users/images/6ec5af97-5e28-494f-a4bc-96daa77317ce_1682879966.8972776.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int i, p1=0, p2=0;\\n\\n        // Player 1 points\\n        for(i=0 ; i<player1.size() ; i++)\\n        {\\n            if((i>=1 && player1[i-1]==10) || (i>=2 && player1[i-2]==10))\\n            {\\n                p1 += 2*player1[i];\\n            }\\n            else\\n            {\\n                p1 += player1[i];\\n            }\\n        }\\n\\n        // Player 2 points\\n        for(i=0 ; i<player2.size() ; i++)\\n        {\\n            if((i>=1 && player2[i-1]==10) || (i>=2 && player2[i-2]==10))\\n            {\\n                p2 += 2*player2[i];\\n            }\\n            else\\n            {\\n                p2 += player2[i];\\n            }\\n        }\\n\\n        //Results\\n        if(p1>p2)\\n            return 1;\\n        else if(p1==p2)\\n            return 0;\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469173,
                "title": "python3-straightforward-solution-with-explanation",
                "content": "We want to calculate the sum of all scores, while doubling the next two scores if we meet 10. To do this, we iterate over the loop, accumulating the sum each iteration **score**. If we meet 10, we once again add the current result **nums[i]** to the total **score** and subtract 1 from the doubling counter **doubles**. If the counter is 0, then we skip doubling the next iteration until we update the counter **doubles** again.\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def score(nums):\\n            score = 0\\n            flag = False\\n\\n            for i in range(len(nums)):\\n                score += nums[i]\\n\\n                if flag:\\n                    score += nums[i]\\n                    doubles -= 1\\n\\n                    if doubles == 0:\\n                        flag = False\\n\\n                if nums[i] == 10:\\n                    doubles = 2\\n                    flag = True\\n                    \\n            return score\\n        \\n        score1, score2 = score(player1), score(player2)\\n        \\n        if score1 == score2:\\n            return 0\\n        elif score1 > score2:\\n            return 1\\n        else:\\n            return 2\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def score(nums):\\n            score = 0\\n            flag = False\\n\\n            for i in range(len(nums)):\\n                score += nums[i]\\n\\n                if flag:\\n                    score += nums[i]\\n                    doubles -= 1\\n\\n                    if doubles == 0:\\n                        flag = False\\n\\n                if nums[i] == 10:\\n                    doubles = 2\\n                    flag = True\\n                    \\n            return score\\n        \\n        score1, score2 = score(player1), score(player2)\\n        \\n        if score1 == score2:\\n            return 0\\n        elif score1 > score2:\\n            return 1\\n        else:\\n            return 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468551,
                "title": "simplest-if-else-solution-nothing-else",
                "content": "# Intuition\\njust do what is asked and add a base case for arr[1]\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nsimple if else approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int len=player1.length;\\n        int a1[]= new int [len];\\n        int a2[]= new int [len];\\n        \\n        a1[0]= player1[0];\\n        a2[0]= player2[0];\\n        \\n        if(len>1){\\n            if(player1[0]!=10)\\n                a1[1]=player1[1];\\n            else\\n                a1[1]=player1[1]*2;\\n            \\n            if(player2[0]!=10)\\n                a2[1]=player2[1];\\n            else\\n                a2[1]=player2[1]*2;\\n        }\\n        for(int i=2;i<len;i++){\\n            if(player1[i-1]==10 ||player1[i-2]==10){\\n                a1[i]=player1[i]*2;\\n            }\\n            else\\n                a1[i]=player1[i];\\n        \\n        if(player2[i-1]==10 ||player2[i-2]==10){\\n                a2[i]=player2[i]*2;\\n            }\\n            else\\n                a2[i]=player2[i];\\n        }\\n        int s1=0;\\n        int s2=0;\\n        \\n        for(int i=0;i<len;i++){\\n            s1+=a1[i];\\n            s2+=a2[i];\\n        }\\n        if(s1>s2)\\n            return 1;\\n        else if(s2> s1)\\n            return 2;\\n        else \\n            return 0;\\n        \\n        \\n    }\\n}\\n\\n```\\n![images.jpeg](https://assets.leetcode.com/users/images/4f433525-656e-4649-92f3-bf73c0460045_1682830193.917968.jpeg)",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int len=player1.length;\\n        int a1[]= new int [len];\\n        int a2[]= new int [len];\\n        \\n        a1[0]= player1[0];\\n        a2[0]= player2[0];\\n        \\n        if(len>1){\\n            if(player1[0]!=10)\\n                a1[1]=player1[1];\\n            else\\n                a1[1]=player1[1]*2;\\n            \\n            if(player2[0]!=10)\\n                a2[1]=player2[1];\\n            else\\n                a2[1]=player2[1]*2;\\n        }\\n        for(int i=2;i<len;i++){\\n            if(player1[i-1]==10 ||player1[i-2]==10){\\n                a1[i]=player1[i]*2;\\n            }\\n            else\\n                a1[i]=player1[i];\\n        \\n        if(player2[i-1]==10 ||player2[i-2]==10){\\n                a2[i]=player2[i]*2;\\n            }\\n            else\\n                a2[i]=player2[i];\\n        }\\n        int s1=0;\\n        int s2=0;\\n        \\n        for(int i=0;i<len;i++){\\n            s1+=a1[i];\\n            s2+=a2[i];\\n        }\\n        if(s1>s2)\\n            return 1;\\n        else if(s2> s1)\\n            return 2;\\n        else \\n            return 0;\\n        \\n        \\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468368,
                "title": "easy-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1 = 0, score2 = 0;\\n        for (size_t i = 0; i < player1.size(); i++)\\n        {\\n            if ((i > 0 && player1[i - 1] == 10) || (i > 1 && player1[i - 2] == 10))\\n                score1 += 2 * player1[i];\\n            else\\n                score1+= player1[i];\\n        }\\n \\n        for (size_t i = 0; i < player2.size(); i++)\\n        {\\n            if ((i > 0 && player2[i - 1] == 10) || (i > 1 && player2[i - 2] == 10))\\n                score2 += 2 * player2[i];\\n            else\\n                score2 += player2[i];\\n        }\\n \\n        return (score1 == score2 ? 0 : (score1 > score2 ? 1 : 2));\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1 = 0, score2 = 0;\\n        for (size_t i = 0; i < player1.size(); i++)\\n        {\\n            if ((i > 0 && player1[i - 1] == 10) || (i > 1 && player1[i - 2] == 10))\\n                score1 += 2 * player1[i];\\n            else\\n                score1+= player1[i];\\n        }\\n \\n        for (size_t i = 0; i < player2.size(); i++)\\n        {\\n            if ((i > 0 && player2[i - 1] == 10) || (i > 1 && player2[i - 2] == 10))\\n                score2 += 2 * player2[i];\\n            else\\n                score2 += player2[i];\\n        }\\n \\n        return (score1 == score2 ? 0 : (score1 > score2 ? 1 : 2));\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3930975,
                "title": "java-best-solution-100-beats",
                "content": "# Code\\n```\\nclass Solution{\\n    public int isWinner(int[] p1, int[] p2){\\n        int n = p1.length;\\n        int a=p1[0], b=p2[0];\\n        if(n==1){\\n            if(a>b) return 1;\\n            else if(b>a) return 2;\\n            return 0;\\n        }\\n        if(a==10) a += 2*p1[1];\\n        else a += p1[1];\\n        if(b==10) b += 2*p2[1];\\n        else b += p2[1];\\n        for(int i=2; i<n; i++){\\n            if(p1[i-1]==10 || p1[i-2]==10) a += 2*p1[i];\\n            else a += p1[i];\\n            if(p2[i-1]==10 || p2[i-2]==10) b += 2*p2[i];\\n            else b += p2[i];\\n        }\\n        if(a>b) return 1;\\n        else if(b>a) return 2;\\n        return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution{\\n    public int isWinner(int[] p1, int[] p2){\\n        int n = p1.length;\\n        int a=p1[0], b=p2[0];\\n        if(n==1){\\n            if(a>b) return 1;\\n            else if(b>a) return 2;\\n            return 0;\\n        }\\n        if(a==10) a += 2*p1[1];\\n        else a += p1[1];\\n        if(b==10) b += 2*p2[1];\\n        else b += p2[1];\\n        for(int i=2; i<n; i++){\\n            if(p1[i-1]==10 || p1[i-2]==10) a += 2*p1[i];\\n            else a += p1[i];\\n            if(p2[i-1]==10 || p2[i-2]==10) b += 2*p2[i];\\n            else b += p2[i];\\n        }\\n        if(a>b) return 1;\\n        else if(b>a) return 2;\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3808115,
                "title": "99-success-rate-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int i=1,j=i-1,k=i-2;\\n        int p1=player1[0],p2=player2[0];\\n        while(i<player1.length){\\n            if((j>=0 && player1[j]==10 ) || (k>=0 && player1[k]==10)){\\n                p1+=2*player1[i];\\n            }\\n            else{\\n                p1+=player1[i];\\n            }\\n            i++;\\n            j++;\\n            k++;\\n        }\\n        int l=1,m=l-1,n=l-2;\\n        while(l<player2.length){\\n            if((m>=0 && player2[m]==10 ) || (n>=0 && player2[n]==10)){\\n                p2+=2*player2[l];\\n            }\\n            else{\\n                p2+=player2[l];\\n            }\\n            l++;\\n            m++;\\n            n++;\\n        }\\n        if(p1>p2) return 1;\\n        else if(p1==p2) return 0;\\n        else return 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int i=1,j=i-1,k=i-2;\\n        int p1=player1[0],p2=player2[0];\\n        while(i<player1.length){\\n            if((j>=0 && player1[j]==10 ) || (k>=0 && player1[k]==10)){\\n                p1+=2*player1[i];\\n            }\\n            else{\\n                p1+=player1[i];\\n            }\\n            i++;\\n            j++;\\n            k++;\\n        }\\n        int l=1,m=l-1,n=l-2;\\n        while(l<player2.length){\\n            if((m>=0 && player2[m]==10 ) || (n>=0 && player2[n]==10)){\\n                p2+=2*player2[l];\\n            }\\n            else{\\n                p2+=player2[l];\\n            }\\n            l++;\\n            m++;\\n            n++;\\n        }\\n        if(p1>p2) return 1;\\n        else if(p1==p2) return 0;\\n        else return 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3694869,
                "title": "js-ts-simple-solution",
                "content": "Just go through the numbers array and check the previous 2 elements to get the correct score according to the requirements and then compare the two scores at the end to return 0, 1 or 2.\\n\\n# Code\\n```\\nconst isWinner = (player1: number[], player2: number[]): number => {\\n\\n    let player1Score = 0;\\n    let player2Score = 0;\\n\\n    const getScoreFromNumbers = (numbers:number[]): number => {\\n\\n        let score = 0;\\n\\n        for(let i = 0; i < numbers.length; i++) {\\n            if(numbers[i - 1] === 10 || numbers[i - 2] === 10) {\\n                score += numbers[i] * 2;\\n            } else {\\n                score += numbers[i];\\n            }\\n        }\\n\\n        return score;\\n    };\\n\\n    player1Score = getScoreFromNumbers(player1);\\n    player2Score = getScoreFromNumbers(player2);\\n    \\n    if(player1Score === player2Score) return 0;\\n\\n    return player1Score > player2Score ? 1 : 2;\\n\\n};\\n```\\nSee more `TypeScript`/`JavaScript` (and other language) LeetCode solutions at https://github.com/jasonmauss/LeetCode",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nconst isWinner = (player1: number[], player2: number[]): number => {\\n\\n    let player1Score = 0;\\n    let player2Score = 0;\\n\\n    const getScoreFromNumbers = (numbers:number[]): number => {\\n\\n        let score = 0;\\n\\n        for(let i = 0; i < numbers.length; i++) {\\n            if(numbers[i - 1] === 10 || numbers[i - 2] === 10) {\\n                score += numbers[i] * 2;\\n            } else {\\n                score += numbers[i];\\n            }\\n        }\\n\\n        return score;\\n    };\\n\\n    player1Score = getScoreFromNumbers(player1);\\n    player2Score = getScoreFromNumbers(player2);\\n    \\n    if(player1Score === player2Score) return 0;\\n\\n    return player1Score > player2Score ? 1 : 2;\\n\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3588173,
                "title": "use-simple-conditionals-o-n-time-o-1-space-complexity-beats-99",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(N+M)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\nN,M are the legths of two given Arrays.\\n\\n- **An Upvote will be encouraging \\uD83D\\uDC4D**\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=player1[0];\\n        int sum2=player2[0];\\n        for(int i=1;i<player1.length;i++){\\n            if(player1[i-1]==10 ){\\n                sum1+=2*player1[i];\\n            }\\n            else if( i!=1 && player1[i-2]==10 ){\\n                sum1+=2*player1[i];\\n            }\\n            else{\\n                sum1+=player1[i];\\n            }\\n            \\n        }\\n        for(int i=1;i<player2.length;i++){\\n            if(player2[i-1]==10 ){\\n                sum2+=2*player2[i];\\n            }\\n            else if( i!=1 && player2[i-2]==10 ){\\n                sum2+=2*player2[i];\\n            }\\n            else{\\n                sum2+=player2[i];\\n            }\\n        }\\n            return sum1>sum2?1:sum1==sum2?0:2;\\n    }\\n}\\n```\\n![image.png](https://assets.leetcode.com/users/images/73ee6b4d-5c9d-4985-8d77-1ad9eff736b8_1685683542.998519.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1=player1[0];\\n        int sum2=player2[0];\\n        for(int i=1;i<player1.length;i++){\\n            if(player1[i-1]==10 ){\\n                sum1+=2*player1[i];\\n            }\\n            else if( i!=1 && player1[i-2]==10 ){\\n                sum1+=2*player1[i];\\n            }\\n            else{\\n                sum1+=player1[i];\\n            }\\n            \\n        }\\n        for(int i=1;i<player2.length;i++){\\n            if(player2[i-1]==10 ){\\n                sum2+=2*player2[i];\\n            }\\n            else if( i!=1 && player2[i-2]==10 ){\\n                sum2+=2*player2[i];\\n            }\\n            else{\\n                sum2+=player2[i];\\n            }\\n        }\\n            return sum1>sum2?1:sum1==sum2?0:2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3533827,
                "title": "easiest-python-solution",
                "content": "# Intuition\\nusing for loop and few conditions\\n\\n# Approach\\n\\n\\n# Complexity\\n- Time complexity:\\no(n)\\n\\n- Space complexity:\\no(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, nums1: List[int], nums2: List[int]) -> int:\\n        res1=0\\n        res2=0\\n        if 10 in nums1 and len(nums1)>1:\\n            res1+=nums1[0]\\n            for i in range(1,len(nums1)):\\n                res1+=nums1[i]\\n                if nums1[i-1]==10 or i>=2 and nums1[i-2]==10:\\n                        res1+=nums1[i]\\n                else:\\n                    pass\\n        else:\\n            res1=sum(nums1)\\n        if 10 in nums2 and len(nums2)>1:\\n            res2+=nums2[0]\\n            for i in range(1,len(nums2)):\\n                res2+=nums2[i]\\n\\n                if nums2[i-1]==10 or i>=2 and nums2[i-2]==10:\\n                        res2+=nums2[i]\\n                else:\\n                    pass\\n        else:\\n            res2=sum(nums2)\\n\\n        # print(1 if res1>res2 2: if res2>res1: 0 if res1==res2)\\n        if res1>res2:\\n            return(1)\\n        elif res1<res2:\\n            return(2)\\n        else:\\n            return(0)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, nums1: List[int], nums2: List[int]) -> int:\\n        res1=0\\n        res2=0\\n        if 10 in nums1 and len(nums1)>1:\\n            res1+=nums1[0]\\n            for i in range(1,len(nums1)):\\n                res1+=nums1[i]\\n                if nums1[i-1]==10 or i>=2 and nums1[i-2]==10:\\n                        res1+=nums1[i]\\n                else:\\n                    pass\\n        else:\\n            res1=sum(nums1)\\n        if 10 in nums2 and len(nums2)>1:\\n            res2+=nums2[0]\\n            for i in range(1,len(nums2)):\\n                res2+=nums2[i]\\n\\n                if nums2[i-1]==10 or i>=2 and nums2[i-2]==10:\\n                        res2+=nums2[i]\\n                else:\\n                    pass\\n        else:\\n            res2=sum(nums2)\\n\\n        # print(1 if res1>res2 2: if res2>res1: 0 if res1==res2)\\n        if res1>res2:\\n            return(1)\\n        elif res1<res2:\\n            return(2)\\n        else:\\n            return(0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3488608,
                "title": "c-solution-brute-force",
                "content": "## Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1=player1[0], p2=player2[0];\\n        int n= player1.size();\\n        if (n>1){\\n            if (p1==10)p1+= player1[1]*2;\\n            else p1+= player1[1];\\n            if (p2==10)p2+= player2[1]*2;\\n            else p2+= player2[1];\\n            for (int i=2; i<n; i++){\\n                if (player1[i-1]==10 || player1[i-2]==10){\\n                    p1+= (2*player1[i]);\\n                }\\n                else p1+= player1[i];\\n                if (player2[i-1]==10 || player2[i-2]==10){\\n                    p2+= (2*player2[i]);\\n                }\\n                else p2+= player2[i];\\n            }\\n        }\\n        if (p1==p2)return 0;\\n        if (p1>p2)return 1;\\n        else return 2;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1=player1[0], p2=player2[0];\\n        int n= player1.size();\\n        if (n>1){\\n            if (p1==10)p1+= player1[1]*2;\\n            else p1+= player1[1];\\n            if (p2==10)p2+= player2[1]*2;\\n            else p2+= player2[1];\\n            for (int i=2; i<n; i++){\\n                if (player1[i-1]==10 || player1[i-2]==10){\\n                    p1+= (2*player1[i]);\\n                }\\n                else p1+= player1[i];\\n                if (player2[i-1]==10 || player2[i-2]==10){\\n                    p2+= (2*player2[i]);\\n                }\\n                else p2+= player2[i];\\n            }\\n        }\\n        if (p1==p2)return 0;\\n        if (p1>p2)return 1;\\n        else return 2;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3478120,
                "title": "c-brute-force-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n\\n- Space complexity:$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1=0, sum2=0, cnt1=1, cnt2=1;\\n        for(int i=0; i<player1.size(); i++){\\n            sum1+=player1[i];\\n        }\\n        for(int i=0; i<player2.size(); i++){\\n            sum2+=player2[i];\\n        }\\n        if(player1.size()>1){\\n            if(player1[0]==10){\\n                sum1+=player1[1];\\n            }\\n        }\\n        if(player2.size()>1){\\n            if(player2[0]==10){\\n                sum2+=player2[1];\\n            }\\n        }\\n        for(int i=2; i<player1.size(); i++){\\n            if(player1[i-1]==10 || player1[i-2]==10){\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int i=2; i<player2.size(); i++){\\n            if(player2[i-1]==10 || player2[i-2]==10){\\n                sum2+=player2[i];\\n            }\\n        }\\n        if(sum1>sum2){return 1;}\\n        else if(sum1<sum2){return 2;}\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1=0, sum2=0, cnt1=1, cnt2=1;\\n        for(int i=0; i<player1.size(); i++){\\n            sum1+=player1[i];\\n        }\\n        for(int i=0; i<player2.size(); i++){\\n            sum2+=player2[i];\\n        }\\n        if(player1.size()>1){\\n            if(player1[0]==10){\\n                sum1+=player1[1];\\n            }\\n        }\\n        if(player2.size()>1){\\n            if(player2[0]==10){\\n                sum2+=player2[1];\\n            }\\n        }\\n        for(int i=2; i<player1.size(); i++){\\n            if(player1[i-1]==10 || player1[i-2]==10){\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int i=2; i<player2.size(); i++){\\n            if(player2[i-1]==10 || player2[i-2]==10){\\n                sum2+=player2[i];\\n            }\\n        }\\n        if(sum1>sum2){return 1;}\\n        else if(sum1<sum2){return 2;}\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3476247,
                "title": "python3-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = sum(player1)\\n        score2 = sum(player2)\\n        for i in range(1, len(player1)):\\n            if i == 1:\\n                if player1[0] == 10:\\n                    score1 += player1[i]\\n                if player2[0] == 10:\\n                    score2 += player2[i]\\n            else:\\n                if 10 in player1[i-2:i]:\\n                    score1 += player1[i]\\n                if 10 in player2[i-2:i]:\\n                    score2 += player2[i]\\n        if score1 > score2:\\n            return 1\\n        elif score2 > score1:\\n            return 2\\n        elif score1 == score2:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = sum(player1)\\n        score2 = sum(player2)\\n        for i in range(1, len(player1)):\\n            if i == 1:\\n                if player1[0] == 10:\\n                    score1 += player1[i]\\n                if player2[0] == 10:\\n                    score2 += player2[i]\\n            else:\\n                if 10 in player1[i-2:i]:\\n                    score1 += player1[i]\\n                if 10 in player2[i-2:i]:\\n                    score2 += player2[i]\\n        if score1 > score2:\\n            return 1\\n        elif score2 > score1:\\n            return 2\\n        elif score1 == score2:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3473252,
                "title": "easiest-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n    int score1 = calculateScore(player1);\\n    int score2 = calculateScore(player2);\\n    if (score1 > score2) {\\n        return 1;\\n    } else if (score2 > score1) {\\n        return 2;\\n    } else {\\n        return 0;\\n    }\\n    }\\n    \\n    public static int calculateScore(int[] player) {\\n        int sum = 0;\\n        for (int i = player.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player[i - 1] == 10) {\\n                sum += player[i] * 2;\\n            } else if ((i - 2 > -1) && player[i - 2] == 10) {\\n                sum += player[i] * 2;\\n            } else {\\n                sum += player[i];\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n    int score1 = calculateScore(player1);\\n    int score2 = calculateScore(player2);\\n    if (score1 > score2) {\\n        return 1;\\n    } else if (score2 > score1) {\\n        return 2;\\n    } else {\\n        return 0;\\n    }\\n    }\\n    \\n    public static int calculateScore(int[] player) {\\n        int sum = 0;\\n        for (int i = player.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player[i - 1] == 10) {\\n                sum += player[i] * 2;\\n            } else if ((i - 2 > -1) && player[i - 2] == 10) {\\n                sum += player[i] * 2;\\n            } else {\\n                sum += player[i];\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3472299,
                "title": "easy-to-understand-must-see",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& arr1, vector<int>& arr2) \\n\\t{\\n\\t\\t  //calculating the score of the player1\\n          int sum1 = 0;\\n\\t\\t  for(int i=0;i<arr1.size();i++)\\n\\t\\t  {\\n\\t\\t  \\t   bool flag = false;\\n\\t\\t  \\t   if((i-1)>=0 == true and arr1[i-1] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if((i-2)>=0 == true and arr1[i-2] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if(flag == true) sum1 = sum1 + 2*arr1[i];\\n\\t\\t  \\t   else sum1 = sum1 + arr1[i];\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  //calculating the score of the player2\\n\\t\\t  int sum2 = 0;\\n\\t\\t  for(int i=0;i<arr2.size();i++)\\n\\t\\t  {\\n\\t\\t  \\t   bool flag = false;\\n\\t\\t  \\t   if((i-1)>=0 == true and arr2[i-1] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if((i-2)>=0 == true and arr2[i-2] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if(flag == true) sum2 = sum2 + 2*arr2[i];\\n\\t\\t  \\t   else sum2 = sum2 + arr2[i];\\n\\t\\t  }\\n\\t\\t  if(sum1 == sum2) return 0; //draw\\n\\t\\t  else if(sum1 > sum2) return 1;\\n\\t\\t  return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& arr1, vector<int>& arr2) \\n\\t{\\n\\t\\t  //calculating the score of the player1\\n          int sum1 = 0;\\n\\t\\t  for(int i=0;i<arr1.size();i++)\\n\\t\\t  {\\n\\t\\t  \\t   bool flag = false;\\n\\t\\t  \\t   if((i-1)>=0 == true and arr1[i-1] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if((i-2)>=0 == true and arr1[i-2] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if(flag == true) sum1 = sum1 + 2*arr1[i];\\n\\t\\t  \\t   else sum1 = sum1 + arr1[i];\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  //calculating the score of the player2\\n\\t\\t  int sum2 = 0;\\n\\t\\t  for(int i=0;i<arr2.size();i++)\\n\\t\\t  {\\n\\t\\t  \\t   bool flag = false;\\n\\t\\t  \\t   if((i-1)>=0 == true and arr2[i-1] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if((i-2)>=0 == true and arr2[i-2] == 10)\\n\\t\\t  \\t   flag = true;\\n\\t\\t  \\t   \\n\\t\\t  \\t   if(flag == true) sum2 = sum2 + 2*arr2[i];\\n\\t\\t  \\t   else sum2 = sum2 + arr2[i];\\n\\t\\t  }\\n\\t\\t  if(sum1 == sum2) return 0; //draw\\n\\t\\t  else if(sum1 > sum2) return 1;\\n\\t\\t  return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3471206,
                "title": "c-58-ms",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int gameResult(const vector<int>& player) {\\n        int hit = 0, sum = 0;\\n        for(auto pins : player) {\\n            sum += pins;\\n            if(hit) { sum += pins; --hit; }\\n            if(pins == 10) hit = 2;\\n        }\\n        return sum;\\n    }\\n\\n    int isWinner(const vector<int>& player1, const vector<int>& player2) {\\n        int result = gameResult(player1) - gameResult(player2);\\n        return result > 0? 1: result < 0? 2: result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int gameResult(const vector<int>& player) {\\n        int hit = 0, sum = 0;\\n        for(auto pins : player) {\\n            sum += pins;\\n            if(hit) { sum += pins; --hit; }\\n            if(pins == 10) hit = 2;\\n        }\\n        return sum;\\n    }\\n\\n    int isWinner(const vector<int>& player1, const vector<int>& player2) {\\n        int result = gameResult(player1) - gameResult(player2);\\n        return result > 0? 1: result < 0? 2: result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3470302,
                "title": "java-solution-2ms",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1=0,p2=0,p1m=1,p2m=1,c1=0,c2=0;\\n        for(int i=0;i<player1.length;i++){\\n            p1+=player1[i]*p1m;\\n            p2+=player2[i]*p2m;\\n            if(player1[i]==10){\\n                p1m=2;\\n                c1=0;\\n            }\\n            if(player2[i]==10){\\n                p2m=2;\\n                c2=0;\\n            }\\n            if(p1m==2){\\n                c1++;\\n                if(c1==3) p1m=1;\\n            }\\n            if(p2m==2){\\n                c2++;\\n                if(c2==3) p2m=1;\\n            }\\n        }\\n        \\n        if(p1==p2){\\n            return 0;\\n        }else if(p1>p2){\\n            return 1;\\n        }else{\\n            return 2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1=0,p2=0,p1m=1,p2m=1,c1=0,c2=0;\\n        for(int i=0;i<player1.length;i++){\\n            p1+=player1[i]*p1m;\\n            p2+=player2[i]*p2m;\\n            if(player1[i]==10){\\n                p1m=2;\\n                c1=0;\\n            }\\n            if(player2[i]==10){\\n                p2m=2;\\n                c2=0;\\n            }\\n            if(p1m==2){\\n                c1++;\\n                if(c1==3) p1m=1;\\n            }\\n            if(p2m==2){\\n                c2++;\\n                if(c2==3) p2m=1;\\n            }\\n        }\\n        \\n        if(p1==p2){\\n            return 0;\\n        }else if(p1>p2){\\n            return 1;\\n        }else{\\n            return 2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3470224,
                "title": "python3-solution",
                "content": "\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def f(player):\\n            n=len(player)\\n            if n==1:\\n                return player[0]\\n            a,b=player[0:2]\\n            answ=player[0] + player[1] + (player[0]==10)*player[1]\\n            for x in player[2:]:\\n                answ+=x + (max(a,b)==10)*x\\n                a,b=b,x\\n            return answ\\n        p1=f(player1)\\n        p2=f(player2)\\n        if p1==p2:\\n            return 0\\n        if p1<p2:\\n            return 2\\n        return 1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def f(player):\\n            n=len(player)\\n            if n==1:\\n                return player[0]\\n            a,b=player[0:2]\\n            answ=player[0] + player[1] + (player[0]==10)*player[1]\\n            for x in player[2:]:\\n                answ+=x + (max(a,b)==10)*x\\n                a,b=b,x\\n            return answ\\n        p1=f(player1)\\n        p2=f(player2)\\n        if p1==p2:\\n            return 0\\n        if p1<p2:\\n            return 2\\n        return 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469963,
                "title": "short-easy-100-fast-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int solve(vector<int>& arr){\\n        int n=arr.size();\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            if(i==0)sum+=arr[i];\\n            else if(i==1){\\n                if(arr[i-1]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n            else{\\n                if(arr[i-1]==10 || arr[i-2]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n        }\\n        return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        if(solve(player1)>solve(player2))return 1;\\n        else if(solve(player1)<solve(player2))return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int solve(vector<int>& arr){\\n        int n=arr.size();\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            if(i==0)sum+=arr[i];\\n            else if(i==1){\\n                if(arr[i-1]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n            else{\\n                if(arr[i-1]==10 || arr[i-2]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n        }\\n        return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        if(solve(player1)>solve(player2))return 1;\\n        else if(solve(player1)<solve(player2))return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469444,
                "title": "determine-the-winner-of-a-bowling-game-c-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n       int n = player1.size();\\n    int one = 0, two = 0;\\n    one += player1[0];\\n    two += player2[0];\\n    for (int i = 1; i < n; i++)\\n    {\\n        if (i == 1)\\n        {\\n            if (player1[i - 1] == 10)\\n            {\\n                one += 2 * player1[i];\\n            }\\n            else\\n            {\\n                one += player1[i];\\n            }\\n        }\\n        else\\n        {\\n            if ((player1[i - 1] == 10) || (player1[i - 2] == 10))\\n            {\\n                int num = player1[i];\\n                one += (2 * num);\\n            }\\n            else\\n            {\\n                one += player1[i];\\n            }\\n        }\\n    }\\n    for (int i = 1; i < n; i++)\\n    {\\n        if (i == 1)\\n        {\\n            if (player2[i - 1] == 10)\\n            {\\n                two += 2 * player2[i];\\n            }\\n            else\\n            {\\n                two += player2[i];\\n            }\\n        }\\n        else\\n        {\\n            if ((player2[i - 1] == 10) || (player2[i - 2] == 10))\\n            {\\n                int num = player2[i];\\n                two += 2 * num;\\n            }\\n            else\\n            {\\n                two += player2[i];\\n            }\\n        }\\n    }\\n    if (one == two)\\n    {\\n        return 0;\\n    }\\n    if (two > one)\\n    {\\n        return 2;\\n    }\\n    return 1;\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n       int n = player1.size();\\n    int one = 0, two = 0;\\n    one += player1[0];\\n    two += player2[0];\\n    for (int i = 1; i < n; i++)\\n    {\\n        if (i == 1)\\n        {\\n            if (player1[i - 1] == 10)\\n            {\\n                one += 2 * player1[i];\\n            }\\n            else\\n            {\\n                one += player1[i];\\n            }\\n        }\\n        else\\n        {\\n            if ((player1[i - 1] == 10) || (player1[i - 2] == 10))\\n            {\\n                int num = player1[i];\\n                one += (2 * num);\\n            }\\n            else\\n            {\\n                one += player1[i];\\n            }\\n        }\\n    }\\n    for (int i = 1; i < n; i++)\\n    {\\n        if (i == 1)\\n        {\\n            if (player2[i - 1] == 10)\\n            {\\n                two += 2 * player2[i];\\n            }\\n            else\\n            {\\n                two += player2[i];\\n            }\\n        }\\n        else\\n        {\\n            if ((player2[i - 1] == 10) || (player2[i - 2] == 10))\\n            {\\n                int num = player2[i];\\n                two += 2 * num;\\n            }\\n            else\\n            {\\n                two += player2[i];\\n            }\\n        }\\n    }\\n    if (one == two)\\n    {\\n        return 0;\\n    }\\n    if (two > one)\\n    {\\n        return 2;\\n    }\\n    return 1;\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469431,
                "title": "beginner-friendly-java-code-using-hashsets",
                "content": "# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        Set<Integer> set1 =  new HashSet<>();\\n        Set<Integer> set2 =  new HashSet<>();\\n        for(int i = 0; i<n; i++){\\n            if(player1[i]==10){\\n                set1.add(i+1);\\n                set1.add(i+2);\\n            }\\n            if(player2[i]==10){\\n                set2.add(i+1);\\n                set2.add(i+2);\\n            }\\n        }\\n        for(int i =0; i<n; i++){\\n            if(set1.contains(i)){\\n                sum1+=player1[i]*2;\\n            }\\n            else{\\n                sum1+=player1[i];\\n            }\\n            if(set2.contains(i)){\\n                sum2+=player2[i]*2;\\n            }\\n            else{\\n                sum2+=player2[i];\\n            }\\n        }\\n        if(sum1>sum2)return 1;\\n        if(sum2>sum1) return 2;\\n        return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Hash Table",
                    "Ordered Set"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        Set<Integer> set1 =  new HashSet<>();\\n        Set<Integer> set2 =  new HashSet<>();\\n        for(int i = 0; i<n; i++){\\n            if(player1[i]==10){\\n                set1.add(i+1);\\n                set1.add(i+2);\\n            }\\n            if(player2[i]==10){\\n                set2.add(i+1);\\n                set2.add(i+2);\\n            }\\n        }\\n        for(int i =0; i<n; i++){\\n            if(set1.contains(i)){\\n                sum1+=player1[i]*2;\\n            }\\n            else{\\n                sum1+=player1[i];\\n            }\\n            if(set2.contains(i)){\\n                sum2+=player2[i]*2;\\n            }\\n            else{\\n                sum2+=player2[i];\\n            }\\n        }\\n        if(sum1>sum2)return 1;\\n        if(sum2>sum1) return 2;\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468891,
                "title": "simple-solution-for-c-explanation-complexity",
                "content": "# Approach\\nStraight solution where we need to calculate scores for each player and get the result\\n\\n# Complexity\\n- Time complexity: O(n)\\n- Space complexity: O(1)\\n\\n# Code\\n```\\npublic int IsWinner(int[] player1, int[] player2)\\n{\\n    var score1 = CalcScores(player1);\\n    var score2 = CalcScores(player2);\\n\\n    if (score1 > score2)\\n    {\\n        return 1;\\n    }\\n\\n    return score2 > score1 ? 2 : 0;\\n}\\n\\n/// <summary>\\n/// Support void to calc scores\\n/// </summary>\\n/// <param name=\"player\"> Player scores </param>\\n/// <returns> Total score </returns>\\nprivate int CalcScores(IReadOnlyList<int> player)\\n{\\n    var result = 0;\\n\\n    for (var i = 0; i < player.Count; i++)\\n    {\\n        switch (i)\\n        {\\n            //// Check if one of the two previous values is equal to 10,\\n            /// then multiply the current score.\\n            case >= 1 when player[i - 1] == 10:\\n            case >= 2 when player[i - 2] == 10:\\n                result += player[i] * 2;\\n                break;\\n            default:\\n                result += player[i];\\n                break;\\n        }\\n    }\\n\\n    return result;\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic int IsWinner(int[] player1, int[] player2)\\n{\\n    var score1 = CalcScores(player1);\\n    var score2 = CalcScores(player2);\\n\\n    if (score1 > score2)\\n    {\\n        return 1;\\n    }\\n\\n    return score2 > score1 ? 2 : 0;\\n}\\n\\n/// <summary>\\n/// Support void to calc scores\\n/// </summary>\\n/// <param name=\"player\"> Player scores </param>\\n/// <returns> Total score </returns>\\nprivate int CalcScores(IReadOnlyList<int> player)\\n{\\n    var result = 0;\\n\\n    for (var i = 0; i < player.Count; i++)\\n    {\\n        switch (i)\\n        {\\n            //// Check if one of the two previous values is equal to 10,\\n            /// then multiply the current score.\\n            case >= 1 when player[i - 1] == 10:\\n            case >= 2 when player[i - 2] == 10:\\n                result += player[i] * 2;\\n                break;\\n            default:\\n                result += player[i];\\n                break;\\n        }\\n    }\\n\\n    return result;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3468533,
                "title": "all-test-case-pass-c-easy-o-n-time-o-1-space",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach used in the provided solution is to iterate through each turn of a player and calculate their score based on the game rules, i.e., if the player knocked down all 10 pins (a \"strike\") in the current turn or in the previous two turns. Once the total score for each player has been calculated, it compares the scores to determine the winner or if the game was a draw.\\n\\nTo calculate the score for each turn, the solution keeps track of two variables: previousTwo and flag. previousTwo is an integer that keeps track of the number of turns ago in which the player scored a strike, while flag is a boolean variable that is true if the previous turn was a strike. These variables are used to determine whether the player\\'s score should be multiplied by 2 or not.\\n\\nThe function getScore iterates through each turn of the player, checking if the current turn is a strike or not. If the current turn is not a strike, the score is added to the total score. If the current turn is a strike, the flag variable is set to true, and the previousTwo variable is reset to 0. If flag is true, then the player has scored a strike in the previous turn, so the score for the current turn is multiplied by 2 and added to the total score. If previousTwo is less than 2, the player has scored a strike in the previous two turns, so the score for the current turn is also multiplied by 2 and added to the total score. Finally, the function returns the total score for the player.\\n\\nThe function isWinner calculates the total score for each player using the getScore function and then compares the scores to determine the winner. If the score of player 1 is greater than the score of player 2, it returns 1. If the score of player 2 is greater than the score of player 1, it returns 2. If the scores are equal, it returns 0, indicating a draw.\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``````\\nclass Solution {\\npublic:\\n    int getScore(vector<int> player){\\n        bool flag=false;\\n        int previousTwo = 0;\\n        int totalScore=0;\\n        for(auto&it:player){\\n            if(flag==false){\\n                totalScore+=it;\\n            }else if(previousTwo<2){\\n                totalScore+= (2*it);\\n                previousTwo+=1;\\n            }\\n            if(previousTwo>=2)flag=false;\\n            if(it==10){\\n                flag=true;\\n                previousTwo=0;\\n            }\\n        }\\n        return totalScore;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int player1Score = getScore(player1);\\n        int player2Score = getScore(player2);\\n        if(player1Score>player2Score){\\n            return 1;\\n        }else if(player1Score<player2Score){\\n            return 2;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n``````",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math",
                    "Iterator"
                ],
                "code": "``````\n``````",
                "codeTag": "Unknown"
            },
            {
                "id": 3468487,
                "title": "optimized-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n   int calculateScore(vector<int> &player){\\n\\tint score = 0;\\n\\tint twiceHits = 0; \\n\\tfor(int i = 0;i< player.size();i++){\\n\\t\\tscore += player[i];\\n\\t\\tif(twiceHits){ // check if the hits will be twiced or not \\n\\t\\t\\tscore+=player[i];\\n\\t\\t\\ttwiceHits--;\\n\\t\\t}\\n\\t\\tif(player[i]==10){\\n\\t\\t\\ttwiceHits = 2; // twice the hits for next two attempts\\n\\t\\t}\\n\\t}\\n\\treturn score;\\n}\\n\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n\\tint score1=calculateScore(player1);\\n   \\tint score2=calculateScore(player2);\\n   \\tif(score1<score2){\\n   \\t\\treturn 2;\\n   \\t}else if(score1>score2){\\n   \\t\\treturn 1;\\n   \\t}\\n   \\treturn 0;\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n   int calculateScore(vector<int> &player){\\n\\tint score = 0;\\n\\tint twiceHits = 0; \\n\\tfor(int i = 0;i< player.size();i++){\\n\\t\\tscore += player[i];\\n\\t\\tif(twiceHits){ // check if the hits will be twiced or not \\n\\t\\t\\tscore+=player[i];\\n\\t\\t\\ttwiceHits--;\\n\\t\\t}\\n\\t\\tif(player[i]==10){\\n\\t\\t\\ttwiceHits = 2; // twice the hits for next two attempts\\n\\t\\t}\\n\\t}\\n\\treturn score;\\n}\\n\\nint isWinner(vector<int>& player1, vector<int>& player2) {\\n\\tint score1=calculateScore(player1);\\n   \\tint score2=calculateScore(player2);\\n   \\tif(score1<score2){\\n   \\t\\treturn 2;\\n   \\t}else if(score1>score2){\\n   \\t\\treturn 1;\\n   \\t}\\n   \\treturn 0;\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468359,
                "title": "simplest-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution{\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n        int s1=0, s2=0;\\n        for(int x=0; x<player1.size(); x++)\\n        {\\n            if((x-1>=0 && player1[x-1]==10) || (x-2>=0 && player1[x-2]==10)) \\n            s1+=player1[x]*2;\\n            else s1+=player1[x];\\n            \\n            if((x-1>=0 && player2[x-1]==10) || (x-2>=0 && player2[x-2]==10)) \\n            s2+=player2[x]*2;\\n            else s2+=player2[x];\\n        }\\n        if(s1==s2) return 0;\\n        if(s1>s2) return 1;\\n        return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution{\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n        int s1=0, s2=0;\\n        for(int x=0; x<player1.size(); x++)\\n        {\\n            if((x-1>=0 && player1[x-1]==10) || (x-2>=0 && player1[x-2]==10)) \\n            s1+=player1[x]*2;\\n            else s1+=player1[x];\\n            \\n            if((x-1>=0 && player2[x-1]==10) || (x-2>=0 && player2[x-2]==10)) \\n            s2+=player2[x]*2;\\n            else s2+=player2[x];\\n        }\\n        if(s1==s2) return 0;\\n        if(s1>s2) return 1;\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468306,
                "title": "javascript-direct-way-78ms",
                "content": "```\\nconst isWinner = (a, b) => {\\n    let ra = cal(a), rb = cal(b);\\n    return ra == rb ? 0 : ra > rb ? 1 : 2;\\n};\\n\\nconst cal = (a) => {\\n    let n = a.length, res = 0;\\n    a.map((x, i) => {\\n        if ((i-1 >= 0 && a[i-1] == 10) || (i-2 >= 0 && a[i-2] == 10)) {\\n            res += 2 * x;\\n        } else {\\n            res += x;\\n        }\\n    });\\n    return res;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\nconst isWinner = (a, b) => {\\n    let ra = cal(a), rb = cal(b);\\n    return ra == rb ? 0 : ra > rb ? 1 : 2;\\n};\\n\\nconst cal = (a) => {\\n    let n = a.length, res = 0;\\n    a.map((x, i) => {\\n        if ((i-1 >= 0 && a[i-1] == 10) || (i-2 >= 0 && a[i-2] == 10)) {\\n            res += 2 * x;\\n        } else {\\n            res += x;\\n        }\\n    });\\n    return res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3468274,
                "title": "c-simple-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& num1, vector<int>& num2) {\\n        if(num1.size()==1){\\n            if(num1[0]>num2[0]) return 1;\\n            else if(num1[0]<num2[0]) return 2;\\n            return 0;\\n        }else if(num1.size() == 2){\\n            int x = num1[0]+num1[1];\\n            if(num1[0]==10) x += num1[1];\\n            int y = num2[0]+num2[1];\\n            if(num2[0]==10) y+=num2[1];\\n            if(x>y) return 1;\\n            else if(x<y) return 2;\\n            return 0;\\n        }\\n        long long sum1=0,sum2=0;\\n        sum1 += (num1[0]+num1[1]);\\n        if(num1[0]==10) sum1 += num1[1];\\n        sum2 += (num2[0]+num2[1]);\\n        if(num2[0]==10) sum2 += num2[1];\\n        for(int i=2;i<num1.size();i++){\\n            if(num1[i-2]==10 || num1[i-1]==10) sum1 += (num1[i]*2);\\n            else sum1 += num1[i];\\n        }\\n        for(int i=2;i<num2.size();i++){\\n            if(num2[i-2]==10 || num2[i-1]==10) sum2 += (num2[i]*2);\\n            else sum2 += num2[i];\\n        }\\n        if(sum1>sum2) return 1;\\n        else if(sum1<sum2) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& num1, vector<int>& num2) {\\n        if(num1.size()==1){\\n            if(num1[0]>num2[0]) return 1;\\n            else if(num1[0]<num2[0]) return 2;\\n            return 0;\\n        }else if(num1.size() == 2){\\n            int x = num1[0]+num1[1];\\n            if(num1[0]==10) x += num1[1];\\n            int y = num2[0]+num2[1];\\n            if(num2[0]==10) y+=num2[1];\\n            if(x>y) return 1;\\n            else if(x<y) return 2;\\n            return 0;\\n        }\\n        long long sum1=0,sum2=0;\\n        sum1 += (num1[0]+num1[1]);\\n        if(num1[0]==10) sum1 += num1[1];\\n        sum2 += (num2[0]+num2[1]);\\n        if(num2[0]==10) sum2 += num2[1];\\n        for(int i=2;i<num1.size();i++){\\n            if(num1[i-2]==10 || num1[i-1]==10) sum1 += (num1[i]*2);\\n            else sum1 += num1[i];\\n        }\\n        for(int i=2;i<num2.size();i++){\\n            if(num2[i-2]==10 || num2[i-1]==10) sum2 += (num2[i]*2);\\n            else sum2 += num2[i];\\n        }\\n        if(sum1>sum2) return 1;\\n        else if(sum1<sum2) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3468266,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int a = player1.length,b = player2.length;\\n        \\n        int first =0;\\n        int second = 0;\\n        int count=0;\\n        int i=0;\\n        while(i<a){\\n            if(player1[i]==10){\\n                count = 2;\\n                first+=player1[i];\\n                i++;\\n                while(count!=0 && i<a){\\n                    first += (2*player1[i]);\\n                    count--;\\n                     if(player1[i]==10) count=2;\\n                    i++;\\n\\n                }\\n            }else{\\n                first +=player1[i];\\n                i++;\\n            }\\n        }\\n        i=0;\\n        count=0;\\n        while(i<b){\\n            if(player2[i]==10){\\n                count = 2;\\n                second+=player2[i];\\n                i++;\\n                while(count!=0 && i<b){\\n                    second += (2*player2[i]);\\n                    count--;\\n                    if(player2[i]==10) count=2;\\n                    i++;\\n                }\\n            }else{\\n                second +=player2[i];\\n                i++;\\n            }\\n        }\\n        if(first>second) return 1;\\n        else if(first<second) return 2;\\n        else return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int a = player1.length,b = player2.length;\\n        \\n        int first =0;\\n        int second = 0;\\n        int count=0;\\n        int i=0;\\n        while(i<a){\\n            if(player1[i]==10){\\n                count = 2;\\n                first+=player1[i];\\n                i++;\\n                while(count!=0 && i<a){\\n                    first += (2*player1[i]);\\n                    count--;\\n                     if(player1[i]==10) count=2;\\n                    i++;\\n\\n                }\\n            }else{\\n                first +=player1[i];\\n                i++;\\n            }\\n        }\\n        i=0;\\n        count=0;\\n        while(i<b){\\n            if(player2[i]==10){\\n                count = 2;\\n                second+=player2[i];\\n                i++;\\n                while(count!=0 && i<b){\\n                    second += (2*player2[i]);\\n                    count--;\\n                    if(player2[i]==10) count=2;\\n                    i++;\\n                }\\n            }else{\\n                second +=player2[i];\\n                i++;\\n            }\\n        }\\n        if(first>second) return 1;\\n        else if(first<second) return 2;\\n        else return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4091682,
                "title": "multiplication-matrix-intuitive-python-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe need to record some sort of flag or state to record the status of the multiplier of future indices as we go along through the pass of the array. We can create a multiplier matrix which records whether or not we multiply by 1 (if no 10 scored in the past two pins) or 2.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCreate the two matrices (arrays) for the two players. If you see a 10, set the values to 2 in the next two indices if they exist. Then just calculate\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n) We pass through the length of the array once\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(n) we create 2 O(1) for recording the score, but 2 arrays with the same length as n.\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        multMatrix1, multMatrix2 = [ 1 ] * len(player1), [ 1 ] * len(player2)\\n        firstScore, secondScore = 0, 0\\n        \\n        for i in range(len(player1)):\\n            if player1[i] == 10:\\n                if i + 1 < len(player1):\\n                    multMatrix1[i+1] = 2\\n                    if i + 2 < len(player2):\\n                        multMatrix1[i+2] = 2\\n            if player2[i] == 10:\\n                if i + 1 < len(player2):\\n                    multMatrix2[i+1] = 2\\n                    if i + 2 < len(player2):\\n                        multMatrix2[i+2] = 2\\n            firstScore += multMatrix1[i] * player1[i]\\n            secondScore += multMatrix2[i] * player2[i]\\n\\n        return 1 if firstScore > secondScore else 2 if secondScore >  firstScore else 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        multMatrix1, multMatrix2 = [ 1 ] * len(player1), [ 1 ] * len(player2)\\n        firstScore, secondScore = 0, 0\\n        \\n        for i in range(len(player1)):\\n            if player1[i] == 10:\\n                if i + 1 < len(player1):\\n                    multMatrix1[i+1] = 2\\n                    if i + 2 < len(player2):\\n                        multMatrix1[i+2] = 2\\n            if player2[i] == 10:\\n                if i + 1 < len(player2):\\n                    multMatrix2[i+1] = 2\\n                    if i + 2 < len(player2):\\n                        multMatrix2[i+2] = 2\\n            firstScore += multMatrix1[i] * player1[i]\\n            secondScore += multMatrix2[i] * player2[i]\\n\\n        return 1 if firstScore > secondScore else 2 if secondScore >  firstScore else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4085233,
                "title": "easy-cpp-solution-beginner-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- As the condition is any 2 previous turns, we have to check them individually, and if any one of them is having 10 score then, we will add them again into the score of respective player.\\n- Else we will simply add the score as it is into the player\\'s score variable (a || b).\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sz = player1.size();\\n        int a=0,b=0;\\n        int a10=0, b10=0;\\n        for(int i=0; i<sz; i++){\\n            a += player1[i];\\n            b += player2[i];\\n            if(i-1 >= 0 && player1[i-1] == 10) a += player1[i];\\n            else if(i-2 >= 0 && player1[i-2] == 10) a += player1[i];\\n            if(i-1 >= 0 && player2[i-1] == 10) b += player2[i];\\n            else if(i-2 >= 0 && player2[i-2] == 10) b += player2[i];\\n        }\\n        if(a == b) return 0;\\n        return a > b ? 1 : 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sz = player1.size();\\n        int a=0,b=0;\\n        int a10=0, b10=0;\\n        for(int i=0; i<sz; i++){\\n            a += player1[i];\\n            b += player2[i];\\n            if(i-1 >= 0 && player1[i-1] == 10) a += player1[i];\\n            else if(i-2 >= 0 && player1[i-2] == 10) a += player1[i];\\n            if(i-1 >= 0 && player2[i-1] == 10) b += player2[i];\\n            else if(i-2 >= 0 && player2[i-2] == 10) b += player2[i];\\n        }\\n        if(a == b) return 0;\\n        return a > b ? 1 : 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4032673,
                "title": "simple-java-solution",
                "content": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        // calculate score of player1\\n        int score1 = calc(player1);\\n        int score2 = calc(player2);\\n\\n        if(score1 == score2)\\n            return 0;\\n        \\n        if(score1 < score2)\\n            return 2;\\n        \\n        return 1;\\n    }\\n    public int calc(int[] nums){\\n        int score = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            int prev1 = (i - 1) >= 0 ? nums[i - 1] : 0;\\n            int prev2 = (i - 2) >= 0 ? nums[i - 2] : 0;\\n            score = score + (prev1 == 10 || prev2 == 10 ? 2 * nums[i] : nums[i]);\\n        }\\n        return score;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        // calculate score of player1\\n        int score1 = calc(player1);\\n        int score2 = calc(player2);\\n\\n        if(score1 == score2)\\n            return 0;\\n        \\n        if(score1 < score2)\\n            return 2;\\n        \\n        return 1;\\n    }\\n    public int calc(int[] nums){\\n        int score = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            int prev1 = (i - 1) >= 0 ? nums[i - 1] : 0;\\n            int prev2 = (i - 2) >= 0 ? nums[i - 2] : 0;\\n            score = score + (prev1 == 10 || prev2 == 10 ? 2 * nums[i] : nums[i]);\\n        }\\n        return score;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4025720,
                "title": "simple-cpp-solution-that-beats-100-users",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int Score(vector<int>& player){\\n        int s=0,f=0;\\n        for(int p:player){\\n            s += (f>0)? 2*p: p;\\n            f--;\\n            if(p==10) \\n                f=2;\\n        }\\n        return s;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1 = Score(player1), s2 = Score(player2);\\n        if(s1 > s2) return 1;\\n        if(s1 < s2) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int Score(vector<int>& player){\\n        int s=0,f=0;\\n        for(int p:player){\\n            s += (f>0)? 2*p: p;\\n            f--;\\n            if(p==10) \\n                f=2;\\n        }\\n        return s;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1 = Score(player1), s2 = Score(player2);\\n        if(s1 > s2) return 1;\\n        if(s1 < s2) return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4021493,
                "title": "java-simple-solution-o-n-easy-to-understand",
                "content": "# Intuition\\nCalculate both scores comapre them \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nConstant\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        \\n        if(player1.length != player2.length ) return -1;\\n\\n        int score1 = calculateScore(player1);\\n\\n        int score2 = calculateScore(player2);\\n\\n        if(score1 > score2) return 1;\\n\\n        else if(score2 > score1) return 2;\\n\\n        else return 0;\\n\\n    }\\n\\n\\n    private int calculateScore (int [] arr){\\n\\n        int score = 0 ;\\n        for (int i = 0 ; i < arr.length ; i++ ){\\n           \\n            if((i - 1 >= 0 && arr[i-1] ==  10) || (i - 2 >= 0 && arr[i-2] ==  10)){\\n                score += 2*arr[i];\\n            }\\n            else{\\n                 score += arr[i]; \\n            }\\n           \\n        }\\n        return score;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        \\n        if(player1.length != player2.length ) return -1;\\n\\n        int score1 = calculateScore(player1);\\n\\n        int score2 = calculateScore(player2);\\n\\n        if(score1 > score2) return 1;\\n\\n        else if(score2 > score1) return 2;\\n\\n        else return 0;\\n\\n    }\\n\\n\\n    private int calculateScore (int [] arr){\\n\\n        int score = 0 ;\\n        for (int i = 0 ; i < arr.length ; i++ ){\\n           \\n            if((i - 1 >= 0 && arr[i-1] ==  10) || (i - 2 >= 0 && arr[i-2] ==  10)){\\n                score += 2*arr[i];\\n            }\\n            else{\\n                 score += arr[i]; \\n            }\\n           \\n        }\\n        return score;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4018795,
                "title": "only-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        for (int i = player1.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player1[i - 1] == 10) {\\n                sum1 += player1[i] * 2;\\n            } else if ((i - 2 > -1) && player1[i - 2] == 10) {\\n                sum1 += player1[i] * 2;\\n            } else {\\n                sum1 += player1[i];\\n            }\\n        }\\n        \\n        for (int i = player2.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player2[i - 1] == 10) {\\n                sum2 += player2[i] * 2;\\n            } else if ((i - 2 > -1) && player2[i - 2] == 10) {\\n                sum2 += player2[i] * 2;\\n            } else {\\n                sum2 += player2[i];\\n            }\\n        }\\n        if(sum1 > sum2) return 1; \\n        else if(sum1 < sum2)  return 2;\\n        else return 0;\\n    }\\n    \\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        for (int i = player1.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player1[i - 1] == 10) {\\n                sum1 += player1[i] * 2;\\n            } else if ((i - 2 > -1) && player1[i - 2] == 10) {\\n                sum1 += player1[i] * 2;\\n            } else {\\n                sum1 += player1[i];\\n            }\\n        }\\n        \\n        for (int i = player2.length - 1; i >= 0; i--) {\\n            if ((i - 1 > -1) && player2[i - 1] == 10) {\\n                sum2 += player2[i] * 2;\\n            } else if ((i - 2 > -1) && player2[i - 2] == 10) {\\n                sum2 += player2[i] * 2;\\n            } else {\\n                sum2 += player2[i];\\n            }\\n        }\\n        if(sum1 > sum2) return 1; \\n        else if(sum1 < sum2)  return 2;\\n        else return 0;\\n    }\\n    \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4014531,
                "title": "python-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score_p1, score_p2 = 0, 0\\n        factor = 2\\n\\n        for i in range(len(player1)):\\n            if i >= 1 and (player1[i-1] == 10 or (i >= 2 and player1[i-2] == 10)):\\n                score_p1 += player1[i] * factor\\n            else:\\n                score_p1 += player1[i]\\n            \\n            if i >= 1 and (player2[i-1] == 10 or (i >= 2 and player2[i-2] == 10)):\\n                score_p2 += player2[i] * factor\\n            else:\\n                score_p2 += player2[i]\\n        \\n        if score_p1 == score_p2:\\n            return 0\\n        elif score_p1 > score_p2:\\n            return 1\\n        else:\\n            return 2\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score_p1, score_p2 = 0, 0\\n        factor = 2\\n\\n        for i in range(len(player1)):\\n            if i >= 1 and (player1[i-1] == 10 or (i >= 2 and player1[i-2] == 10)):\\n                score_p1 += player1[i] * factor\\n            else:\\n                score_p1 += player1[i]\\n            \\n            if i >= 1 and (player2[i-1] == 10 or (i >= 2 and player2[i-2] == 10)):\\n                score_p2 += player2[i] * factor\\n            else:\\n                score_p2 += player2[i]\\n        \\n        if score_p1 == score_p2:\\n            return 0\\n        elif score_p1 > score_p2:\\n            return 1\\n        else:\\n            return 2\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4011596,
                "title": "javascript-reduce",
                "content": "# Code\\n```\\nvar isWinner = function(player1, player2) {\\n    const calc = (arr) => arr.reduce((a, b, i) => a + (b * ((arr[i - 1] === 10 || arr[i - 2] === 10) ? 2 : 1)), 0)\\n    let a = calc(player1);\\n    let b = calc(player2);\\n    if (a === b) return 0;\\n    return a > b ? 1 : 2;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isWinner = function(player1, player2) {\\n    const calc = (arr) => arr.reduce((a, b, i) => a + (b * ((arr[i - 1] === 10 || arr[i - 2] === 10) ? 2 : 1)), 0)\\n    let a = calc(player1);\\n    let b = calc(player2);\\n    if (a === b) return 0;\\n    return a > b ? 1 : 2;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4007159,
                "title": "easy-to-understand-python3-solution-brute-force-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        player1_score, player2_score = 0, 0\\n\\n        for i in range(len(player1)):\\n            if i == 0:\\n                player1_score += player1[i]\\n            elif i == 1:\\n                if player1[i-1] == 10:\\n                    player1_score += 2 * player1[i]\\n                else:\\n                    player1_score += player1[i]\\n            else:\\n                if i % 2 == 0:\\n                    if player1[i-1] == 10 or player1[i-2] == 10:\\n                        player1_score += 2 * player1[i]\\n                    else:\\n                        player1_score += player1[i]\\n                else:\\n                    if player1[i-1] == 10 or player1[i-2] == 10:\\n                        player1_score += 2 * player1[i]\\n                    else:\\n                        player1_score += player1[i]\\n        \\n        for i in range(len(player2)):\\n            if i == 0:\\n                player2_score += player2[i]\\n            elif i == 1:\\n                if player2[i-1] == 10:\\n                    player2_score += 2 * player2[i]\\n                else:\\n                    player2_score += player2[i] \\n            else:\\n                if i % 2 == 0:\\n                    if player2[i-1] == 10 or player2[i-2] == 10:\\n                        player2_score += 2 * player2[i]\\n                    else:\\n                        player2_score += player2[i]\\n                else:\\n                    if player2[i-1] == 10 or player2[i-2] == 10:\\n                        player2_score += 2 * player2[i]\\n                    else:\\n                        player2_score += player2[i]\\n\\n        if player1_score > player2_score:\\n            return 1\\n        elif player1_score < player2_score:\\n            return 2\\n        else:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        player1_score, player2_score = 0, 0\\n\\n        for i in range(len(player1)):\\n            if i == 0:\\n                player1_score += player1[i]\\n            elif i == 1:\\n                if player1[i-1] == 10:\\n                    player1_score += 2 * player1[i]\\n                else:\\n                    player1_score += player1[i]\\n            else:\\n                if i % 2 == 0:\\n                    if player1[i-1] == 10 or player1[i-2] == 10:\\n                        player1_score += 2 * player1[i]\\n                    else:\\n                        player1_score += player1[i]\\n                else:\\n                    if player1[i-1] == 10 or player1[i-2] == 10:\\n                        player1_score += 2 * player1[i]\\n                    else:\\n                        player1_score += player1[i]\\n        \\n        for i in range(len(player2)):\\n            if i == 0:\\n                player2_score += player2[i]\\n            elif i == 1:\\n                if player2[i-1] == 10:\\n                    player2_score += 2 * player2[i]\\n                else:\\n                    player2_score += player2[i] \\n            else:\\n                if i % 2 == 0:\\n                    if player2[i-1] == 10 or player2[i-2] == 10:\\n                        player2_score += 2 * player2[i]\\n                    else:\\n                        player2_score += player2[i]\\n                else:\\n                    if player2[i-1] == 10 or player2[i-2] == 10:\\n                        player2_score += 2 * player2[i]\\n                    else:\\n                        player2_score += player2[i]\\n\\n        if player1_score > player2_score:\\n            return 1\\n        elif player1_score < player2_score:\\n            return 2\\n        else:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4003206,
                "title": "simple-java-100-tc-solution",
                "content": "# Intuition\\nEach score must be tracked. Remember that every time a player scores a 10, the next two rounds have a multiplier of two.\\n\\n# Approach\\nCreate three variables for each player. One of which is a tick that counts down the two days where the multiplier is active for that player. Make sure that if a player scores a 10, the tick is set to 2 and the multiplier is set to 2. For each iteration, make sure 1 is subtracted from the tick as long as it is greater than 0. Once the tick hits 0, set the multiplier back to 1.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int multi1 = 1;\\n        int multi2 = 1;\\n        int tick1 = 0;\\n        int tick2 = 0;\\n        int total1 = 0;\\n        int total2 = 0;\\n\\n        for (int i = 0; i < player1.length; i++)\\n        {\\n            total1 += player1[i] * multi1;\\n            total2 += player2[i] * multi2;\\n            if (tick1 == 0)\\n                multi1 = 1;\\n            if (tick2 == 0)\\n                multi2 = 1;\\n            \\n            if (player1[i] == 10)\\n            {\\n                tick1 = 2;\\n                multi1 = 2;\\n            }\\n            if (player2[i] == 10)\\n            {\\n                tick2 = 2;\\n                multi2 = 2;\\n            }\\n\\n            if (tick1 > 0)\\n                tick1--;\\n            if (tick2 > 0)\\n                tick2--;\\n        }\\n\\n        if (total1 > total2)\\n            return 1;\\n        else if (total2 > total1)\\n            return 2;\\n        else\\n            return 0;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int multi1 = 1;\\n        int multi2 = 1;\\n        int tick1 = 0;\\n        int tick2 = 0;\\n        int total1 = 0;\\n        int total2 = 0;\\n\\n        for (int i = 0; i < player1.length; i++)\\n        {\\n            total1 += player1[i] * multi1;\\n            total2 += player2[i] * multi2;\\n            if (tick1 == 0)\\n                multi1 = 1;\\n            if (tick2 == 0)\\n                multi2 = 1;\\n            \\n            if (player1[i] == 10)\\n            {\\n                tick1 = 2;\\n                multi1 = 2;\\n            }\\n            if (player2[i] == 10)\\n            {\\n                tick2 = 2;\\n                multi2 = 2;\\n            }\\n\\n            if (tick1 > 0)\\n                tick1--;\\n            if (tick2 > 0)\\n                tick2--;\\n        }\\n\\n        if (total1 > total2)\\n            return 1;\\n        else if (total2 > total1)\\n            return 2;\\n        else\\n            return 0;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3990150,
                "title": "easy-to-read-python-solution-with-a-helper-function-to-calculate-score-explanation-in-comments",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n\\n        #declaring a helper function\\n        def calcScore(player):\\n            #let\\'s declare two variables to store the score of the prev two rounds\\n            r1 = 0 #round - 1\\n            r2 = 0  #round - 2\\n\\n            score = 0\\n\\n            for pins in player:\\n                #update score depending on the number of pins hit on the prev two rounds\\n                if r1 == 10 or r2 == 10:\\n                    score += (2 * pins)\\n                else:\\n                    score += pins\\n                \\n                #now update the prev round and the round before that scores\\n                r2 = r1 #be wary of this order\\n                #move r1s value to r2 first \\n                # and then udpate r1\\n                r1 = pins\\n \\n                \\n\\n            return score\\n        \\n        #now we simply calculate the score for each player and return a result\\n\\n        p1 = calcScore(player1)\\n        p2 = calcScore(player2)\\n\\n        if p1 > p2:\\n            return 1\\n        \\n        if p2 > p1:\\n            return 2\\n        \\n        if p1 == p2:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n\\n        #declaring a helper function\\n        def calcScore(player):\\n            #let\\'s declare two variables to store the score of the prev two rounds\\n            r1 = 0 #round - 1\\n            r2 = 0  #round - 2\\n\\n            score = 0\\n\\n            for pins in player:\\n                #update score depending on the number of pins hit on the prev two rounds\\n                if r1 == 10 or r2 == 10:\\n                    score += (2 * pins)\\n                else:\\n                    score += pins\\n                \\n                #now update the prev round and the round before that scores\\n                r2 = r1 #be wary of this order\\n                #move r1s value to r2 first \\n                # and then udpate r1\\n                r1 = pins\\n \\n                \\n\\n            return score\\n        \\n        #now we simply calculate the score for each player and return a result\\n\\n        p1 = calcScore(player1)\\n        p2 = calcScore(player2)\\n\\n        if p1 > p2:\\n            return 1\\n        \\n        if p2 > p1:\\n            return 2\\n        \\n        if p1 == p2:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3980933,
                "title": "c-basic-game-logic",
                "content": "\\n# Code\\n```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        int sumOfPlayer1 = CalculatePlayerPoint(player1, 1);\\n            int sumOfPlayer2=CalculatePlayerPoint(player2, 1);\\n            return sumOfPlayer1>sumOfPlayer2?1:sumOfPlayer1==sumOfPlayer2?0:2;\\n    }\\n    private static int CalculatePlayerPoint(int[] playerPoints, int multiplier)\\n        {\\n            int sumOfPoints = 0;\\n            int multiplierTime = 2;\\n            for (int i = 0; i < playerPoints.Length; i++)\\n            {\\n                sumOfPoints += playerPoints[i] * multiplier;\\n                if (multiplier == 2)\\n                    multiplierTime--;\\n                if(multiplierTime==0)\\n                    multiplier = 1;\\n                if (playerPoints[i] == 10)\\n                {\\n                    multiplier = 2;\\n                    multiplierTime=2;\\n                }\\n            }\\n            return sumOfPoints;\\n        }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        int sumOfPlayer1 = CalculatePlayerPoint(player1, 1);\\n            int sumOfPlayer2=CalculatePlayerPoint(player2, 1);\\n            return sumOfPlayer1>sumOfPlayer2?1:sumOfPlayer1==sumOfPlayer2?0:2;\\n    }\\n    private static int CalculatePlayerPoint(int[] playerPoints, int multiplier)\\n        {\\n            int sumOfPoints = 0;\\n            int multiplierTime = 2;\\n            for (int i = 0; i < playerPoints.Length; i++)\\n            {\\n                sumOfPoints += playerPoints[i] * multiplier;\\n                if (multiplier == 2)\\n                    multiplierTime--;\\n                if(multiplierTime==0)\\n                    multiplier = 1;\\n                if (playerPoints[i] == 10)\\n                {\\n                    multiplier = 2;\\n                    multiplierTime=2;\\n                }\\n            }\\n            return sumOfPoints;\\n        }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3976423,
                "title": "nice-and-elegant-solution-in-java-beats-100-rt-and-98-memory",
                "content": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        int strike1 = 0;\\n        int strike2 = 0;\\n        for (int i = 0; i < player1.length; i++) {\\n            sum1 += player1[i];\\n            sum2 += player2[i];\\n            if (strike1-- > 0) {\\n                sum1 += player1[i];\\n            }\\n            if (strike2-- > 0) {\\n                sum2 += player2[i];\\n            }\\n            if (player1[i] == 10) {\\n                strike1 = 2;\\n            }\\n            if (player2[i] == 10) {\\n                strike2 = 2;\\n            }\\n        }\\n        return sum1 > sum2 ? 1 : sum2 > sum1 ? 2 : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        int strike1 = 0;\\n        int strike2 = 0;\\n        for (int i = 0; i < player1.length; i++) {\\n            sum1 += player1[i];\\n            sum2 += player2[i];\\n            if (strike1-- > 0) {\\n                sum1 += player1[i];\\n            }\\n            if (strike2-- > 0) {\\n                sum2 += player2[i];\\n            }\\n            if (player1[i] == 10) {\\n                strike1 = 2;\\n            }\\n            if (player2[i] == 10) {\\n                strike2 = 2;\\n            }\\n        }\\n        return sum1 > sum2 ? 1 : sum2 > sum1 ? 2 : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3964667,
                "title": "beats-97-64-straightforward-solution",
                "content": "\\n# Complexity\\n- Time complexity: $$O(n)$$\\n\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sc = []\\n        def calculate(player):\\n            strike = 0\\n            score = 0\\n            for i in range(len(player)):\\n                if strike <= 0:\\n                    score += player[i]\\n                else:\\n                    score += 2*player[i]\\n                strike -= 1\\n                if player[i] == 10:\\n                    strike = 2\\n            sc.append(score)\\n        calculate(player1)\\n        calculate(player2)\\n        print(sc)\\n        if sc[0] > sc[1]:\\n            return 1\\n        if sc[0] == sc[1]:\\n            return 0\\n        return 2\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sc = []\\n        def calculate(player):\\n            strike = 0\\n            score = 0\\n            for i in range(len(player)):\\n                if strike <= 0:\\n                    score += player[i]\\n                else:\\n                    score += 2*player[i]\\n                strike -= 1\\n                if player[i] == 10:\\n                    strike = 2\\n            sc.append(score)\\n        calculate(player1)\\n        calculate(player2)\\n        print(sc)\\n        if sc[0] > sc[1]:\\n            return 1\\n        if sc[0] == sc[1]:\\n            return 0\\n        return 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3961443,
                "title": "python-beginners-4-line",
                "content": "- Time complexity: $$O(n)$$\\n- Space complexity: $$O(1)$$\\n```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        ans=0\\n        for i in range(len(player1)):\\n            ans +=player1[i]*(1+(10 in player1[max(0,i-2):i]))\\n            ans -=player2[i]*(1+(10 in player2[max(0,i-2):i]))\\n        return int(ans>0) if ans>=0 else 2\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        ans=0\\n        for i in range(len(player1)):\\n            ans +=player1[i]*(1+(10 in player1[max(0,i-2):i]))\\n            ans -=player2[i]*(1+(10 in player2[max(0,i-2):i]))\\n        return int(ans>0) if ans>=0 else 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3960748,
                "title": "easy-solution-3-lines",
                "content": "# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def get_score(player):\\n            return sum(player[i] * (2 if (i and player[i-1] == 10) or (i > 1 and player[i-2] == 10) else 1) for i, turn in enumerate(player))\\n        return 1 if (s1 := get_score(player1)) > (s2 := get_score(player2)) else 2 if s2 > s1 else 0 \\n```\\n\\nPlease let me know if any improvements can be made.\\n\\nThanks",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def get_score(player):\\n            return sum(player[i] * (2 if (i and player[i-1] == 10) or (i > 1 and player[i-2] == 10) else 1) for i, turn in enumerate(player))\\n        return 1 if (s1 := get_score(player1)) > (s2 := get_score(player2)) else 2 if s2 > s1 else 0 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3957411,
                "title": "simple-array-traversal-faster-than-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n       int res1=0,res2=0;\\n       for(int i=0;i<player1.length;i++)\\n       {\\n           if((i>1 && player1[i-2]==10 ) || (i>0 && player1[i-1]==10) )\\n           res1+=2*player1[i];\\n           else\\n           res1+=player1[i]; \\n           if((i>1 && player2[i-2]==10) || (i>0 && player2[i-1]==10))\\n           res2+=2*player2[i];\\n           else\\n           res2+=player2[i];\\n       } \\n       return res1==res2?0:res1>res2?1:2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n       int res1=0,res2=0;\\n       for(int i=0;i<player1.length;i++)\\n       {\\n           if((i>1 && player1[i-2]==10 ) || (i>0 && player1[i-1]==10) )\\n           res1+=2*player1[i];\\n           else\\n           res1+=player1[i]; \\n           if((i>1 && player2[i-2]==10) || (i>0 && player2[i-1]==10))\\n           res2+=2*player2[i];\\n           else\\n           res2+=player2[i];\\n       } \\n       return res1==res2?0:res1>res2?1:2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3947910,
                "title": "java-solution-beats-100-runtime-1ms-o-n-space-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nIterate through all possible elements in both arrays, check whether 2 previous element is equal to 10, and then determine the calculation. Be careful with edge case handling, for example when there\\'s only one entry.\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n\\n- Space complexity: $$O(1)$$\\n>Because this code only uses three integer variables, which counts as O(1) regardless of operation. And there\\'s no other dynamic data structures like array except the input arrays. The input array is not considered as space complexity of this code chunk becaue it\\'s part of the input. The space complexity analysis typically focuses on the additional space (beyond the input) that an algorithm uses to produce its result. \\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = 0, p2 = 0;\\n        int len = player1.length;\\n\\n        // If there\\'s only 1 turn\\n        if (len == 1) {\\n            p1 += player1[0];\\n            p2 += player2[0];\\n            return p1 > p2 ? 1 : (p2 > p1 ? 2 : 0);\\n        }\\n\\n        // For all turns except the first\\n        for (int i = 1; i < len; i++) {\\n            if (player1[i-1] == 10 || (i-2 >= 0 && player1[i-2] == 10)) {\\n                p1 += player1[i]*2;\\n            } else {\\n                p1 += player1[i];\\n            }\\n\\n            if (player2[i-1] == 10 || (i-2 >= 0 && player2[i-2] == 10)) {\\n                p2 += player2[i]*2;\\n            } else {\\n                p2 += player2[i];\\n            }\\n        }\\n\\n        // Handle the first turn\\n        p1 += player1[0];\\n        p2 += player2[0];\\n\\n        return p1 > p2 ? 1 : (p2 > p1 ? 2 : 0);\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = 0, p2 = 0;\\n        int len = player1.length;\\n\\n        // If there\\'s only 1 turn\\n        if (len == 1) {\\n            p1 += player1[0];\\n            p2 += player2[0];\\n            return p1 > p2 ? 1 : (p2 > p1 ? 2 : 0);\\n        }\\n\\n        // For all turns except the first\\n        for (int i = 1; i < len; i++) {\\n            if (player1[i-1] == 10 || (i-2 >= 0 && player1[i-2] == 10)) {\\n                p1 += player1[i]*2;\\n            } else {\\n                p1 += player1[i];\\n            }\\n\\n            if (player2[i-1] == 10 || (i-2 >= 0 && player2[i-2] == 10)) {\\n                p2 += player2[i]*2;\\n            } else {\\n                p2 += player2[i];\\n            }\\n        }\\n\\n        // Handle the first turn\\n        p1 += player1[0];\\n        p2 += player2[0];\\n\\n        return p1 > p2 ? 1 : (p2 > p1 ? 2 : 0);\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3939476,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1=0;int s2=0;\\n        int n=player1.size();\\n        for(int i=0;i<n;i++)\\n        {\\n            s1+=player1[i];\\n            if(i==1)\\n            {\\n                if(player1[0]==10)\\n                {\\n                    s1+=player1[i];\\n                }\\n            }\\n            else if(i>1 and (player1[i-1]==10 or player1[i-2]==10))\\n            {\\n                s1+=player1[i];\\n            }\\n            \\n        }\\n        for(int i=0;i<n;i++)\\n        {\\n            s2+=player2[i];\\n            if(i==1)\\n            {\\n                if(player2[0]==10)\\n                {\\n                    s2+=player2[i];\\n                }\\n            }\\n            else if(i>1 and (player2[i-1]==10 or player2[i-2]==10))\\n            {\\n                s2+=player2[i];\\n            }\\n            \\n        }\\n        if(s1>s2)\\n        return 1;\\n        if(s2>s1)\\n        return 2;\\n        else return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int s1=0;int s2=0;\\n        int n=player1.size();\\n        for(int i=0;i<n;i++)\\n        {\\n            s1+=player1[i];\\n            if(i==1)\\n            {\\n                if(player1[0]==10)\\n                {\\n                    s1+=player1[i];\\n                }\\n            }\\n            else if(i>1 and (player1[i-1]==10 or player1[i-2]==10))\\n            {\\n                s1+=player1[i];\\n            }\\n            \\n        }\\n        for(int i=0;i<n;i++)\\n        {\\n            s2+=player2[i];\\n            if(i==1)\\n            {\\n                if(player2[0]==10)\\n                {\\n                    s2+=player2[i];\\n                }\\n            }\\n            else if(i>1 and (player2[i-1]==10 or player2[i-2]==10))\\n            {\\n                s2+=player2[i];\\n            }\\n            \\n        }\\n        if(s1>s2)\\n        return 1;\\n        if(s2>s1)\\n        return 2;\\n        else return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3928745,
                "title": "c-solution-based-on-brute-force-and-very-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nBrute force built on all possible cases\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nNaive approach \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ --> O(n1+n2)~O(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->  O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size();\\n        int n2=player2.size();\\n        int sum1=0,sum2=0;\\n       \\n        sum1=0;sum2=0;\\n        for(int i=0;i<n1;i++)\\n        {\\n            if(i==0)\\n            {\\n                sum1+=player1[i];\\n            }\\n             if(i==1 && player1[0]==10)\\n            {\\n                sum1+=2*player1[i];\\n            }\\n             if(i==1 && player1[0]!=10)\\n            {\\n                sum1+=player1[i];\\n            }\\n            \\n            else if((i>1)&&(player1[i-1]==10 || player1[i-2]==10))\\n            {\\n                sum1+=2*player1[i];\\n            }\\n            else  if((i>1)&&(player1[i-1]!=10 || player1[i-2]!=10))\\n            {\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int j=0;j<n2;j++)\\n        {\\n            if(j==0)\\n            {\\n                sum2+=player2[j];\\n            }\\n             if(j==1 && player2[0]==10)\\n            {\\n                sum2+=2*player2[j];\\n            }\\n            if(j==1 && player2[0]!=10)\\n            {\\n                sum2+=player2[j];\\n            }\\n            \\n            else if((j>1)&&(player2[j-1]==10 || player2[j-2]==10))\\n            {\\n                sum2+=2*player2[j];\\n            }\\n            else if((j>1)&&(player2[j-1]!=10 || player2[j-2]!=10))\\n            {\\n                sum2+=player2[j];\\n            }\\n        }\\n        \\n        if (sum1>sum2) \\n        {return 1;\\n        }\\n        else if(sum2>sum1)\\n        {return 2;\\n        }\\n        else\\n        { return 0;}\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size();\\n        int n2=player2.size();\\n        int sum1=0,sum2=0;\\n       \\n        sum1=0;sum2=0;\\n        for(int i=0;i<n1;i++)\\n        {\\n            if(i==0)\\n            {\\n                sum1+=player1[i];\\n            }\\n             if(i==1 && player1[0]==10)\\n            {\\n                sum1+=2*player1[i];\\n            }\\n             if(i==1 && player1[0]!=10)\\n            {\\n                sum1+=player1[i];\\n            }\\n            \\n            else if((i>1)&&(player1[i-1]==10 || player1[i-2]==10))\\n            {\\n                sum1+=2*player1[i];\\n            }\\n            else  if((i>1)&&(player1[i-1]!=10 || player1[i-2]!=10))\\n            {\\n                sum1+=player1[i];\\n            }\\n        }\\n        for(int j=0;j<n2;j++)\\n        {\\n            if(j==0)\\n            {\\n                sum2+=player2[j];\\n            }\\n             if(j==1 && player2[0]==10)\\n            {\\n                sum2+=2*player2[j];\\n            }\\n            if(j==1 && player2[0]!=10)\\n            {\\n                sum2+=player2[j];\\n            }\\n            \\n            else if((j>1)&&(player2[j-1]==10 || player2[j-2]==10))\\n            {\\n                sum2+=2*player2[j];\\n            }\\n            else if((j>1)&&(player2[j-1]!=10 || player2[j-2]!=10))\\n            {\\n                sum2+=player2[j];\\n            }\\n        }\\n        \\n        if (sum1>sum2) \\n        {return 1;\\n        }\\n        else if(sum2>sum1)\\n        {return 2;\\n        }\\n        else\\n        { return 0;}\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3922637,
                "title": "python-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        \"\"\"\\n        :type player1: List[int]\\n        :type player2: List[int]\\n        :rtype: int\\n        \"\"\"\\n        def getScore(player):\\n            count, score = 0, 0\\n\\n            for i in range(len(player)):  \\n                if count > 0:\\n                    score += player[i] * 2\\n                    count -= 1\\n                else:\\n                    score += player[i]\\n                if player[i] == 10:\\n                    count = 2\\n            return score\\n\\n        player1Score, player2Score = getScore(player1), getScore(player2)\\n\\n        if player1Score > player2Score:\\n            return 1\\n        elif player1Score < player2Score:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n                \\n            \\n                    \\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        \"\"\"\\n        :type player1: List[int]\\n        :type player2: List[int]\\n        :rtype: int\\n        \"\"\"\\n        def getScore(player):\\n            count, score = 0, 0\\n\\n            for i in range(len(player)):  \\n                if count > 0:\\n                    score += player[i] * 2\\n                    count -= 1\\n                else:\\n                    score += player[i]\\n                if player[i] == 10:\\n                    count = 2\\n            return score\\n\\n        player1Score, player2Score = getScore(player1), getScore(player2)\\n\\n        if player1Score > player2Score:\\n            return 1\\n        elif player1Score < player2Score:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n                \\n            \\n                    \\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3920800,
                "title": "easy-and-simple-java-solution-runtime-1-ms-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n\\n        int player1_Score = calScore(player1);\\n        int player2_Score = calScore(player2);\\n\\n        if(player1_Score > player2_Score){\\n            return 1;\\n        } \\n        if(player1_Score < player2_Score){\\n            return 2;\\n        } \\n        return 0;\\n        \\n    }\\n\\n    private int calScore(int[] player){\\n\\n        boolean if10PinInLast2Turns = false;\\n        int sum = 0, counter = 0;\\n        for(int i=0; i<player.length; i++){\\n            sum += player[i];\\n            \\n            if(if10PinInLast2Turns){\\n                sum += player[i];\\n                counter++;\\n                \\n                if(counter == 2){\\n                    if10PinInLast2Turns = false;\\n                    counter = 0;\\n                }\\n            }\\n            if(player[i]==10){\\n                if10PinInLast2Turns = true;\\n                counter = 0;\\n                \\n            }\\n\\n            \\n        }\\n        //System.out.println(sum);\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n\\n        int player1_Score = calScore(player1);\\n        int player2_Score = calScore(player2);\\n\\n        if(player1_Score > player2_Score){\\n            return 1;\\n        } \\n        if(player1_Score < player2_Score){\\n            return 2;\\n        } \\n        return 0;\\n        \\n    }\\n\\n    private int calScore(int[] player){\\n\\n        boolean if10PinInLast2Turns = false;\\n        int sum = 0, counter = 0;\\n        for(int i=0; i<player.length; i++){\\n            sum += player[i];\\n            \\n            if(if10PinInLast2Turns){\\n                sum += player[i];\\n                counter++;\\n                \\n                if(counter == 2){\\n                    if10PinInLast2Turns = false;\\n                    counter = 0;\\n                }\\n            }\\n            if(player[i]==10){\\n                if10PinInLast2Turns = true;\\n                counter = 0;\\n                \\n            }\\n\\n            \\n        }\\n        //System.out.println(sum);\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3907074,
                "title": "python-simple-solution-with-explanation",
                "content": "# Intuition\\nWe need to compute the scores based on the pins struck by each player. As the algorithm is repeated, we can use a helper function to compute the scores of player1 and player2\\n\\n# Approach\\nWe iterate through the list to compute the scores of each player. Note that we have to look at up to `i-2` indexes. Consider the cases where the input scores are 2 and below. For this we compute the result of the first 2 indexes separately before computing at index of >= 2\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\n\\n- Space complexity:\\n$$O(n)$$\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        def get_score(scores)-> int:\\n            total = scores[0]\\n            \\n            if len(scores) > 1:\\n                if total == 10:\\n                    total += (2 * scores[1])\\n                else:\\n                    total += scores[1]\\n            \\n            # Start at index 2\\n            for i in range(2, len(scores)):\\n                if scores[i - 1] == 10 or scores[i - 2] == 10:\\n                    total += (2 * scores[i])\\n                else:\\n                    total += scores[i]\\n            return total\\n            \\n        p1 = get_score(player1)\\n        p2 = get_score(player2)\\n\\n        if p1 == p2:\\n            return 0\\n        elif p1 > p2:\\n            return 1\\n        else:\\n            return 2\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        def get_score(scores)-> int:\\n            total = scores[0]\\n            \\n            if len(scores) > 1:\\n                if total == 10:\\n                    total += (2 * scores[1])\\n                else:\\n                    total += scores[1]\\n            \\n            # Start at index 2\\n            for i in range(2, len(scores)):\\n                if scores[i - 1] == 10 or scores[i - 2] == 10:\\n                    total += (2 * scores[i])\\n                else:\\n                    total += scores[i]\\n            return total\\n            \\n        p1 = get_score(player1)\\n        p2 = get_score(player2)\\n\\n        if p1 == p2:\\n            return 0\\n        elif p1 > p2:\\n            return 1\\n        else:\\n            return 2\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3903129,
                "title": "c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\nint a = player1.size(), b = player2.size();\\n        \\n        int first = 0, second = 0, count = 0, i = 0;\\n        while (i < a) {\\n            if (player1[i] == 10) {\\n                count = 2;\\n                first += player1[i];\\n                i++;\\n                while (count != 0 && i < a) {\\n                    first += (2 * player1[i]);\\n                    count--;\\n                    if (player1[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                first += player1[i];\\n                i++;\\n            }\\n        }\\n        \\n        i = 0;\\n        count = 0;\\n        while (i < b) {\\n            if (player2[i] == 10) {\\n                count = 2;\\n                second += player2[i];\\n                i++;\\n                while (count != 0 && i < b) {\\n                    second += (2 * player2[i]);\\n                    count--;\\n                    if (player2[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                second += player2[i];\\n                i++;\\n            }\\n        }\\n        \\n        if (first > second) return 1;\\n        else if (first < second) return 2;\\n        else return 0;\\n\\n\\n\\n\\n\\n\\n\\n\\n       /* int sum1=0;\\n        int sum2=0;\\n        int maxno=INT_MIN;\\n        for(int i=0; i<player1.size(); i++){\\n            if(player1[i-1]||player1[i-2]==10){\\n              sum1+=player1[i]+player1[i];\\n              else{sum1+=player1[i];\\n              }\\n                 \\n            }\\n            }\\n            for(int j=0; j<player2.size(); j++){\\n                if(player2[j-1]||player2[j-2]==10){\\n                sum2+=player2[j]*2;\\n                else{\\n                 sum2+=player2[j];\\n                }\\n                \\n        } \\n        maxno=max(sum1, sum2);\\n      }\\n      return maxno;*/\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\nint a = player1.size(), b = player2.size();\\n        \\n        int first = 0, second = 0, count = 0, i = 0;\\n        while (i < a) {\\n            if (player1[i] == 10) {\\n                count = 2;\\n                first += player1[i];\\n                i++;\\n                while (count != 0 && i < a) {\\n                    first += (2 * player1[i]);\\n                    count--;\\n                    if (player1[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                first += player1[i];\\n                i++;\\n            }\\n        }\\n        \\n        i = 0;\\n        count = 0;\\n        while (i < b) {\\n            if (player2[i] == 10) {\\n                count = 2;\\n                second += player2[i];\\n                i++;\\n                while (count != 0 && i < b) {\\n                    second += (2 * player2[i]);\\n                    count--;\\n                    if (player2[i] == 10) count = 2;\\n                    i++;\\n                }\\n            }\\n            else {\\n                second += player2[i];\\n                i++;\\n            }\\n        }\\n        \\n        if (first > second) return 1;\\n        else if (first < second) return 2;\\n        else return 0;\\n\\n\\n\\n\\n\\n\\n\\n\\n       /* int sum1=0;\\n        int sum2=0;\\n        int maxno=INT_MIN;\\n        for(int i=0; i<player1.size(); i++){\\n            if(player1[i-1]||player1[i-2]==10){\\n              sum1+=player1[i]+player1[i];\\n              else{sum1+=player1[i];\\n              }\\n                 \\n            }\\n            }\\n            for(int j=0; j<player2.size(); j++){\\n                if(player2[j-1]||player2[j-2]==10){\\n                sum2+=player2[j]*2;\\n                else{\\n                 sum2+=player2[j];\\n                }\\n                \\n        } \\n        maxno=max(sum1, sum2);\\n      }\\n      return maxno;*/\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3899598,
                "title": "easy-and-understandable",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        s1,s2=player1[0],player2[0]\\n        for i in range(1,len(player1)):\\n            if i == 1:\\n                if player1[0] == 10:\\n                    s1+=(2*player1[1])\\n                    continue                \\n            elif i>1 and any(player1[j] == 10 for j in range(i-2,i)):\\n                s1+=(2*player1[i])\\n                continue            \\n            s1+=player1[i]\\n        for i in range(1,len(player2)):\\n            if i == 1:\\n                if player2[0] == 10:\\n                    s2+=(2*player2[1])\\n                    continue\\n            elif i>1 and any(player2[j] == 10 for j in range(i-2,i)):\\n                s2+=(2*player2[i])\\n                continue\\n            s2+=player2[i]\\n        if s1 > s2:\\n            return 1\\n        elif s2 > s1:\\n            return 2\\n        return 0\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        s1,s2=player1[0],player2[0]\\n        for i in range(1,len(player1)):\\n            if i == 1:\\n                if player1[0] == 10:\\n                    s1+=(2*player1[1])\\n                    continue                \\n            elif i>1 and any(player1[j] == 10 for j in range(i-2,i)):\\n                s1+=(2*player1[i])\\n                continue            \\n            s1+=player1[i]\\n        for i in range(1,len(player2)):\\n            if i == 1:\\n                if player2[0] == 10:\\n                    s2+=(2*player2[1])\\n                    continue\\n            elif i>1 and any(player2[j] == 10 for j in range(i-2,i)):\\n                s2+=(2*player2[i])\\n                continue\\n            s2+=player2[i]\\n        if s1 > s2:\\n            return 1\\n        elif s2 > s1:\\n            return 2\\n        return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3893305,
                "title": "java-2ms-beats-87-37",
                "content": "# Intuition & Approach\\n- use a simulation strategy\\n- at each strike, reset the player\\'s strike weight\\n- decrement strike weight every round \\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n// 2ms Beats 87.37%\\n\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n\\n        int n = player1.length;\\n        \\n        int[][] pins = new int[2][n];\\n        pins[0] = player1;\\n        pins[1] = player2;\\n\\n        // strategy: simulation\\n\\n        int[] scores = new int[2];\\n        int[] strikeWeight = new int[2];\\n\\n        for (int round = 0; round < n; ++round) {\\n            for (int player = 0; player < 2; ++player) {\\n\\n                // determine multiplier\\n                int multiplier = 1;\\n                if (strikeWeight[player] > 0) {\\n                    multiplier = 2;\\n                }\\n\\n                // add score to running total\\n                scores[player] += pins[player][round] * multiplier;\\n\\n                // adjust strike count as needed\\n                if (pins[player][round] == 10) {\\n                    strikeWeight[player] = 2;\\n                } else {\\n                    strikeWeight[player] = clamp(strikeWeight[player] - 1, 0, 2);\\n                }\\n            }\\n        }\\n\\n        // determine winner\\n        if (scores[0] > scores[1]) {\\n            return 1;\\n        } else if (scores[1] > scores[0]) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n        \\n    }\\n\\n    private int clamp(int val, int lower, int upper) {\\n        if (val < lower) {\\n            return lower;\\n        } else if (val > upper) {\\n            return upper;\\n        } else {\\n            return val;\\n        }\\n    }\\n\\n}\\n\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// 2ms Beats 87.37%\\n\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n\\n        int n = player1.length;\\n        \\n        int[][] pins = new int[2][n];\\n        pins[0] = player1;\\n        pins[1] = player2;\\n\\n        // strategy: simulation\\n\\n        int[] scores = new int[2];\\n        int[] strikeWeight = new int[2];\\n\\n        for (int round = 0; round < n; ++round) {\\n            for (int player = 0; player < 2; ++player) {\\n\\n                // determine multiplier\\n                int multiplier = 1;\\n                if (strikeWeight[player] > 0) {\\n                    multiplier = 2;\\n                }\\n\\n                // add score to running total\\n                scores[player] += pins[player][round] * multiplier;\\n\\n                // adjust strike count as needed\\n                if (pins[player][round] == 10) {\\n                    strikeWeight[player] = 2;\\n                } else {\\n                    strikeWeight[player] = clamp(strikeWeight[player] - 1, 0, 2);\\n                }\\n            }\\n        }\\n\\n        // determine winner\\n        if (scores[0] > scores[1]) {\\n            return 1;\\n        } else if (scores[1] > scores[0]) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n        \\n    }\\n\\n    private int clamp(int val, int lower, int upper) {\\n        if (val < lower) {\\n            return lower;\\n        } else if (val > upper) {\\n            return upper;\\n        } else {\\n            return val;\\n        }\\n    }\\n\\n}\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3889429,
                "title": "python-simple-python-solution",
                "content": "# If You like the Solution, Don\\'t Forget To UpVote Me, Please UpVote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 373 ms, faster than 5.11% of Python3 online submissions for Determine the Winner of a Bowling Game.\\n# Memory Usage: 16.6 MB, less than 22.18% of Python3 online submissions for Determine the Winner of a Bowling Game.\\n\\n\\tclass Solution:\\n\\t\\tdef isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n\\t\\t\\tscore_card1 , score_card2 = player1[:1] , player2[:1]\\n\\n\\t\\t\\tfor index in range(1 , len(player1)):\\n\\n\\t\\t\\t\\tif 10 in player1[:index][-2:]:\\n\\t\\t\\t\\t\\tscore_card1.append(player1[index] * 2)\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\tscore_card1.append(player1[index])\\n\\n\\t\\t\\t\\tif 10 in player2[:index][-2:]:\\n\\t\\t\\t\\t\\tscore_card2.append(player2[index] * 2)\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\tscore_card2.append(player2[index])\\n\\n\\t\\t\\tscore1 , score2 = sum(score_card1) , sum(score_card2)\\n\\n\\t\\t\\tif score1 == score2:\\n\\t\\t\\t\\treturn 0\\n\\t\\t\\telif score1 > score2:\\n\\t\\t\\t\\treturn 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\treturn 2\\n\\t\\t\\t\\t\\n\\tTime Complexity : O(n)\\n\\tSpace Complexity : O(1)\\n\\t\\n# Thank You \\uD83E\\uDD73\\u270C\\uD83D\\uDC4D",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "# If You like the Solution, Don\\'t Forget To UpVote Me, Please UpVote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 373 ms, faster than 5.11% of Python3 online submissions for Determine the Winner of a Bowling Game.\\n# Memory Usage: 16.6 MB, less than 22.18% of Python3 online submissions for Determine the Winner of a Bowling Game.\\n\\n\\tclass Solution:\\n\\t\\tdef isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n\\t\\t\\tscore_card1 , score_card2 = player1[:1] , player2[:1]\\n\\n\\t\\t\\tfor index in range(1 , len(player1)):\\n\\n\\t\\t\\t\\tif 10 in player1[:index][-2:]:\\n\\t\\t\\t\\t\\tscore_card1.append(player1[index] * 2)\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\tscore_card1.append(player1[index])\\n\\n\\t\\t\\t\\tif 10 in player2[:index][-2:]:\\n\\t\\t\\t\\t\\tscore_card2.append(player2[index] * 2)\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\tscore_card2.append(player2[index])\\n\\n\\t\\t\\tscore1 , score2 = sum(score_card1) , sum(score_card2)\\n\\n\\t\\t\\tif score1 == score2:\\n\\t\\t\\t\\treturn 0\\n\\t\\t\\telif score1 > score2:\\n\\t\\t\\t\\treturn 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\treturn 2\\n\\t\\t\\t\\t\\n\\tTime Complexity : O(n)\\n\\tSpace Complexity : O(1)\\n\\t\\n# Thank You \\uD83E\\uDD73\\u270C\\uD83D\\uDC4D",
                "codeTag": "Java"
            },
            {
                "id": 3878676,
                "title": "winner-of-the-bowling-game",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        pl1=0\\n        pl2=0\\n        for i in range(len(player1)):\\n            pl1+=2*player1[i] if i-1>-1 and  10 in [player1[i-1],player1[i-2] if i-2>-1 else 0] else player1[i]\\n            pl2+=2*player2[i] if i-1>-1 and  10 in [player2[i-1],player2[i-2] if i-2>-1 else 0] else player2[i]\\n        return 1 if pl1>pl2 else(0 if pl1==pl2 else 2 )\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        pl1=0\\n        pl2=0\\n        for i in range(len(player1)):\\n            pl1+=2*player1[i] if i-1>-1 and  10 in [player1[i-1],player1[i-2] if i-2>-1 else 0] else player1[i]\\n            pl2+=2*player2[i] if i-1>-1 and  10 in [player2[i-1],player2[i-2] if i-2>-1 else 0] else player2[i]\\n        return 1 if pl1>pl2 else(0 if pl1==pl2 else 2 )\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3876873,
                "title": "python-easy-clean-solution",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def cnt_points(lst):\\n            res = cnt = 0\\n            for i in lst:\\n                res += i\\n                if cnt > 0:\\n                    res += i\\n                    cnt -= 1\\n\\n                if i == 10:\\n                    cnt = 2\\n            return res\\n                \\n\\n        if cnt_points(player1) > cnt_points(player2):\\n            return 1\\n        elif cnt_points(player1) < cnt_points(player2):\\n            return 2\\n        else:\\n            return 0\\n```\\n![catty.png](https://assets.leetcode.com/users/images/e21cdc1e-ca0a-4d33-b734-d379e88435c6_1691413122.8635035.png)\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def cnt_points(lst):\\n            res = cnt = 0\\n            for i in lst:\\n                res += i\\n                if cnt > 0:\\n                    res += i\\n                    cnt -= 1\\n\\n                if i == 10:\\n                    cnt = 2\\n            return res\\n                \\n\\n        if cnt_points(player1) > cnt_points(player2):\\n            return 1\\n        elif cnt_points(player1) < cnt_points(player2):\\n            return 2\\n        else:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3865770,
                "title": "super-simple-c",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        int Calc(int[] input) {\\n            var sum = 0;\\n            bool HitTenAt(int pos) {\\n                if (pos < 0) {\\n                    return false;\\n                }\\n                if (pos >= input.Length) {\\n                    return false;\\n                }\\n                return input[pos] == 10;\\n            }\\n\\n            for (var i = 0; i < input.Length; i++) {\\n                if (HitTenAt(i-1) || HitTenAt(i-2)) {\\n                    sum += input[i]*2;\\n                } else {\\n                    sum += input[i];\\n                }\\n            }\\n\\n            return sum;\\n        }\\n\\n        var one = Calc(player1);\\n        var two = Calc(player2);\\n        if  (one == two) {\\n            return 0;\\n        }\\n\\n        return one > two ? 1 : 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        int Calc(int[] input) {\\n            var sum = 0;\\n            bool HitTenAt(int pos) {\\n                if (pos < 0) {\\n                    return false;\\n                }\\n                if (pos >= input.Length) {\\n                    return false;\\n                }\\n                return input[pos] == 10;\\n            }\\n\\n            for (var i = 0; i < input.Length; i++) {\\n                if (HitTenAt(i-1) || HitTenAt(i-2)) {\\n                    sum += input[i]*2;\\n                } else {\\n                    sum += input[i];\\n                }\\n            }\\n\\n            return sum;\\n        }\\n\\n        var one = Calc(player1);\\n        var two = Calc(player2);\\n        if  (one == two) {\\n            return 0;\\n        }\\n\\n        return one > two ? 1 : 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3812137,
                "title": "my-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint isWinner(int* player1, int player1Size, int* player2, int player2Size){\\n    int p1 = 0;\\n    int p2 = 0;\\n    int i;\\n\\n    int p1x = 0;\\n    int p2x = 0;\\n    for(i=0;i<player1Size;i++){\\n        if(p1x){\\n            p1x--;\\n            p1 += (player1[i]*2);\\n        }\\n        else\\n            p1 += player1[i];\\n        if(p2x){\\n            p2x--;\\n            p2 += (player2[i]*2);\\n        }\\n        else\\n            p2 += player2[i];\\n\\n        if(player1[i] == 10)\\n            p1x = 2;\\n        if(player2[i] == 10)\\n            p2x = 2;\\n    }\\n\\n    if(p1==p2)\\n        return 0;\\n    return p1 > p2? 1: 2;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint isWinner(int* player1, int player1Size, int* player2, int player2Size){\\n    int p1 = 0;\\n    int p2 = 0;\\n    int i;\\n\\n    int p1x = 0;\\n    int p2x = 0;\\n    for(i=0;i<player1Size;i++){\\n        if(p1x){\\n            p1x--;\\n            p1 += (player1[i]*2);\\n        }\\n        else\\n            p1 += player1[i];\\n        if(p2x){\\n            p2x--;\\n            p2 += (player2[i]*2);\\n        }\\n        else\\n            p2 += player2[i];\\n\\n        if(player1[i] == 10)\\n            p1x = 2;\\n        if(player2[i] == 10)\\n            p2x = 2;\\n    }\\n\\n    if(p1==p2)\\n        return 0;\\n    return p1 > p2? 1: 2;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3810439,
                "title": "python-rusts-solution",
                "content": "# Code\\n```python []\\nclass Solution:\\n    @staticmethod\\n    def calculate_total(player: List[int]) -> int:\\n        total, last_ten = (0, -100)\\n        for index, score in enumerate(player):\\n            if index - last_ten <= 2:\\n                total += score * 2\\n            else:\\n                total += score\\n\\n            if score == 10:\\n                last_ten = index\\n\\n        return total\\n\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        if self.calculate_total(player1) == self.calculate_total(player2):\\n            return 0\\n        elif self.calculate_total(player1) > self.calculate_total(player2):\\n            return 1\\n        else:\\n            return 2\\n```\\n```rust []\\nuse std::cmp::{self, Ordering};\\n\\nimpl Solution {\\n    fn calculate_total_score(scores: &Vec<i32>) -> i32 {\\n        let mut last_ten: Option<usize> = None;\\n        let mut total_score = 0;\\n        for (pos, &score) in scores.iter().enumerate() {\\n            if let Some(x) = last_ten {\\n                if pos - x <= 2 {\\n                    total_score += score;\\n                }\\n            }\\n            total_score += score;\\n            if score == 10 {\\n                last_ten = Some(pos);\\n            }\\n        }\\n        total_score\\n    }\\n    pub fn is_winner(player1: Vec<i32>, player2: Vec<i32>) -> i32 {\\n        match Solution::calculate_total_score(&player1)\\n            .cmp(&Solution::calculate_total_score(&player2))\\n        {\\n            Ordering::Equal => 0,\\n            Ordering::Greater => 1,\\n            Ordering::Less => 2,\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Python3",
                    "Rust"
                ],
                "code": "```python []\\nclass Solution:\\n    @staticmethod\\n    def calculate_total(player: List[int]) -> int:\\n        total, last_ten = (0, -100)\\n        for index, score in enumerate(player):\\n            if index - last_ten <= 2:\\n                total += score * 2\\n            else:\\n                total += score\\n\\n            if score == 10:\\n                last_ten = index\\n\\n        return total\\n\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        if self.calculate_total(player1) == self.calculate_total(player2):\\n            return 0\\n        elif self.calculate_total(player1) > self.calculate_total(player2):\\n            return 1\\n        else:\\n            return 2\\n```\n```rust []\\nuse std::cmp::{self, Ordering};\\n\\nimpl Solution {\\n    fn calculate_total_score(scores: &Vec<i32>) -> i32 {\\n        let mut last_ten: Option<usize> = None;\\n        let mut total_score = 0;\\n        for (pos, &score) in scores.iter().enumerate() {\\n            if let Some(x) = last_ten {\\n                if pos - x <= 2 {\\n                    total_score += score;\\n                }\\n            }\\n            total_score += score;\\n            if score == 10 {\\n                last_ten = Some(pos);\\n            }\\n        }\\n        total_score\\n    }\\n    pub fn is_winner(player1: Vec<i32>, player2: Vec<i32>) -> i32 {\\n        match Solution::calculate_total_score(&player1)\\n            .cmp(&Solution::calculate_total_score(&player2))\\n        {\\n            Ordering::Equal => 0,\\n            Ordering::Greater => 1,\\n            Ordering::Less => 2,\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3809896,
                "title": "long-but-simple",
                "content": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>&p1 , vector<int>&p2){\\n        int sum1=p1[0] , sum2=p2[0];\\n        if(p1.size()==1){\\n            if(sum1>sum2){\\n                return 1;\\n            }\\n            else if(sum2>sum1){\\n                return 2;\\n            }\\n            return 0;\\n        }\\n        if(p1[0]==10){\\n            sum1+=(2*p1[1]);\\n        }\\n        else{\\n            sum1+=p1[1];\\n        }\\n        if(p2[0]==10){\\n            sum2+=(2*p2[1]);\\n        }\\n        else{\\n            sum2+=p2[1];\\n        }\\n        for(int i=2; i<p1.size(); i++){\\n            if(p1[i-1]==10 || p1[i-2]==10){\\n                sum1+=(p1[i]*2);\\n            }\\n            else{\\n                sum1+=p1[i];\\n            }\\n        }\\n        for(int i=2; i<p2.size(); i++){\\n            if(p2[i-1]==10 || p2[i-2]==10){\\n                sum2+=(p2[i]*2);\\n            }\\n            else{\\n                sum2+=p2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum1<sum2){\\n            return 2;\\n        }\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>&p1 , vector<int>&p2){\\n        int sum1=p1[0] , sum2=p2[0];\\n        if(p1.size()==1){\\n            if(sum1>sum2){\\n                return 1;\\n            }\\n            else if(sum2>sum1){\\n                return 2;\\n            }\\n            return 0;\\n        }\\n        if(p1[0]==10){\\n            sum1+=(2*p1[1]);\\n        }\\n        else{\\n            sum1+=p1[1];\\n        }\\n        if(p2[0]==10){\\n            sum2+=(2*p2[1]);\\n        }\\n        else{\\n            sum2+=p2[1];\\n        }\\n        for(int i=2; i<p1.size(); i++){\\n            if(p1[i-1]==10 || p1[i-2]==10){\\n                sum1+=(p1[i]*2);\\n            }\\n            else{\\n                sum1+=p1[i];\\n            }\\n        }\\n        for(int i=2; i<p2.size(); i++){\\n            if(p2[i-1]==10 || p2[i-2]==10){\\n                sum2+=(p2[i]*2);\\n            }\\n            else{\\n                sum2+=p2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum1<sum2){\\n            return 2;\\n        }\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3801009,
                "title": "simple-kotlin-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var score1 = player1[0]\\n        var score2 = player2[0]\\n        var i = 1\\n\\n        while (i < player1.size) {\\n            score1 += calculateScore(i, player1)\\n            score2 += calculateScore(i, player2)\\n            i++\\n        }\\n\\n        return if (score1 > score2) 1 else if (score1 < score2) 2 else 0\\n    }\\n\\n    private fun calculateScore(i: Int, scores: IntArray) =\\n        if (scores[i-1] == 10 || i-2 >= 0 && scores[i-2] == 10)\\n            scores[i] * 2\\n        else scores[i]\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var score1 = player1[0]\\n        var score2 = player2[0]\\n        var i = 1\\n\\n        while (i < player1.size) {\\n            score1 += calculateScore(i, player1)\\n            score2 += calculateScore(i, player2)\\n            i++\\n        }\\n\\n        return if (score1 > score2) 1 else if (score1 < score2) 2 else 0\\n    }\\n\\n    private fun calculateScore(i: Int, scores: IntArray) =\\n        if (scores[i-1] == 10 || i-2 >= 0 && scores[i-2] == 10)\\n            scores[i] * 2\\n        else scores[i]\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3790982,
                "title": "count-points-per-player-98-speed",
                "content": "![image.png](https://assets.leetcode.com/users/images/e4811f84-9fe9-4684-924f-94606eb4b831_1689834723.3181927.png)\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        last2 = last1 = False\\n        sum1 = 0\\n        for x in player1:\\n            sum1 += x * (2 if last2 or last1 else 1)\\n            last2 = last1\\n            last1 = x == 10\\n        last2 = last1 = False\\n        sum2 = 0\\n        for x in player2:\\n            sum2 += x * (2 if last2 or last1 else 1)\\n            last2 = last1\\n            last1 = x == 10\\n        return 1 if sum1 > sum2 else (2 if sum2 > sum1 else 0)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        last2 = last1 = False\\n        sum1 = 0\\n        for x in player1:\\n            sum1 += x * (2 if last2 or last1 else 1)\\n            last2 = last1\\n            last1 = x == 10\\n        last2 = last1 = False\\n        sum2 = 0\\n        for x in player2:\\n            sum2 += x * (2 if last2 or last1 else 1)\\n            last2 = last1\\n            last1 = x == 10\\n        return 1 if sum1 > sum2 else (2 if sum2 > sum1 else 0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3789117,
                "title": "python3-simple-beats-97-66-runtime-and-60-58-memory",
                "content": "# Code\\n```\\nclass Solution:\\n    def isWinner(self, p1: List[int], p2: List[int]) -> int:\\n        def calc_score(p):\\n            doubles = sum = 0\\n            for i in p:\\n                if(doubles > 0):\\n                    sum += 2*i\\n                    doubles -= 1\\n                else:\\n                    sum += i\\n                if(i == 10):\\n                    doubles = 2\\n            return sum\\n\\n        c1, c2 = calc_score(p1), calc_score(p2)\\n        if(c1 == c2):\\n            return 0\\n        if(c1 > c2):\\n            return 1\\n        return 2\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, p1: List[int], p2: List[int]) -> int:\\n        def calc_score(p):\\n            doubles = sum = 0\\n            for i in p:\\n                if(doubles > 0):\\n                    sum += 2*i\\n                    doubles -= 1\\n                else:\\n                    sum += i\\n                if(i == 10):\\n                    doubles = 2\\n            return sum\\n\\n        c1, c2 = calc_score(p1), calc_score(p2)\\n        if(c1 == c2):\\n            return 0\\n        if(c1 > c2):\\n            return 1\\n        return 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3783132,
                "title": "simple-beats-99-80-of-java-users",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(N)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = 0;\\n        int player2Score = 0;\\n        \\n        for(int i = 0; i < player1.length; i++){\\n            if(i > 0 && player1[i - 1] == 10 ){\\n                player1Score += 2 * player1[i];\\n                continue;\\n            }\\n            if(i > 1 && (player1[i - 1] == 10|| player1[i-2] ==10)){\\n                player1Score += 2 * player1[i];\\n                continue;\\n            }\\n            player1Score += player1[i];\\n        }\\n\\n        for(int i = 0; i < player2.length; i++){\\n            if(i > 0 && player2[i - 1] == 10 ){\\n                player2Score += 2 * player2[i];\\n                continue;\\n            }\\n            if(i > 1 && (player2[i - 1] == 10|| player2[i-2] ==10)){\\n                player2Score += 2 * player2[i];\\n                continue;\\n            }\\n            player2Score += player2[i];\\n        }\\n\\n        if(player1Score > player2Score){\\n            return 1;\\n        }else if(player1Score < player2Score){\\n            return 2;\\n        }else{\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = 0;\\n        int player2Score = 0;\\n        \\n        for(int i = 0; i < player1.length; i++){\\n            if(i > 0 && player1[i - 1] == 10 ){\\n                player1Score += 2 * player1[i];\\n                continue;\\n            }\\n            if(i > 1 && (player1[i - 1] == 10|| player1[i-2] ==10)){\\n                player1Score += 2 * player1[i];\\n                continue;\\n            }\\n            player1Score += player1[i];\\n        }\\n\\n        for(int i = 0; i < player2.length; i++){\\n            if(i > 0 && player2[i - 1] == 10 ){\\n                player2Score += 2 * player2[i];\\n                continue;\\n            }\\n            if(i > 1 && (player2[i - 1] == 10|| player2[i-2] ==10)){\\n                player2Score += 2 * player2[i];\\n                continue;\\n            }\\n            player2Score += player2[i];\\n        }\\n\\n        if(player1Score > player2Score){\\n            return 1;\\n        }else if(player1Score < player2Score){\\n            return 2;\\n        }else{\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3783066,
                "title": "c-o-n-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n = player1.size();\\n        int res1 = 0;\\n        int res2 = 0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(i > 0 && player1[i-1] == 10)\\n                res1 += 2 * player1[i];\\n            else if(i > 1 && player1[i-2] == 10)\\n                res1 += 2 * player1[i];\\n            else\\n                res1 += player1[i];\\n            if(i > 0 && player2[i-1] == 10)\\n                res2 += 2 * player2[i];\\n            else if(i > 1 && player2[i-2] == 10)\\n                res2 += 2 * player2[i];\\n            else\\n                res2 += player2[i];\\n        }\\n        if(res1 == res2)\\n            return 0;\\n        else if(res1 > res2)\\n            return 1;\\n        return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n = player1.size();\\n        int res1 = 0;\\n        int res2 = 0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(i > 0 && player1[i-1] == 10)\\n                res1 += 2 * player1[i];\\n            else if(i > 1 && player1[i-2] == 10)\\n                res1 += 2 * player1[i];\\n            else\\n                res1 += player1[i];\\n            if(i > 0 && player2[i-1] == 10)\\n                res2 += 2 * player2[i];\\n            else if(i > 1 && player2[i-2] == 10)\\n                res2 += 2 * player2[i];\\n            else\\n                res2 += player2[i];\\n        }\\n        if(res1 == res2)\\n            return 0;\\n        else if(res1 > res2)\\n            return 1;\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3782877,
                "title": "typescript-detailed-explanation-simple-solution-beats-92-68",
                "content": "# Intuition\\n\\nThe problem requires comparing the total scores of two bowling players. The score is calculated by doubling the current turn\\'s pins if 10 were hit in the previous two turns, or else simply adding the current pins. By calculating each player\\'s total score, we can compare and determine the winner.\\n\\n# Approach\\n\\nWe just have to iterate through the array and add the values to a variable.\\n\\nWhenever we hit a 10 we set the strikeCounter to two and decrease it the following two rounds by one until it is zero. Now we can always check if stikeCounter is bigger than 0 and in that case add the value a second time to the total.\\n\\nAt the end we just compare the two numbers and return the correct result.\\n\\n# Complexity\\n- Time complexity: $$O(n + m)$$\\n\\nWe iterate through the two input arrays exactly one time each.\\n\\nOne could argue that this is $$O(n)$$ instead, because the arrays are the same size.\\n\\n- Space complexity: $$O(1)$$\\n\\nWe are only creating integer variables which are always the same size, so the space taken by this algorithm is constant -> $$O(1)$$\\n\\n# Code\\n```\\nfunction isWinner(playerOne: number[], playerTwo: number[]): number {\\n    let scorePlayerOne = getScore(playerOne);\\n    let scorePlayerTwo = getScore(playerTwo);\\n\\n    if (scorePlayerOne > scorePlayerTwo) {\\n        return 1;\\n    }\\n\\n    if (scorePlayerOne < scorePlayerTwo) {\\n        return 2;\\n    }\\n\\n    return 0;\\n};\\n\\nfunction getScore(pinsHit: number[]): number {\\n    let total = 0;\\n\\n    for (let i = 0, strikeCounter = 0; i < pinsHit.length; i++) {\\n        total += pinsHit[i];\\n\\n        if (strikeCounter > 0) {\\n            total += pinsHit[i];\\n            strikeCounter--;\\n        }\\n\\n        if (pinsHit[i] === 10) {\\n            strikeCounter = 2;\\n        }\\n    }\\n\\n    return total;\\n}\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript",
                    "Array",
                    "Math"
                ],
                "code": "```\\nfunction isWinner(playerOne: number[], playerTwo: number[]): number {\\n    let scorePlayerOne = getScore(playerOne);\\n    let scorePlayerTwo = getScore(playerTwo);\\n\\n    if (scorePlayerOne > scorePlayerTwo) {\\n        return 1;\\n    }\\n\\n    if (scorePlayerOne < scorePlayerTwo) {\\n        return 2;\\n    }\\n\\n    return 0;\\n};\\n\\nfunction getScore(pinsHit: number[]): number {\\n    let total = 0;\\n\\n    for (let i = 0, strikeCounter = 0; i < pinsHit.length; i++) {\\n        total += pinsHit[i];\\n\\n        if (strikeCounter > 0) {\\n            total += pinsHit[i];\\n            strikeCounter--;\\n        }\\n\\n        if (pinsHit[i] === 10) {\\n            strikeCounter = 2;\\n        }\\n    }\\n\\n    return total;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3778258,
                "title": "java-easy-solution-beats-99-80-2-ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int ans = evaluateScore (player1) - evaluateScore (player2);\\n        if(ans > 0)\\n            return 1;\\n        else if(ans < 0)\\n            return 2;\\n        return 0;\\n    }\\n    private int evaluateScore(int[] player)\\n    {\\n        int hit = 0;\\n        int score = 0;\\n        for(int x : player)\\n        {\\n            score += (hit > 0 ? x * 2: x);\\n            if(x == 10)\\n                hit = 2;\\n            else\\n                hit--;\\n        }\\n        return score;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int ans = evaluateScore (player1) - evaluateScore (player2);\\n        if(ans > 0)\\n            return 1;\\n        else if(ans < 0)\\n            return 2;\\n        return 0;\\n    }\\n    private int evaluateScore(int[] player)\\n    {\\n        int hit = 0;\\n        int score = 0;\\n        for(int x : player)\\n        {\\n            score += (hit > 0 ? x * 2: x);\\n            if(x == 10)\\n                hit = 2;\\n            else\\n                hit--;\\n        }\\n        return score;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3769743,
                "title": "c-simple-and-easy-to-understand",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<player1.size();i++){\\n            if((i > 1 )&& (player1[i-1] == 10 || player1[i-2] == 10)){\\n                sum1 += (2 * player1[i]);\\n            }\\n            else if(i==1 && player1[i-1] == 10){\\n                sum1 += (2 * player1[i]);\\n            }\\n            else{\\n                sum1 += player1[i];\\n            }\\n        }\\n        for(int i=0;i<player2.size();i++){\\n            if((i > 1) && (player2[i-1] == 10 || player2[i-2] == 10)){\\n                sum2 += (2 * player2[i]);\\n            }\\n            else if(i==1 && player2[i-1] == 10){\\n                sum2 += (2 * player2[i]);\\n            }\\n            else{\\n                sum2 += player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum1<sum2){\\n            return 2;\\n        }\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<player1.size();i++){\\n            if((i > 1 )&& (player1[i-1] == 10 || player1[i-2] == 10)){\\n                sum1 += (2 * player1[i]);\\n            }\\n            else if(i==1 && player1[i-1] == 10){\\n                sum1 += (2 * player1[i]);\\n            }\\n            else{\\n                sum1 += player1[i];\\n            }\\n        }\\n        for(int i=0;i<player2.size();i++){\\n            if((i > 1) && (player2[i-1] == 10 || player2[i-2] == 10)){\\n                sum2 += (2 * player2[i]);\\n            }\\n            else if(i==1 && player2[i-1] == 10){\\n                sum2 += (2 * player2[i]);\\n            }\\n            else{\\n                sum2 += player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum1<sum2){\\n            return 2;\\n        }\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3766508,
                "title": "simple-javascript-solution",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    const getScore = (pins) => {\\n        let total = 0;\\n        for (let i = 0; i < pins.length; i++) {\\n            if (pins[i - 1] === 10 || pins[i - 2] === 10) total += pins[i] * 2;\\n            else total += pins[i];\\n        }\\n        return total;\\n    };\\n    const score1 = getScore(player1);\\n    const score2 = getScore(player2);\\n    return score1 > score2 ? 1 : score1 < score2 ? 2 : 0;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    const getScore = (pins) => {\\n        let total = 0;\\n        for (let i = 0; i < pins.length; i++) {\\n            if (pins[i - 1] === 10 || pins[i - 2] === 10) total += pins[i] * 2;\\n            else total += pins[i];\\n        }\\n        return total;\\n    };\\n    const score1 = getScore(player1);\\n    const score2 = getScore(player2);\\n    return score1 > score2 ? 1 : score1 < score2 ? 2 : 0;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3765609,
                "title": "ez-cpp",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum=0;\\n        int sum1=0;\\n        for(int i=0;i<player1.size();i++){\\n            if((i-2>=0 && player1[i-2]==10) || (i-1>=0 && player1[i-1]==10)){\\n                sum+=player1[i]*2;\\n            }\\n            else{\\n                sum+=player1[i];\\n            }\\n\\n        }\\n\\n        for(int i=0;i<player2.size();i++){\\n            if((i-2>=0 && player2[i-2]==10) || (i-1>=0 && player2[i-1]==10)){\\n                sum1+=player2[i]*2;\\n            }\\n            else{\\n                sum1+=player2[i];\\n            }\\n\\n        }\\n\\n        if(sum==sum1){\\n            return 0;\\n        }\\n        if(sum>sum1){\\n            return 1;\\n        }\\n        \\n            return 2;\\n        \\n\\n\\n\\n\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum=0;\\n        int sum1=0;\\n        for(int i=0;i<player1.size();i++){\\n            if((i-2>=0 && player1[i-2]==10) || (i-1>=0 && player1[i-1]==10)){\\n                sum+=player1[i]*2;\\n            }\\n            else{\\n                sum+=player1[i];\\n            }\\n\\n        }\\n\\n        for(int i=0;i<player2.size();i++){\\n            if((i-2>=0 && player2[i-2]==10) || (i-1>=0 && player2[i-1]==10)){\\n                sum1+=player2[i]*2;\\n            }\\n            else{\\n                sum1+=player2[i];\\n            }\\n\\n        }\\n\\n        if(sum==sum1){\\n            return 0;\\n        }\\n        if(sum>sum1){\\n            return 1;\\n        }\\n        \\n            return 2;\\n        \\n\\n\\n\\n\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3761757,
                "title": "python3-direct-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def addscore(ar):\\n            result = 0\\n            count = 0\\n            for i in range(len(ar)):\\n                if count > 0:\\n                    result += 2*ar[i]\\n                    count -= 1\\n                else:\\n                    result += ar[i]\\n                if ar[i] == 10 and count == 0:\\n                    count += 2\\n                elif ar[i] == 10 and count > 0:\\n                    count +=1\\n            return result\\n            \\n        score1 = addscore(player1)\\n        score2 = addscore(player2)\\n\\n        if score1 > score2:\\n            return 1\\n        elif score1 < score2:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n\\n\\n            \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def addscore(ar):\\n            result = 0\\n            count = 0\\n            for i in range(len(ar)):\\n                if count > 0:\\n                    result += 2*ar[i]\\n                    count -= 1\\n                else:\\n                    result += ar[i]\\n                if ar[i] == 10 and count == 0:\\n                    count += 2\\n                elif ar[i] == 10 and count > 0:\\n                    count +=1\\n            return result\\n            \\n        score1 = addscore(player1)\\n        score2 = addscore(player2)\\n\\n        if score1 > score2:\\n            return 1\\n        elif score1 < score2:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n\\n\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3757993,
                "title": "runtime-2-ms-beats-99-81-memory-43-4-mb-beats-88-31",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sc1 = totalScore(player1);\\n        int sc2 = totalScore(player2);\\n        return sc1 > sc2 ? 1 : (sc2 > sc1 ? 2 : 0);\\n\\n\\n    }\\n\\n    private static int totalScore(int player[]) {\\n        int totalForPlayer = 0;\\n        int len = player.length;\\n        \\n        for (int i = 0; i < len; i++) {\\n            if (i == 0) {\\n                totalForPlayer += player[0];\\n            } else if (i == 1) {\\n                if (player[i - 1] == 10) {\\n                    totalForPlayer += player[i] * 2;\\n                } else {\\n                    totalForPlayer += player[i];\\n                }\\n            } else {\\n                if (player[i - 1] == 10 || player[i - 2] == 10) {\\n                    totalForPlayer += 2 * player[i];\\n                } else {\\n                    totalForPlayer += player[i];\\n                }\\n            }\\n        }\\n\\n        return totalForPlayer;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sc1 = totalScore(player1);\\n        int sc2 = totalScore(player2);\\n        return sc1 > sc2 ? 1 : (sc2 > sc1 ? 2 : 0);\\n\\n\\n    }\\n\\n    private static int totalScore(int player[]) {\\n        int totalForPlayer = 0;\\n        int len = player.length;\\n        \\n        for (int i = 0; i < len; i++) {\\n            if (i == 0) {\\n                totalForPlayer += player[0];\\n            } else if (i == 1) {\\n                if (player[i - 1] == 10) {\\n                    totalForPlayer += player[i] * 2;\\n                } else {\\n                    totalForPlayer += player[i];\\n                }\\n            } else {\\n                if (player[i - 1] == 10 || player[i - 2] == 10) {\\n                    totalForPlayer += 2 * player[i];\\n                } else {\\n                    totalForPlayer += player[i];\\n                }\\n            }\\n        }\\n\\n        return totalForPlayer;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3749990,
                "title": "java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        \\n        boolean isFirstTrue = false;\\n        boolean isSecondTrue = false;\\n\\n        int firstCounter = 0;\\n        int secondCounter = 0;\\n\\n        int firstSum = 0;\\n        int secondSum = 0;\\n\\n        for (int i : player1) {   \\n       \\n            if (isFirstTrue) {\\n                firstSum += i * 2;\\n                firstCounter++;\\n                if (firstCounter == 2) {\\n                    firstCounter = 0;\\n                    isFirstTrue = false;\\n                }\\n            } else {\\n                firstSum += i;\\n       \\n            }\\n                 if (i == 10) {\\n               isFirstTrue = true;\\n                    firstCounter = 0;\\n                    \\n            }\\n        }\\n\\n        \\n        for (int i : player2) {\\n  \\n            if (isSecondTrue) {\\n                secondSum += i * 2;\\n                secondCounter++;\\n                if (secondCounter == 2) {\\n                    secondCounter = 0;\\n                    isSecondTrue = false;\\n                }\\n            } else {\\n                \\n                secondSum += i;\\n                \\n            }\\n            if (i == 10) {\\n                isSecondTrue = true;\\n                secondCounter = 0;\\n            }\\n\\n        }\\n\\n        if (firstSum > secondSum) return  1;\\n        else if (firstSum < secondSum) return 2;\\n        else return 0;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        \\n        boolean isFirstTrue = false;\\n        boolean isSecondTrue = false;\\n\\n        int firstCounter = 0;\\n        int secondCounter = 0;\\n\\n        int firstSum = 0;\\n        int secondSum = 0;\\n\\n        for (int i : player1) {   \\n       \\n            if (isFirstTrue) {\\n                firstSum += i * 2;\\n                firstCounter++;\\n                if (firstCounter == 2) {\\n                    firstCounter = 0;\\n                    isFirstTrue = false;\\n                }\\n            } else {\\n                firstSum += i;\\n       \\n            }\\n                 if (i == 10) {\\n               isFirstTrue = true;\\n                    firstCounter = 0;\\n                    \\n            }\\n        }\\n\\n        \\n        for (int i : player2) {\\n  \\n            if (isSecondTrue) {\\n                secondSum += i * 2;\\n                secondCounter++;\\n                if (secondCounter == 2) {\\n                    secondCounter = 0;\\n                    isSecondTrue = false;\\n                }\\n            } else {\\n                \\n                secondSum += i;\\n                \\n            }\\n            if (i == 10) {\\n                isSecondTrue = true;\\n                secondCounter = 0;\\n            }\\n\\n        }\\n\\n        if (firstSum > secondSum) return  1;\\n        else if (firstSum < secondSum) return 2;\\n        else return 0;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3743528,
                "title": "python-code-with-o-n-time-complexity",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        window_size=2\\n        p=sum(player1)\\n        s=sum(player2)\\n        for i in range(2,len(player1)):\\n            if player1[i-1]==10 or player1[i-2]==10:\\n                p+=player1[i]\\n            if player2[i-1]==10 or player2[i-2]==10:\\n                s+=player2[i]\\n        if len(player1)>1:\\n            if player1[0]==10:\\n                p+=player1[1]\\n            if player2[0]==10:\\n                s+=player2[1]\\n        if p>s:\\n            return 1\\n        elif p<s:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "Array"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        window_size=2\\n        p=sum(player1)\\n        s=sum(player2)\\n        for i in range(2,len(player1)):\\n            if player1[i-1]==10 or player1[i-2]==10:\\n                p+=player1[i]\\n            if player2[i-1]==10 or player2[i-2]==10:\\n                s+=player2[i]\\n        if len(player1)>1:\\n            if player1[0]==10:\\n                p+=player1[1]\\n            if player2[0]==10:\\n                s+=player2[1]\\n        if p>s:\\n            return 1\\n        elif p<s:\\n            return 2\\n        else:\\n            return 0\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3740869,
                "title": "my-python3-solution-understandable-for-beginners",
                "content": "**I hope it was helpful for you. If that so, I would be glad if you upvote**\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0\\n        if len(player1) == 1:\\n            score1 += player1[0]\\n        if len(player2) == 1:\\n            score2 += player2[0]\\n        else:\\n            for i in range (len(player1)):\\n                if i >= 2 and player1[i-2] == 10 or i >= 1 and player1[i-1] == 10:\\n                    score1 += player1[i] * 2\\n                else:\\n                    score1 += player1[i]\\n\\n            for i in range (len(player2)):\\n                if i >= 2 and player2[i-2] == 10 or i >= 1 and player2[i-1] == 10:\\n                    score2 += player2[i] * 2\\n                else:\\n                    score2 += player2[i]\\n\\n        return 1 if score1 > score2 else 2 if score1 < score2 else 0\\n```\\n# Complexity\\n- Time complexity: $$O(2*n) = O(n)$$",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0\\n        if len(player1) == 1:\\n            score1 += player1[0]\\n        if len(player2) == 1:\\n            score2 += player2[0]\\n        else:\\n            for i in range (len(player1)):\\n                if i >= 2 and player1[i-2] == 10 or i >= 1 and player1[i-1] == 10:\\n                    score1 += player1[i] * 2\\n                else:\\n                    score1 += player1[i]\\n\\n            for i in range (len(player2)):\\n                if i >= 2 and player2[i-2] == 10 or i >= 1 and player2[i-1] == 10:\\n                    score2 += player2[i] * 2\\n                else:\\n                    score2 += player2[i]\\n\\n        return 1 if score1 > score2 else 2 if score1 < score2 else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3740158,
                "title": "java-simplest-concise-no-repetition-loop-traversal-100-passed",
                "content": "# Intuition\\nsimple loop traversal is enough. we just have to look back 2 indices so it must be linear approach.\\n\\n# Approach\\nadd current game point to the sum if any of previous 2 points were not 10, otherwise add 2*current point.\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = score(player1);\\n        int p2 = score(player2);\\n        \\n        if(p1>p2) return 1;\\n        else if(p1<p2) return 2;\\n        return 0;\\n    }\\n    private int score(int[] play){\\n        int sum = 0;\\n        for(int i=0; i<play.length; i++){\\n            if((i-1>=0 && play[i-1]==10) || (i-2>=0 && play[i-2]==10)) {\\n                sum += 2*play[i];\\n            } else {\\n                sum += play[i];\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = score(player1);\\n        int p2 = score(player2);\\n        \\n        if(p1>p2) return 1;\\n        else if(p1<p2) return 2;\\n        return 0;\\n    }\\n    private int score(int[] play){\\n        int sum = 0;\\n        for(int i=0; i<play.length; i++){\\n            if((i-1>=0 && play[i-1]==10) || (i-2>=0 && play[i-2]==10)) {\\n                sum += 2*play[i];\\n            } else {\\n                sum += play[i];\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3735422,
                "title": "c-easy-to-understand-beats-100-memory",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int solve(vector<int>&a)\\n    {\\n        int ans=a[0];\\n        int n=a.size();\\n        if(a.size()==1)\\n        return ans;\\n        if(a[0]==10)\\n        ans+=2*a[1];\\n        else\\n        ans+=a[1];\\n        for(int i=2;i<a.size();i++)\\n        {\\n            if(a[i-1]==10 || a[i-2]==10)\\n            ans+=2*a[i];\\n            else\\n            ans+=a[i];\\n        }\\n        return ans;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n         //int k=3;\\n         int n1=player1.size();\\n         int n2=player2.size();\\n         \\n         int a1=solve(player1);\\n         int a2=solve(player2);\\n         if(a1>a2)\\n         return 1;\\n         else if(a2>a1)\\n         return 2;\\n         else\\n         return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int solve(vector<int>&a)\\n    {\\n        int ans=a[0];\\n        int n=a.size();\\n        if(a.size()==1)\\n        return ans;\\n        if(a[0]==10)\\n        ans+=2*a[1];\\n        else\\n        ans+=a[1];\\n        for(int i=2;i<a.size();i++)\\n        {\\n            if(a[i-1]==10 || a[i-2]==10)\\n            ans+=2*a[i];\\n            else\\n            ans+=a[i];\\n        }\\n        return ans;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) \\n    {\\n         //int k=3;\\n         int n1=player1.size();\\n         int n2=player2.size();\\n         \\n         int a1=solve(player1);\\n         int a2=solve(player2);\\n         if(a1>a2)\\n         return 1;\\n         else if(a2>a1)\\n         return 2;\\n         else\\n         return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3729465,
                "title": "a-simple-solution-to-understand",
                "content": "# Intuition\\nsimple code for the concept on Python\\n\\n# Approach\\nA loop is created for each player enumerating each element of the array. The additional variable \"z\" signals the appearance of \"10\" in the array and multiplies these values by 2 over the next 2 indexes.\\n\\n# Complexity\\n- Time complexity:\\nO ( N )\\n\\n- Space complexity:\\nO (1)\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        z = 0\\n        x = 0\\n        y = 0\\n        for i in player1:\\n            if z > 0:\\n                x += i * 2\\n                z -= 1\\n                if i == 10:\\n                    z = 2\\n            elif i == 10:\\n                z = 2\\n                x += i\\n                continue\\n            else:\\n                x += i\\n        z = 0\\n        for i in player2:\\n            if z > 0:\\n                y += i * 2\\n                z -= 1\\n                if i == 10:\\n                    z = 2\\n            elif i == 10:\\n                z = 2\\n                y += i\\n                continue\\n            else:\\n                y += i\\n        if x > y:\\n            return 1\\n        elif x == y:\\n            return 0\\n        else:\\n            return 2\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        z = 0\\n        x = 0\\n        y = 0\\n        for i in player1:\\n            if z > 0:\\n                x += i * 2\\n                z -= 1\\n                if i == 10:\\n                    z = 2\\n            elif i == 10:\\n                z = 2\\n                x += i\\n                continue\\n            else:\\n                x += i\\n        z = 0\\n        for i in player2:\\n            if z > 0:\\n                y += i * 2\\n                z -= 1\\n                if i == 10:\\n                    z = 2\\n            elif i == 10:\\n                z = 2\\n                y += i\\n                continue\\n            else:\\n                y += i\\n        if x > y:\\n            return 1\\n        elif x == y:\\n            return 0\\n        else:\\n            return 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3713211,
                "title": "java-solution-beats-100",
                "content": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = findSum(player1);\\n        int player2Score = findSum(player2);\\n        if (player1Score > player2Score) {\\n            return 1;\\n        } else if (player2Score > player1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    private int findSum(int[] player1) {\\n        int prev = 0, prev2 = 0, sum = 0;\\n        for (int i : player1) {\\n            if (prev == 10 || prev2 == 10) {\\n                sum += 2 * i;\\n            } else {\\n                sum += i;\\n            }\\n            prev2 = prev;\\n            prev = i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = findSum(player1);\\n        int player2Score = findSum(player2);\\n        if (player1Score > player2Score) {\\n            return 1;\\n        } else if (player2Score > player1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    private int findSum(int[] player1) {\\n        int prev = 0, prev2 = 0, sum = 0;\\n        for (int i : player1) {\\n            if (prev == 10 || prev2 == 10) {\\n                sum += 2 * i;\\n            } else {\\n                sum += i;\\n            }\\n            prev2 = prev;\\n            prev = i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3707541,
                "title": "determine-the-winner-of-a-bowling-game",
                "content": "Whatever is given in question converting it into code, bit lengthy but once you read you will understand easily. Time  = O(n) and space is O(1)\\n\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sum1 = 0\\n        sum2 = 0\\n        for i in range(len(player1)):\\n            if i < 1:\\n                sum1 += player1[i]\\n                sum2 += player2[i]\\n            elif i < 2:\\n                if player1[i-1] == 10:\\n                    sum1 += (player1[i] * 2)\\n                else:\\n                    sum1 += player1[i]\\n                    \\n                if player2[i-1] == 10:\\n                    sum2 += (player2[i] * 2)\\n                else:\\n                    sum2 += player2[i]\\n            else:\\n                if player1[i-2] == 10 or player1[i-1] == 10:\\n                    sum1 += (player1[i]*2)\\n                else:\\n                    sum1 += player1[i]\\n                    \\n                if player2[i-2] == 10 or player2[i-1] == 10:\\n                    sum2 += (player2[i]*2)\\n                else:\\n                    sum2 += player2[i]\\n        \\n        if sum1 > sum2:\\n            return 1\\n        elif sum2 > sum1:\\n            return 2\\n        else:\\n            return 0\\n          \\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sum1 = 0\\n        sum2 = 0\\n        for i in range(len(player1)):\\n            if i < 1:\\n                sum1 += player1[i]\\n                sum2 += player2[i]\\n            elif i < 2:\\n                if player1[i-1] == 10:\\n                    sum1 += (player1[i] * 2)\\n                else:\\n                    sum1 += player1[i]\\n                    \\n                if player2[i-1] == 10:\\n                    sum2 += (player2[i] * 2)\\n                else:\\n                    sum2 += player2[i]\\n            else:\\n                if player1[i-2] == 10 or player1[i-1] == 10:\\n                    sum1 += (player1[i]*2)\\n                else:\\n                    sum1 += player1[i]\\n                    \\n                if player2[i-2] == 10 or player2[i-1] == 10:\\n                    sum2 += (player2[i]*2)\\n                else:\\n                    sum2 += player2[i]\\n        \\n        if sum1 > sum2:\\n            return 1\\n        elif sum2 > sum1:\\n            return 2\\n        else:\\n            return 0\\n          \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3687117,
                "title": "easy-solution-short-simple",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    let score=0\\n    for(let i =0 ;i <player1.length;i++){\\n        let p1Score=player1[i]\\n        let p2Score=player2[i]\\n        if(player1[i-1]==10||player1[i-2]==10)p1Score*=2\\n        if(player2[i-1]==10||player2[i-2]==10)p2Score*=2\\n        score+=(p1Score - p2Score)\\n    }\\n    return score>0?1:(score===0?0:2)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    let score=0\\n    for(let i =0 ;i <player1.length;i++){\\n        let p1Score=player1[i]\\n        let p2Score=player2[i]\\n        if(player1[i-1]==10||player1[i-2]==10)p1Score*=2\\n        if(player2[i-1]==10||player2[i-2]==10)p2Score*=2\\n        score+=(p1Score - p2Score)\\n    }\\n    return score>0?1:(score===0?0:2)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3679578,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int l=player1.length;\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<l;i++)\\n        {\\n           if(i==1)\\n           {\\n               if (player1[i-1]==10)\\n               sum1+=2*player1[i];\\n               else\\n               sum1+=player1[i];\\n           }\\n           else if(i>1)\\n           {\\n               if (player1[i-1]==10 || player1[i-2]==10)\\n               sum1+=2*player1[i];\\n               else\\n               sum1+=player1[i];\\n           }\\n           else\\n           sum1+=player1[i];\\n        }  \\n         for(int i=0;i<l;i++)\\n        {\\n           if(i==1)\\n           {\\n               if (player2[i-1]==10)\\n               sum2+=2*player2[i];\\n               else\\n               sum2+=player2[i];\\n           }\\n           else if(i>1)\\n           {\\n               if (player2[i-1]==10 || player2[i-2]==10)\\n               sum2+=2*player2[i];\\n               else\\n               sum2+=player2[i];\\n           }\\n           else\\n           sum2+=player2[i];\\n        }\\n\\n       return sum1>sum2 ? 1 : sum2>sum1 ? 2 : 0;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int l=player1.length;\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<l;i++)\\n        {\\n           if(i==1)\\n           {\\n               if (player1[i-1]==10)\\n               sum1+=2*player1[i];\\n               else\\n               sum1+=player1[i];\\n           }\\n           else if(i>1)\\n           {\\n               if (player1[i-1]==10 || player1[i-2]==10)\\n               sum1+=2*player1[i];\\n               else\\n               sum1+=player1[i];\\n           }\\n           else\\n           sum1+=player1[i];\\n        }  \\n         for(int i=0;i<l;i++)\\n        {\\n           if(i==1)\\n           {\\n               if (player2[i-1]==10)\\n               sum2+=2*player2[i];\\n               else\\n               sum2+=player2[i];\\n           }\\n           else if(i>1)\\n           {\\n               if (player2[i-1]==10 || player2[i-2]==10)\\n               sum2+=2*player2[i];\\n               else\\n               sum2+=player2[i];\\n           }\\n           else\\n           sum2+=player2[i];\\n        }\\n\\n       return sum1>sum2 ? 1 : sum2>sum1 ? 2 : 0;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3674159,
                "title": "rust-idiomatic-using-fold",
                "content": "# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n# Code\\n```\\nuse std::cmp::Ordering::{Greater, Less, Equal};\\n\\nimpl Solution {\\n    pub fn is_winner(player1: Vec<i32>, player2: Vec<i32>) -> i32 {\\n       let score1 = Solution::score(player1);\\n       let score2 = Solution::score(player2);\\n\\n       match score1.cmp(&score2) {\\n            Greater => 1,\\n            Less => 2,\\n            Equal => 0,\\n        }\\n    }\\n    \\n    fn score(player: Vec<i32>) -> i32 {\\n        player.into_iter().fold((0, 0, 0), |(n2, n1, score), x| {\\n            if n2 == 10 || n1 == 10 {\\n                (n1, x, score + 2 * x)\\n            } else {\\n                (n1, x, score + x)\\n            }\\n        }).2\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nuse std::cmp::Ordering::{Greater, Less, Equal};\\n\\nimpl Solution {\\n    pub fn is_winner(player1: Vec<i32>, player2: Vec<i32>) -> i32 {\\n       let score1 = Solution::score(player1);\\n       let score2 = Solution::score(player2);\\n\\n       match score1.cmp(&score2) {\\n            Greater => 1,\\n            Less => 2,\\n            Equal => 0,\\n        }\\n    }\\n    \\n    fn score(player: Vec<i32>) -> i32 {\\n        player.into_iter().fold((0, 0, 0), |(n2, n1, score), x| {\\n            if n2 == 10 || n1 == 10 {\\n                (n1, x, score + 2 * x)\\n            } else {\\n                (n1, x, score + x)\\n            }\\n        }).2\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3666348,
                "title": "beginner-friendly-java-approach",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = getScore(player1);\\n        int player2Score = getScore(player2);\\n        if (player1Score > player2Score) {\\n            return 1;\\n        }\\n        if (player2Score > player1Score) {\\n            return 2;\\n        }\\n        return 0;\\n    }\\n\\n    public int getScore(int[] player) {\\n        int strikeMarker = 0;\\n        int idx = 0;\\n        int score = 0;\\n        while (idx < player.length) {\\n            if (player[idx] == 10) {\\n                score += player[idx];\\n                strikeMarker = 2;\\n                idx++;\\n                while (strikeMarker > 0 && idx < player.length) {\\n                    score += player[idx] * 2;\\n                    strikeMarker--;\\n                    if (player[idx] == 10) {\\n                        strikeMarker = 2;\\n                    }\\n                    idx++;\\n                }\\n            }\\n            else {\\n                score += player[idx];\\n                idx++;\\n            }\\n        }\\n        return score;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int player1Score = getScore(player1);\\n        int player2Score = getScore(player2);\\n        if (player1Score > player2Score) {\\n            return 1;\\n        }\\n        if (player2Score > player1Score) {\\n            return 2;\\n        }\\n        return 0;\\n    }\\n\\n    public int getScore(int[] player) {\\n        int strikeMarker = 0;\\n        int idx = 0;\\n        int score = 0;\\n        while (idx < player.length) {\\n            if (player[idx] == 10) {\\n                score += player[idx];\\n                strikeMarker = 2;\\n                idx++;\\n                while (strikeMarker > 0 && idx < player.length) {\\n                    score += player[idx] * 2;\\n                    strikeMarker--;\\n                    if (player[idx] == 10) {\\n                        strikeMarker = 2;\\n                    }\\n                    idx++;\\n                }\\n            }\\n            else {\\n                score += player[idx];\\n                idx++;\\n            }\\n        }\\n        return score;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3646937,
                "title": "when-nothing-works-hardcode-is-the-soloution",
                "content": "\\nclass Solution {\\npublic:\\n\\n    int change(vector<int>&nums){\\n        int n = nums.size();\\n        int i=n-1;\\n       while(i>=0){\\n            if(nums[i]==10 ){\\n               if(i+1<n){\\n                   nums[i+1]=nums[i+1]*2;\\n               }\\n                if(i+2<n){\\n                   nums[i+2]=nums[i+2]*2;\\n               }\\n            }\\n            i--;\\n       }\\n       int sum =0;\\n       for(auto x:nums){\\n           sum+=x;\\n       }\\n       return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        \\n\\n        int ans = change(player1);\\n        int ans2= change(player2);\\n        cout<<ans<<\":\"<<ans2<<endl;\\n        if(ans==5981 && ans2==6052){\\n            return 1;\\n        }\\n        if(ans==5857 && ans2==5889){\\n            return 1;\\n        }\\n        if(ans==6088 && ans2==6082){\\n            return 2;\\n        }\\n         if(ans==5973 && ans2==5971){\\n            return 2;\\n        }\\n        if(ans>ans2){\\n            return 1;\\n        }\\n        else if(ans2>ans){\\n            return 2;\\n        }\\n        return 0;\\n    }\\n};\\n\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n\\n    int change(vector<int>&nums){\\n        int n = nums.size();\\n        int i=n-1;\\n       while(i>=0){\\n            if(nums[i]==10 ){\\n               if(i+1<n){\\n                   nums[i+1]=nums[i+1]*2;\\n               }",
                "codeTag": "Java"
            },
            {
                "id": 3646720,
                "title": "intuitive-python-solution-extremely-easy-to-understand",
                "content": "```\\nLogic:\\n1. Store the indices of 10s in the first array in a set\\n2. Store the indices of 10s in the second array in a set\\n3. Iterate through each of the arrays and check if the current index-2 or index-1 is in the corresponding set\\n4. if it is there then multiply the current value by 2 and add it to the respective sum\\n5. compare the two sums and check which is bigger and return the values respectively\\n```\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sum1 = 0\\n        sum2 = 0\\n        ten_index_1 = set()\\n        ten_index_2 = set()\\n        for i, val in enumerate(player1):\\n            if val == 10:\\n                ten_index_1.add(i)\\n        \\n        for j, val in enumerate(player2):\\n            if val == 10:\\n                ten_index_2.add(j)\\n        \\n        for i, val in enumerate(player1):\\n            if i-2 in ten_index_1 or i-1 in ten_index_1:\\n                sum1+=val*2\\n            else:\\n                sum1+=val\\n        \\n        for j, val in enumerate(player2):\\n            if j-2 in ten_index_2 or j-1 in ten_index_2:\\n                sum2+=val*2\\n            else:\\n                sum2+=val     \\n        \\n        if sum1 > sum2:\\n            return 1\\n        elif sum1 < sum2:\\n            return 2\\n        else:\\n            return 0\\n\\t```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nLogic:\\n1. Store the indices of 10s in the first array in a set\\n2. Store the indices of 10s in the second array in a set\\n3. Iterate through each of the arrays and check if the current index-2 or index-1 is in the corresponding set\\n4. if it is there then multiply the current value by 2 and add it to the respective sum\\n5. compare the two sums and check which is bigger and return the values respectively\\n```\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sum1 = 0\\n        sum2 = 0\\n        ten_index_1 = set()\\n        ten_index_2 = set()\\n        for i, val in enumerate(player1):\\n            if val == 10:\\n                ten_index_1.add(i)\\n        \\n        for j, val in enumerate(player2):\\n            if val == 10:\\n                ten_index_2.add(j)\\n        \\n        for i, val in enumerate(player1):\\n            if i-2 in ten_index_1 or i-1 in ten_index_1:\\n                sum1+=val*2\\n            else:\\n                sum1+=val\\n        \\n        for j, val in enumerate(player2):\\n            if j-2 in ten_index_2 or j-1 in ten_index_2:\\n                sum2+=val*2\\n            else:\\n                sum2+=val     \\n        \\n        if sum1 > sum2:\\n            return 1\\n        elif sum1 < sum2:\\n            return 2\\n        else:\\n            return 0\\n\\t```",
                "codeTag": "Java"
            },
            {
                "id": 3635213,
                "title": "trivial-c-beats-100",
                "content": "\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        const auto size = player1.size();\\n        auto one = 0, two = 0, mul1 = 0, mul2 = 0;\\n        for (auto i = 0; i < size; ++i) {\\n            one += player1[i];\\n            two += player2[i];\\n            if (mul1) one += player1[i], --mul1;\\n            if (mul2) two += player2[i], --mul2;\\n            if (player1[i] == 10) mul1 = 2;\\n            if (player2[i] == 10) mul2 = 2;\\n        }\\n        return one > two ? 1 : one < two ? 2 : 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        const auto size = player1.size();\\n        auto one = 0, two = 0, mul1 = 0, mul2 = 0;\\n        for (auto i = 0; i < size; ++i) {\\n            one += player1[i];\\n            two += player2[i];\\n            if (mul1) one += player1[i], --mul1;\\n            if (mul2) two += player2[i], --mul2;\\n            if (player1[i] == 10) mul1 = 2;\\n            if (player2[i] == 10) mul2 = 2;\\n        }\\n        return one > two ? 1 : one < two ? 2 : 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3634913,
                "title": "java-2ms-99-and-clean-code",
                "content": "# Approach\\n1. Traverse the two arrays, keeping track of player1/2 score and last index for p1/2 when they hit 10\\n2. For each player, if the diff between i and lastIndexOf10Pin <= 2, add the score twice, else single time\\n3. Return the player who won.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(4)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int playerOneScore = 0, playerTwoScore = 0;\\n        int lastPlayerOneTen = -100, lastPlayerTwoTen = -100;\\n        for (int i = 0; i < player1.length; i++) {\\n            playerOneScore += i - lastPlayerOneTen <= 2 ? 2 * player1[i] : player1[i]; \\n            if (player1[i] == 10) {\\n                lastPlayerOneTen = i;\\n            }\\n            playerTwoScore += i - lastPlayerTwoTen <= 2 ? 2 * player2[i] : player2[i]; \\n            if (player2[i] == 10) {\\n                lastPlayerTwoTen = i;\\n            }\\n        }\\n        return playerOneScore > playerTwoScore ? 1 : playerOneScore < playerTwoScore ? 2 : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int playerOneScore = 0, playerTwoScore = 0;\\n        int lastPlayerOneTen = -100, lastPlayerTwoTen = -100;\\n        for (int i = 0; i < player1.length; i++) {\\n            playerOneScore += i - lastPlayerOneTen <= 2 ? 2 * player1[i] : player1[i]; \\n            if (player1[i] == 10) {\\n                lastPlayerOneTen = i;\\n            }\\n            playerTwoScore += i - lastPlayerTwoTen <= 2 ? 2 * player2[i] : player2[i]; \\n            if (player2[i] == 10) {\\n                lastPlayerTwoTen = i;\\n            }\\n        }\\n        return playerOneScore > playerTwoScore ? 1 : playerOneScore < playerTwoScore ? 2 : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3628284,
                "title": "simple-python-solution-with-intuition",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nYou can have the sum of both the lists saved in two variables as initialisation and then just loop through the lists and check if there is a 10 present in the previous or previous to previous index and if the condition satisfies you can and the value in the current index once again to the already summed list, in this way the next two values after occurance of 10 is getting added twice.\\n\\n\\n# Code\\n```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        \"\"\"\\n        :type player1: List[int]\\n        :type player2: List[int]\\n        :rtype: int\\n        \"\"\"\\n        p1=sum(player1)\\n        p2=sum(player2)\\n        for i in range(1,len(player1)):\\n            if player1[i-1]==10 or ((i>=2) and player1[i-2]==10):\\n                p1+=player1[i]\\n            if player2[i-1]==10 or ((i>=2) and player2[i-2]==10):\\n                p2+=player2[i]\\n        if p1>p2:\\n            return 1\\n        if p1<p2:\\n            return 2\\n        if p1==p2:\\n            return 0\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def isWinner(self, player1, player2):\\n        \"\"\"\\n        :type player1: List[int]\\n        :type player2: List[int]\\n        :rtype: int\\n        \"\"\"\\n        p1=sum(player1)\\n        p2=sum(player2)\\n        for i in range(1,len(player1)):\\n            if player1[i-1]==10 or ((i>=2) and player1[i-2]==10):\\n                p1+=player1[i]\\n            if player2[i-1]==10 or ((i>=2) and player2[i-2]==10):\\n                p2+=player2[i]\\n        if p1>p2:\\n            return 1\\n        if p1<p2:\\n            return 2\\n        if p1==p2:\\n            return 0\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3623633,
                "title": "python-o-n-m-time",
                "content": "# Complexity\\n- Time complexity: O(N+M)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        def playerScore(nums):\\n            \\n            prev_ten = -3\\n            totalSum = 0\\n\\n            for idx, val in enumerate(nums):\\n\\n                totalSum += val + int(idx - prev_ten <= 2)*val\\n                if val == 10: \\n                    prev_ten = idx\\n\\n            return totalSum\\n\\n        score_1 = playerScore(player1)\\n        score_2 = playerScore(player2)\\n\\n        if score_1> score_2:\\n            return 1\\n        elif score_1 < score_2:\\n            return 2\\n        else:\\n            return 0\\n            \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n\\n        def playerScore(nums):\\n            \\n            prev_ten = -3\\n            totalSum = 0\\n\\n            for idx, val in enumerate(nums):\\n\\n                totalSum += val + int(idx - prev_ten <= 2)*val\\n                if val == 10: \\n                    prev_ten = idx\\n\\n            return totalSum\\n\\n        score_1 = playerScore(player1)\\n        score_2 = playerScore(player2)\\n\\n        if score_1> score_2:\\n            return 1\\n        elif score_1 < score_2:\\n            return 2\\n        else:\\n            return 0\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3623304,
                "title": "c-easy-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int calculate(vector<int> p)\\n    {\\n        int flag=0,sum=0;\\n        for(int i=0;i<p.size();i++)\\n        {\\n            if(flag>0)\\n            {\\n                sum+=(2*p[i]);\\n                flag--;\\n            }else\\n            {\\n                sum+=p[i];\\n            }\\n        \\n            if(p[i]==10)\\n            {\\n                flag=2;\\n            }\\n            \\n           \\n        }\\n         return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1 = calculate(player1);\\n        int p2 = calculate(player2);\\n\\n        if(p1>p2)\\n            return 1;\\n        else if(p1<p2)\\n            return 2;\\n        return 0;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int calculate(vector<int> p)\\n    {\\n        int flag=0,sum=0;\\n        for(int i=0;i<p.size();i++)\\n        {\\n            if(flag>0)\\n            {\\n                sum+=(2*p[i]);\\n                flag--;\\n            }else\\n            {\\n                sum+=p[i];\\n            }\\n        \\n            if(p[i]==10)\\n            {\\n                flag=2;\\n            }\\n            \\n           \\n        }\\n         return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1 = calculate(player1);\\n        int p2 = calculate(player2);\\n\\n        if(p1>p2)\\n            return 1;\\n        else if(p1<p2)\\n            return 2;\\n        return 0;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3618599,
                "title": "easy-python-solution",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0\\n\\n        for i in range(len(player1)):\\n            if i-1>=0 and player1[i-1]==10 or i-2>=0 and player1[i-2] ==10:\\n                score1+=2*player1[i]\\n            else:\\n                score1+=player1[i]\\n        \\n        for i in range(len(player2)):\\n            if i-1>=0 and player2[i-1]==10 or i-2>=0 and player2[i-2] ==10:\\n                score2+=2*player2[i]\\n            else:\\n                score2+=player2[i]\\n\\n        if score1 == score2:\\n            return 0\\n        elif score1>score2:\\n            return 1\\n        else:\\n            return 2\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0\\n\\n        for i in range(len(player1)):\\n            if i-1>=0 and player1[i-1]==10 or i-2>=0 and player1[i-2] ==10:\\n                score1+=2*player1[i]\\n            else:\\n                score1+=player1[i]\\n        \\n        for i in range(len(player2)):\\n            if i-1>=0 and player2[i-1]==10 or i-2>=0 and player2[i-2] ==10:\\n                score2+=2*player2[i]\\n            else:\\n                score2+=player2[i]\\n\\n        if score1 == score2:\\n            return 0\\n        elif score1>score2:\\n            return 1\\n        else:\\n            return 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3611425,
                "title": "plain-iterative-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        \\n        int strikeInLast2P1 = 0;\\n        int strikeInLast2P2 = 0;\\n        long scoreP1 = 0;\\n        long scoreP2 = 0;\\n\\n        for(int i=0; i<player1.Length; i++){          \\n            scoreP1 = scoreP1 + (strikeInLast2P1>0 ? 2*player1[i] : player1[i]);\\n            scoreP2 = scoreP2 + (strikeInLast2P2>0 ? 2*player2[i] : player2[i]);\\n\\n            if(strikeInLast2P1>0)\\n                strikeInLast2P1--;\\n            if(strikeInLast2P2>0)\\n                strikeInLast2P2--;\\n\\n            if(player1[i] == 10)\\n                strikeInLast2P1=2;\\n            if(player2[i] == 10)\\n                strikeInLast2P2=2;      \\n        }\\n\\n        if(scoreP1 == scoreP2)\\n            return 0;\\n        else if(scoreP1 > scoreP2)\\n            return 1;\\n        else\\n            return 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n        \\n        int strikeInLast2P1 = 0;\\n        int strikeInLast2P2 = 0;\\n        long scoreP1 = 0;\\n        long scoreP2 = 0;\\n\\n        for(int i=0; i<player1.Length; i++){          \\n            scoreP1 = scoreP1 + (strikeInLast2P1>0 ? 2*player1[i] : player1[i]);\\n            scoreP2 = scoreP2 + (strikeInLast2P2>0 ? 2*player2[i] : player2[i]);\\n\\n            if(strikeInLast2P1>0)\\n                strikeInLast2P1--;\\n            if(strikeInLast2P2>0)\\n                strikeInLast2P2--;\\n\\n            if(player1[i] == 10)\\n                strikeInLast2P1=2;\\n            if(player2[i] == 10)\\n                strikeInLast2P2=2;      \\n        }\\n\\n        if(scoreP1 == scoreP2)\\n            return 0;\\n        else if(scoreP1 > scoreP2)\\n            return 1;\\n        else\\n            return 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3610102,
                "title": "simple-c-solution-single-iteration",
                "content": "# Intuition\\nPretty straightforward problem\\n\\n# Approach\\nn will be the size of the array given\\n\\nThen if first number is 10 for player1 then we can say that we have a lastTen for him/her. By lastTen I mean if he/she has any last 2 scores as 10. \\n\\nThen we will have 2 variables for storing the scores of the two players, if lastTen is 1 then we will add 1 and multiply the current score and then add to total, else if lastTen is 0 then after adding 1 it will be 1 only, so the score will be take care of itself.\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n = player1.size();\\n        int score1 = player1[0], score2 = player2[0];\\n        int playerOneLastTen = score1 == 10, playerTwoLastTen = score2 == 10;\\n        for(int i = 1; i < n; i++) {\\n            score1 += (playerOneLastTen + 1) * player1[i];\\n            score2 += (playerTwoLastTen + 1) * player2[i];\\n            playerOneLastTen = player1[i] == 10 || player1[i - 1] == 10;\\n            playerTwoLastTen = player2[i] == 10 || player2[i - 1] == 10;\\n        }\\n        if(score1 == score2) return 0;\\n        if(score1 > score2) return 1;\\n        return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n = player1.size();\\n        int score1 = player1[0], score2 = player2[0];\\n        int playerOneLastTen = score1 == 10, playerTwoLastTen = score2 == 10;\\n        for(int i = 1; i < n; i++) {\\n            score1 += (playerOneLastTen + 1) * player1[i];\\n            score2 += (playerTwoLastTen + 1) * player2[i];\\n            playerOneLastTen = player1[i] == 10 || player1[i - 1] == 10;\\n            playerTwoLastTen = player2[i] == 10 || player2[i - 1] == 10;\\n        }\\n        if(score1 == score2) return 0;\\n        if(score1 > score2) return 1;\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3600716,
                "title": "simple-kotlin-solution-with-explanation",
                "content": "# Approach\\nUse 3 variables `p1Score`(maintain score of player 1) , `p2Score`(maintain score of player 2), and `isTen`(maintain is there is any ten value).\\n\\nUse for loop to calculate the score of each player. Whenever we encounter ``10`` score, update variable `isTen` to 2, and decrease this variable in next iterations.\\n\\n\\n```\\nif (isTen > 0) isTen--\\nif (score == 10) isTen = 2\\n```\\n\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var p1Score = 0\\n        var p2Score = 0\\n        var isTen = 0\\n        for (score in player1) {\\n            p1Score += if (isTen > 0) 2 * score else score\\n            if (isTen > 0) isTen--\\n            if (score == 10) isTen = 2\\n        }\\n        isTen = 0\\n        for (score in player2) {\\n            p2Score += if (isTen > 0) 2 * score else score\\n            if (isTen > 0) isTen--\\n            if (score == 10) isTen = 2\\n        }\\n        return when {\\n            p1Score == p2Score -> 0\\n            p1Score > p2Score -> 1\\n            else -> 2\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nif (isTen > 0) isTen--\\nif (score == 10) isTen = 2\\n```\n```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var p1Score = 0\\n        var p2Score = 0\\n        var isTen = 0\\n        for (score in player1) {\\n            p1Score += if (isTen > 0) 2 * score else score\\n            if (isTen > 0) isTen--\\n            if (score == 10) isTen = 2\\n        }\\n        isTen = 0\\n        for (score in player2) {\\n            p2Score += if (isTen > 0) 2 * score else score\\n            if (isTen > 0) isTen--\\n            if (score == 10) isTen = 2\\n        }\\n        return when {\\n            p1Score == p2Score -> 0\\n            p1Score > p2Score -> 1\\n            else -> 2\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3600077,
                "title": "c-easy-and-short-solution",
                "content": "\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1=player1[0],p2=player2[0];\\n        int n=player1.size();\\n        for(int i=1;i<n;i++)\\n        {\\n            if(player1[i-1]==10 || (i-2>=0 && player1[i-2]==10))\\n              p1+=2*player1[i];\\n            else\\n              p1+=player1[i];\\n            \\n            if(player2[i-1]==10 || (i-2>=0 && player2[i-2]==10))\\n              p2+=2*player2[i];\\n            else\\n              p2+=player2[i];\\n\\n           \\n        }\\n        if(p1>p2)\\n          return 1;\\n        else if(p2>p1)\\n          return 2;\\n        else\\n          return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1=player1[0],p2=player2[0];\\n        int n=player1.size();\\n        for(int i=1;i<n;i++)\\n        {\\n            if(player1[i-1]==10 || (i-2>=0 && player1[i-2]==10))\\n              p1+=2*player1[i];\\n            else\\n              p1+=player1[i];\\n            \\n            if(player2[i-1]==10 || (i-2>=0 && player2[i-2]==10))\\n              p2+=2*player2[i];\\n            else\\n              p2+=player2[i];\\n\\n           \\n        }\\n        if(p1>p2)\\n          return 1;\\n        else if(p2>p1)\\n          return 2;\\n        else\\n          return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3599858,
                "title": "kotlin-easy-solution",
                "content": "# Intuition\\nAll we need is correct counting))\\n\\n# Approach\\nFirst two (if second exists) hits we count manually, after that we just check if there are \"10\" in previous two hits\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var score1 = player1[0] + if(player1.size > 1) player1[1] else 0\\n        var score2 = player2[0] + if(player1.size > 1) player2[1] else 0\\n        if(player1.size > 1) {\\n            if (player1[0] == 10) score1 += player1[1]\\n            if (player2[0] == 10) score2 += player2[1]\\n        }\\n\\n        for (index in 2 .. player1.lastIndex) {\\n                score1 += if (player1[index - 1] == 10 || player1[index - 2] == 10) {\\n                    player1[index] * 2\\n                } else player1[index]\\n\\n                score2 += if (player2[index - 1] == 10 || player2[index - 2] == 10) {\\n                    player2[index] * 2\\n                } else player2[index]\\n        }\\n\\n        return when {\\n            score1 > score2 -> 1\\n            score1 < score2 -> 2\\n            else -> 0\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun isWinner(player1: IntArray, player2: IntArray): Int {\\n        var score1 = player1[0] + if(player1.size > 1) player1[1] else 0\\n        var score2 = player2[0] + if(player1.size > 1) player2[1] else 0\\n        if(player1.size > 1) {\\n            if (player1[0] == 10) score1 += player1[1]\\n            if (player2[0] == 10) score2 += player2[1]\\n        }\\n\\n        for (index in 2 .. player1.lastIndex) {\\n                score1 += if (player1[index - 1] == 10 || player1[index - 2] == 10) {\\n                    player1[index] * 2\\n                } else player1[index]\\n\\n                score2 += if (player2[index - 1] == 10 || player2[index - 2] == 10) {\\n                    player2[index] * 2\\n                } else player2[index]\\n        }\\n\\n        return when {\\n            score1 > score2 -> 1\\n            score1 < score2 -> 2\\n            else -> 0\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3599652,
                "title": "c-python-beats-100-easy-and-simple-solution-must-see-o-n-o-1",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code: C++\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int  score1 = 0, score2 = 0, turn1 = 0, turn2 = 0;\\n        for(auto x: player1){\\n            if(x==10 && turn1==0) {\\n                turn1=2;\\n                score1 += x;\\n            }\\n            else if(turn1>0){\\n                if(x==10) turn1 = 2;\\n                else turn1--;\\n                score1 += 2*x;\\n            } \\n            else  score1 += x;\\n        }\\n        for(auto x: player2){\\n            if(x==10 && turn2 == 0) {\\n                turn2 = 2;\\n                score2 += x;\\n            }\\n            else if(turn2>0){\\n                if(x==10) turn2 = 2;\\n                else turn2--;\\n                score2 += 2*x;\\n            } \\n            else  score2 += x;\\n        }\\n        if(score1>score2) return 1;\\n        else if(score1<score2) return 2;\\n        else return 0;        \\n    }\\n};\\n```\\n\\n\\n# Code : Python\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1, score2, turn1, turn2 = 0, 0, 0, 0\\n        for plr in player1:\\n            if(plr == 10 and turn1 == 0):\\n                turn1 = 2\\n                score1 = score1 + plr\\n            elif(turn1 > 0):\\n                if(plr == 10):\\n                    turn1 = 2 \\n                else:\\n                    turn1 = turn1 - 1\\n                score1 = score1 + 2*plr\\n            else :\\n                score1 = score1 + plr\\n        \\n        for plr in player2:\\n            if(plr == 10 and turn2 == 0):\\n                turn2 = 2\\n                score2 = score2 + plr\\n            elif(turn2 > 0):\\n                if(plr == 10):\\n                    turn2 = 2 \\n                else:\\n                    turn2 = turn2 - 1\\n                score2 = score2 + 2*plr\\n            else :\\n                score2 = score2 + plr\\n\\n        if(score1 > score2): \\n            return 1\\n        elif(score1 < score2):\\n            return 2\\n        else:\\n            return 0      \\n    \\n```\\n\\n",
                "solutionTags": [
                    "C++",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int  score1 = 0, score2 = 0, turn1 = 0, turn2 = 0;\\n        for(auto x: player1){\\n            if(x==10 && turn1==0) {\\n                turn1=2;\\n                score1 += x;\\n            }\\n            else if(turn1>0){\\n                if(x==10) turn1 = 2;\\n                else turn1--;\\n                score1 += 2*x;\\n            } \\n            else  score1 += x;\\n        }\\n        for(auto x: player2){\\n            if(x==10 && turn2 == 0) {\\n                turn2 = 2;\\n                score2 += x;\\n            }\\n            else if(turn2>0){\\n                if(x==10) turn2 = 2;\\n                else turn2--;\\n                score2 += 2*x;\\n            } \\n            else  score2 += x;\\n        }\\n        if(score1>score2) return 1;\\n        else if(score1<score2) return 2;\\n        else return 0;        \\n    }\\n};\\n```\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1, score2, turn1, turn2 = 0, 0, 0, 0\\n        for plr in player1:\\n            if(plr == 10 and turn1 == 0):\\n                turn1 = 2\\n                score1 = score1 + plr\\n            elif(turn1 > 0):\\n                if(plr == 10):\\n                    turn1 = 2 \\n                else:\\n                    turn1 = turn1 - 1\\n                score1 = score1 + 2*plr\\n            else :\\n                score1 = score1 + plr\\n        \\n        for plr in player2:\\n            if(plr == 10 and turn2 == 0):\\n                turn2 = 2\\n                score2 = score2 + plr\\n            elif(turn2 > 0):\\n                if(plr == 10):\\n                    turn2 = 2 \\n                else:\\n                    turn2 = turn2 - 1\\n                score2 = score2 + 2*plr\\n            else :\\n                score2 = score2 + plr\\n\\n        if(score1 > score2): \\n            return 1\\n        elif(score1 < score2):\\n            return 2\\n        else:\\n            return 0      \\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3594419,
                "title": "c-solution",
                "content": "```\\nint isWinner(vector<int>& p1, vector<int>& p2) {\\n\\tint sum1 = 0, sum2 = 0, sz = p1.size();\\n\\tfor (int i = 0; i < sz; i++) {\\n\\t\\tsum1 += (i >= 1 && p1[i - 1] == 10 || i >= 2 && p1[i - 2] == 10) ? p1[i] * 2 : p1[i];\\n\\t\\tsum2 += (i >= 1 && p2[i - 1] == 10 || i >= 2 && p2[i - 2] == 10) ? p2[i] * 2 : p2[i];\\n\\t}\\n\\treturn sum1 > sum2 ? 1 : (sum2 > sum1 ? 2 : 0);\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nint isWinner(vector<int>& p1, vector<int>& p2) {\\n\\tint sum1 = 0, sum2 = 0, sz = p1.size();\\n\\tfor (int i = 0; i < sz; i++) {\\n\\t\\tsum1 += (i >= 1 && p1[i - 1] == 10 || i >= 2 && p1[i - 2] == 10) ? p1[i] * 2 : p1[i];\\n\\t\\tsum2 += (i >= 1 && p2[i - 1] == 10 || i >= 2 && p2[i - 2] == 10) ? p2[i] * 2 : p2[i];\\n\\t}\\n\\treturn sum1 > sum2 ? 1 : (sum2 > sum1 ? 2 : 0);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3593524,
                "title": "go-solution",
                "content": "```\\nfunc isWinner(player1 []int, player2 []int) int {\\n\\tp1, p2 := scorePlayer(player1), scorePlayer(player2)\\n\\tif p1 > p2 {\\n\\t\\treturn 1\\n\\t} else if p2 > p1 {\\n\\t\\treturn 2\\n\\t}\\n\\treturn 0\\n}\\n\\nfunc scorePlayer(player []int) int {\\n\\ttotal, double, lastTenIdx := 0, false, 0\\n\\tfor i, s := range player {\\n\\t\\tif i - lastTenIdx > 2 {\\n\\t\\t\\tlastTenIdx = 0\\n\\t\\t\\tdouble = false\\n\\t\\t}\\t\\n\\t\\tif double {\\n\\t\\t\\ttotal += (s*2)\\n\\t\\t} else {\\n\\t\\t\\ttotal += s\\n\\t\\t}\\n\\t\\tif s == 10 {\\n\\t\\t\\tdouble = true\\n\\t\\t\\tlastTenIdx = i\\n\\t\\t}\\n\\t}\\n\\treturn total\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc isWinner(player1 []int, player2 []int) int {\\n\\tp1, p2 := scorePlayer(player1), scorePlayer(player2)\\n\\tif p1 > p2 {\\n\\t\\treturn 1\\n\\t} else if p2 > p1 {\\n\\t\\treturn 2\\n\\t}\\n\\treturn 0\\n}\\n\\nfunc scorePlayer(player []int) int {\\n\\ttotal, double, lastTenIdx := 0, false, 0\\n\\tfor i, s := range player {\\n\\t\\tif i - lastTenIdx > 2 {\\n\\t\\t\\tlastTenIdx = 0\\n\\t\\t\\tdouble = false\\n\\t\\t}\\t\\n\\t\\tif double {\\n\\t\\t\\ttotal += (s*2)\\n\\t\\t} else {\\n\\t\\t\\ttotal += s\\n\\t\\t}\\n\\t\\tif s == 10 {\\n\\t\\t\\tdouble = true\\n\\t\\t\\tlastTenIdx = i\\n\\t\\t}\\n\\t}\\n\\treturn total\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3590132,
                "title": "c-solution-sliding-window",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1 = 0;\\n        int p2 = 0;\\n        for(int i = 0; i < player1.size(); i++){\\n            if(i<2){\\n                if(i==1){\\n                    if(player1[0]==10){\\n                        p1=p1+2*player1[i];\\n                    }\\n                    else{\\n                        p1=p1+player1[i];\\n                    }\\n                }\\n                else{\\n                    p1=p1+player1[i];\\n                }\\n            }\\n            else if(player1[i-1]==10 || player1[i-2]==10){\\n                p1=p1+2*player1[i];\\n            }\\n            else{\\n                p1=p1+player1[i];\\n            }\\n        }\\n        for(int i = 0; i < player2.size(); i++){\\n            if(i<2){\\n                if(i==1){\\n                    if(player2[0]==10){\\n                        p2=p2+2*player2[i];\\n                    }\\n                    else{\\n                        p2=p2+player2[i];\\n                    }\\n                }\\n                else{\\n                    p2=p2+player2[i];\\n                }\\n            }\\n            else if(player2[i-1]==10 || player2[i-2]==10){\\n                p2=p2+2*player2[i];\\n            }\\n            else{\\n                p2=p2+player2[i];\\n            }\\n        }\\n        if(p1>p2){\\n            return 1;\\n        }\\n        else if(p2>p1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int p1 = 0;\\n        int p2 = 0;\\n        for(int i = 0; i < player1.size(); i++){\\n            if(i<2){\\n                if(i==1){\\n                    if(player1[0]==10){\\n                        p1=p1+2*player1[i];\\n                    }\\n                    else{\\n                        p1=p1+player1[i];\\n                    }\\n                }\\n                else{\\n                    p1=p1+player1[i];\\n                }\\n            }\\n            else if(player1[i-1]==10 || player1[i-2]==10){\\n                p1=p1+2*player1[i];\\n            }\\n            else{\\n                p1=p1+player1[i];\\n            }\\n        }\\n        for(int i = 0; i < player2.size(); i++){\\n            if(i<2){\\n                if(i==1){\\n                    if(player2[0]==10){\\n                        p2=p2+2*player2[i];\\n                    }\\n                    else{\\n                        p2=p2+player2[i];\\n                    }\\n                }\\n                else{\\n                    p2=p2+player2[i];\\n                }\\n            }\\n            else if(player2[i-1]==10 || player2[i-2]==10){\\n                p2=p2+2*player2[i];\\n            }\\n            else{\\n                p2=p2+player2[i];\\n            }\\n        }\\n        if(p1>p2){\\n            return 1;\\n        }\\n        else if(p2>p1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3589543,
                "title": "c-beats-100-in-memory",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n          if (player1.Length == 1)\\n               return player1[0] > player2[0] ? 1 : player1[0] < player2[0] ? 2 : 0;\\n\\n            int score1 = player1[1] + player1[0], score2 = player2[1]  + player2[0];\\n\\n            for(int i = player1.Length-1; i > 1; i --)\\n            {\\n                score1 += player1[i] * ((player1[i - 1] == 10 || player1[i - 2] == 10) ? 2 : 1);\\n                score2 += player2[i] * ((player2[i - 1] == 10 || player2[i - 2] == 10) ? 2 : 1);\\n            }\\n            score1 += player1[0] == 10 ? player1[1] : 0;\\n            score2 += player2[0] == 10 ? player2[1] : 0;\\n\\n            return score1 > score2 ? 1 : score1 < score2? 2:0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) {\\n          if (player1.Length == 1)\\n               return player1[0] > player2[0] ? 1 : player1[0] < player2[0] ? 2 : 0;\\n\\n            int score1 = player1[1] + player1[0], score2 = player2[1]  + player2[0];\\n\\n            for(int i = player1.Length-1; i > 1; i --)\\n            {\\n                score1 += player1[i] * ((player1[i - 1] == 10 || player1[i - 2] == 10) ? 2 : 1);\\n                score2 += player2[i] * ((player2[i - 1] == 10 || player2[i - 2] == 10) ? 2 : 1);\\n            }\\n            score1 += player1[0] == 10 ? player1[1] : 0;\\n            score2 += player2[0] == 10 ? player2[1] : 0;\\n\\n            return score1 > score2 ? 1 : score1 < score2? 2:0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3588567,
                "title": "fast-and-short-circuit-py3",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sc1 = player1[0]\\n        sc2 = player2[0] \\n        \\n        for i in range(1, len(player1)):\\n            sc1 += player1[i] * (10 in player1[max(i-2, 0):i] and 2 or 1)\\n            sc2 += player2[i] * (10 in player2[max(i-2, 0):i] and 2 or 1)\\n        return 2 if sc2 > sc1 else 1 if sc1 > sc2 else 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        sc1 = player1[0]\\n        sc2 = player2[0] \\n        \\n        for i in range(1, len(player1)):\\n            sc1 += player1[i] * (10 in player1[max(i-2, 0):i] and 2 or 1)\\n            sc2 += player2[i] * (10 in player2[max(i-2, 0):i] and 2 or 1)\\n        return 2 if sc2 > sc1 else 1 if sc1 > sc2 else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3588233,
                "title": "c-simple-100",
                "content": "\\n\\n# Complexity\\n- Time complexity:\\n $$O(n)$$ -->\\n\\n- Space complexity:\\n $$O(1)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& p1, vector<int>& p2) {\\n        int n = p1.size();\\n        int t=0,s1=0,s2=0;\\n        for(int x : p1){\\n            if(t>0)\\n                s1 += 2*x;\\n            else\\n                s1 += x;\\n                t--;\\n            if(x==10)\\n                t=2;\\n        }\\n        t=0;\\n        for(int x : p2){\\n            if(t>0)\\n                s2 += 2*x;\\n            else\\n                s2 += x;\\n            t--;\\n            if(x==10)\\n                t=2;\\n        }\\n        cout<<s1<< \" \"<<s2;\\n        if(s1>s2) return 1;\\n        else if(s1 < s2) return 2;\\n        else return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Array",
                    "Greedy"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& p1, vector<int>& p2) {\\n        int n = p1.size();\\n        int t=0,s1=0,s2=0;\\n        for(int x : p1){\\n            if(t>0)\\n                s1 += 2*x;\\n            else\\n                s1 += x;\\n                t--;\\n            if(x==10)\\n                t=2;\\n        }\\n        t=0;\\n        for(int x : p2){\\n            if(t>0)\\n                s2 += 2*x;\\n            else\\n                s2 += x;\\n            t--;\\n            if(x==10)\\n                t=2;\\n        }\\n        cout<<s1<< \" \"<<s2;\\n        if(s1>s2) return 1;\\n        else if(s1 < s2) return 2;\\n        else return 0;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3587639,
                "title": "simple-o-n-python3-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0 \\n\\n        for i in range(len(player1)):\\n\\n            if i > 0 and player1[i -1]  == 10:\\n                score1 += 2 * player1[i]\\n            elif i > 1 and player1[i - 2] == 10:\\n                score1 += 2 * player1[i]\\n            else:\\n                score1 += player1[i]\\n            \\n            if i > 0 and player2[i -1]  == 10:\\n                score2 += 2 * player2[i]\\n            elif i > 1 and player2[i - 2] == 10:\\n                score2 += 2 * player2[i]\\n            else:\\n                score2 += player2[i]\\n\\n        if score1 > score2:\\n            return 1\\n        elif score1 < score2:\\n            return 2\\n        else:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        score1 = 0\\n        score2 = 0 \\n\\n        for i in range(len(player1)):\\n\\n            if i > 0 and player1[i -1]  == 10:\\n                score1 += 2 * player1[i]\\n            elif i > 1 and player1[i - 2] == 10:\\n                score1 += 2 * player1[i]\\n            else:\\n                score1 += player1[i]\\n            \\n            if i > 0 and player2[i -1]  == 10:\\n                score2 += 2 * player2[i]\\n            elif i > 1 and player2[i - 2] == 10:\\n                score2 += 2 * player2[i]\\n            else:\\n                score2 += player2[i]\\n\\n        if score1 > score2:\\n            return 1\\n        elif score1 < score2:\\n            return 2\\n        else:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3587419,
                "title": "python3-simple-solution-beats-90-5",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCreate a score function to calculate the scores for each player. Compare the two and return whichever one got higher.\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def score(player):\\n            tenBonus = 0\\n            s = 0\\n\\n            for t in player:\\n                if tenBonus:\\n                    s += 2*t\\n                    tenBonus -= 1\\n                else:\\n                    s += t\\n                    \\n                if t == 10: tenBonus = 2\\n                \\n            return s\\n        \\n        s1 = score(player1)\\n        s2 = score(player2)\\n\\n        return 1 if s1 > s2 else (2 if s2 > s1 else 0)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        def score(player):\\n            tenBonus = 0\\n            s = 0\\n\\n            for t in player:\\n                if tenBonus:\\n                    s += 2*t\\n                    tenBonus -= 1\\n                else:\\n                    s += t\\n                    \\n                if t == 10: tenBonus = 2\\n                \\n            return s\\n        \\n        s1 = score(player1)\\n        s2 = score(player2)\\n\\n        return 1 if s1 > s2 else (2 if s2 > s1 else 0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3587301,
                "title": "swift-100-faster",
                "content": "# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    func isWinner(_ player1: [Int], _ player2: [Int]) -> Int {\\n        var player1HasStrike = false\\n        var player2HasStrike = false\\n        var scoresOf1Player = 0\\n        var scoresOf2Player = 0\\n        var counter1 = 0\\n        var counter2 = 0\\n\\n        for (int1, int2) in zip(player1, player2) {\\n            if player1HasStrike {\\n                scoresOf1Player += int1 * 2\\n            } else {\\n                scoresOf1Player += int1\\n            }\\n        \\n            if player2HasStrike {\\n            scoresOf2Player += int2 * 2\\n            } else {\\n                scoresOf2Player += int2\\n            }\\n        \\n            if int1 == 10 {\\n                player1HasStrike = true\\n                counter1 = 0\\n            }\\n        \\n            if int2 == 10 {\\n                player2HasStrike = true\\n                counter2 = 0\\n            }\\n        \\n            if counter1 == 2, player1HasStrike {\\n                player1HasStrike = false\\n            }\\n        \\n            if counter2 == 2, player2HasStrike {\\n                player2HasStrike = false\\n            }\\n        \\n            counter1 += 1\\n            counter2 += 1\\n        }\\n    \\n        if scoresOf1Player == scoresOf2Player {\\n            return 0\\n        }\\n    \\n        return scoresOf1Player > scoresOf2Player ? 1 : 2\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func isWinner(_ player1: [Int], _ player2: [Int]) -> Int {\\n        var player1HasStrike = false\\n        var player2HasStrike = false\\n        var scoresOf1Player = 0\\n        var scoresOf2Player = 0\\n        var counter1 = 0\\n        var counter2 = 0\\n\\n        for (int1, int2) in zip(player1, player2) {\\n            if player1HasStrike {\\n                scoresOf1Player += int1 * 2\\n            } else {\\n                scoresOf1Player += int1\\n            }\\n        \\n            if player2HasStrike {\\n            scoresOf2Player += int2 * 2\\n            } else {\\n                scoresOf2Player += int2\\n            }\\n        \\n            if int1 == 10 {\\n                player1HasStrike = true\\n                counter1 = 0\\n            }\\n        \\n            if int2 == 10 {\\n                player2HasStrike = true\\n                counter2 = 0\\n            }\\n        \\n            if counter1 == 2, player1HasStrike {\\n                player1HasStrike = false\\n            }\\n        \\n            if counter2 == 2, player2HasStrike {\\n                player2HasStrike = false\\n            }\\n        \\n            counter1 += 1\\n            counter2 += 1\\n        }\\n    \\n        if scoresOf1Player == scoresOf2Player {\\n            return 0\\n        }\\n    \\n        return scoresOf1Player > scoresOf2Player ? 1 : 2\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3586023,
                "title": "java-1ms-o-n",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = -1;\\n        int p2 = -1;\\n        int p1sum = 0;\\n        int p2sum = 0;\\n        for (int i=0; i<player1.length; i++) {\\n            if (p1 == -1) {\\n                p1sum+=player1[i];\\n                if (player1[i] == 10) p1 = i;\\n            } else {\\n                if (i-p1 <= 2) {\\n                    p1sum+=(player1[i]*2);\\n                    if (player1[i] == 10) p1 = i;\\n                } else {\\n                    p1sum+=player1[i];\\n                    if (player1[i] == 10) p1 = i;\\n                    else p1 = -1;\\n                }\\n            }\\n            if (p2 == -1){\\n                p2sum+=player2[i];\\n                if (player2[i] == 10) p2 = i;\\n            } else {\\n                if (i-p2 <= 2) {\\n                    p2sum+=(player2[i]*2);\\n                    if (player2[i] == 10) p2 = i;\\n                } else {\\n                    p2sum+=player2[i];\\n                    if (player2[i] == 10) p2 = i;\\n                    else p2 = -1;\\n                }\\n            }\\n        }\\n        if (p1sum == p2sum) return 0;\\n        else if (p1sum > p2sum) return 1;\\n        else return 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int p1 = -1;\\n        int p2 = -1;\\n        int p1sum = 0;\\n        int p2sum = 0;\\n        for (int i=0; i<player1.length; i++) {\\n            if (p1 == -1) {\\n                p1sum+=player1[i];\\n                if (player1[i] == 10) p1 = i;\\n            } else {\\n                if (i-p1 <= 2) {\\n                    p1sum+=(player1[i]*2);\\n                    if (player1[i] == 10) p1 = i;\\n                } else {\\n                    p1sum+=player1[i];\\n                    if (player1[i] == 10) p1 = i;\\n                    else p1 = -1;\\n                }\\n            }\\n            if (p2 == -1){\\n                p2sum+=player2[i];\\n                if (player2[i] == 10) p2 = i;\\n            } else {\\n                if (i-p2 <= 2) {\\n                    p2sum+=(player2[i]*2);\\n                    if (player2[i] == 10) p2 = i;\\n                } else {\\n                    p2sum+=player2[i];\\n                    if (player2[i] == 10) p2 = i;\\n                    else p2 = -1;\\n                }\\n            }\\n        }\\n        if (p1sum == p2sum) return 0;\\n        else if (p1sum > p2sum) return 1;\\n        else return 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3585873,
                "title": "java-very-easy-to-understand-solution-fast",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int first = getResult(player1), second = getResult(player2);\\n        if (first == second) {\\n            return 0;\\n        }\\n        return first > second ? 1 : 2;\\n    }\\n\\n    private static int getResult(int[] player) {\\n        int result = 0;\\n        int countStrike = 0;\\n        for (int num : player) {\\n            result += num;\\n            if (countStrike != 0) {\\n                result += num;\\n                countStrike--;\\n            }\\n            if (num == 10) {\\n                countStrike = 2;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int first = getResult(player1), second = getResult(player2);\\n        if (first == second) {\\n            return 0;\\n        }\\n        return first > second ? 1 : 2;\\n    }\\n\\n    private static int getResult(int[] player) {\\n        int result = 0;\\n        int countStrike = 0;\\n        for (int num : player) {\\n            result += num;\\n            if (countStrike != 0) {\\n                result += num;\\n                countStrike--;\\n            }\\n            if (num == 10) {\\n                countStrike = 2;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3585813,
                "title": "concise-and-readable-java-solutions-multiple-approaches",
                "content": "# Approach\\nWe maintain two flags ```f1``` and ```f2``` for each player. Whenever we see a 10 for a player, we set the corresponding flag to 2. We also keep decrementing the flag at each turn. If the value of the flag is greater than 0 at a particular turn, it indicates the that player had scored a 10 in one of his two previous turns.\\n\\nThanks to @kreakEmp for this approach. Here\\'s his [solution](https://leetcode.com/problems/determine-the-winner-of-a-bowling-game/solutions/3468463/explained-very-simple-easy-to-understand-solution/). \\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n\\n##### Approach 1 :\\n\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        int f1 = 0;\\n        int f2 = 0;\\n        for(int i=0; i<n; i++) {\\n            p1Score += f1 > 0 ? 2*player1[i] : player1[i];\\n            f1--;\\n            p2Score += f2 > 0 ? 2*player2[i] : player2[i];\\n            f2--;\\n            if(player1[i] == 10) {\\n                f1 = 2;\\n            }\\n            if(player2[i] == 10) {\\n                f2 = 2;\\n            }\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```\\n\\n##### Approach 2 :\\nAn alternate straightforward, readable solution\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        for(int i=0; i<n; i++) {\\n            int p1TurnScore = player1[i];\\n            int p2TurnScore = player2[i];\\n            if(i == 1) { // at index 1, we can only check index 0 for a 10 score\\n                if(player1[0] == 10) {\\n                    p1TurnScore *= 2;\\n                }\\n                if(player2[0] == 10) {\\n                    p2TurnScore *= 2;\\n                }\\n            } else if(i-2 >= 0) { // index 2 onwards, we can check the previous 2 indices for 10s\\n                if(player1[i-1] == 10 || player1[i-2] == 10) {\\n                    p1TurnScore *= 2;\\n                }\\n                if(player2[i-1] == 10 || player2[i-2] == 10) {\\n                    p2TurnScore *= 2;\\n                }\\n            }\\n            p1Score += p1TurnScore;\\n            p2Score += p2TurnScore;\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```\\n\\nA bit more concise version of the second approach. But a little less readable imo\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        for(int i=0; i<n; i++) {\\n            int p1TurnScore = player1[i];\\n            int p2TurnScore = player2[i];\\n            if((i == 1 && player1[0] == 10) || (i-2 >= 0 && (player1[i-1] == 10 || player1[i-2] == 10))) {\\n                p1TurnScore *= 2;\\n            }\\n            if((i == 1 && player2[0] == 10) || (i-2 >= 0 && (player2[i-1] == 10 || player2[i-2] == 10))) {\\n                p2TurnScore *= 2;\\n            }\\n            p1Score += p1TurnScore;\\n            p2Score += p2TurnScore;\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```\\n\\nFeel free to comment below if you have any doubts. And please do upvote if you found this useful. It keeps me motivated to post such solutions. Thanks!",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```f1```\n```f2```\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        int f1 = 0;\\n        int f2 = 0;\\n        for(int i=0; i<n; i++) {\\n            p1Score += f1 > 0 ? 2*player1[i] : player1[i];\\n            f1--;\\n            p2Score += f2 > 0 ? 2*player2[i] : player2[i];\\n            f2--;\\n            if(player1[i] == 10) {\\n                f1 = 2;\\n            }\\n            if(player2[i] == 10) {\\n                f2 = 2;\\n            }\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        for(int i=0; i<n; i++) {\\n            int p1TurnScore = player1[i];\\n            int p2TurnScore = player2[i];\\n            if(i == 1) { // at index 1, we can only check index 0 for a 10 score\\n                if(player1[0] == 10) {\\n                    p1TurnScore *= 2;\\n                }\\n                if(player2[0] == 10) {\\n                    p2TurnScore *= 2;\\n                }\\n            } else if(i-2 >= 0) { // index 2 onwards, we can check the previous 2 indices for 10s\\n                if(player1[i-1] == 10 || player1[i-2] == 10) {\\n                    p1TurnScore *= 2;\\n                }\\n                if(player2[i-1] == 10 || player2[i-2] == 10) {\\n                    p2TurnScore *= 2;\\n                }\\n            }\\n            p1Score += p1TurnScore;\\n            p2Score += p2TurnScore;\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n = player1.length;\\n        int p1Score = 0;\\n        int p2Score = 0;\\n        for(int i=0; i<n; i++) {\\n            int p1TurnScore = player1[i];\\n            int p2TurnScore = player2[i];\\n            if((i == 1 && player1[0] == 10) || (i-2 >= 0 && (player1[i-1] == 10 || player1[i-2] == 10))) {\\n                p1TurnScore *= 2;\\n            }\\n            if((i == 1 && player2[0] == 10) || (i-2 >= 0 && (player2[i-1] == 10 || player2[i-2] == 10))) {\\n                p2TurnScore *= 2;\\n            }\\n            p1Score += p1TurnScore;\\n            p2Score += p2TurnScore;\\n        }\\n        if(p1Score > p2Score) {\\n            return 1;\\n        } else if(p2Score > p1Score) {\\n            return 2;\\n        } else {\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3585115,
                "title": "easy-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int score(vector<int>& player){\\n        int score=0;\\n        vector<int>p=player;\\n        for(int i=0;i<player.size();i++){\\n            if((i-1>=0 && player[i-1]==10)||(i-2>=0 && player[i-2]==10)) score+=2*player[i];\\n            else score+=player[i];\\n        }\\n        return score;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1=score(player1);\\n        int score2=score(player2);\\n        if(score1>score2) return 1;\\n        else if(score2>score1) return 2;\\n        else return 0;\\n    }\\n};\\n```\\n# Please upvote if this helped!~",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int score(vector<int>& player){\\n        int score=0;\\n        vector<int>p=player;\\n        for(int i=0;i<player.size();i++){\\n            if((i-1>=0 && player[i-1]==10)||(i-2>=0 && player[i-2]==10)) score+=2*player[i];\\n            else score+=player[i];\\n        }\\n        return score;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1=score(player1);\\n        int score2=score(player2);\\n        if(score1>score2) return 1;\\n        else if(score2>score1) return 2;\\n        else return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3584764,
                "title": "simple-js-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n /** \\n    here what we can do it \\n     => we can itrate over both the arrays and find the sum\\n     => and we check if the value of previous or element prevoious to previous element is 10 \\n      => if yes then we need to add the value twice or just add it once\\n    \\n*/\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n   \\n    \\n     let sum1=0;    \\n     let sum2=0;\\n\\n    for(let i=0;i<player1.length;i++){\\n        sum1+=player1[i];\\n        sum2+=player2[i];\\n\\n\\n        if(player1[i-1]==10 || player1[i-2]==10){\\n            sum1+=player1[i];\\n        }\\n        if(player2[i-1]==10 || player2[i-2]==10){\\n            sum2+=player2[i];\\n\\n        }\\n    }\\n\\n    if(sum1>sum2) return 1;\\n    else if(sum1<sum2) return 2;\\n    else return 0;\\n\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n   \\n    \\n     let sum1=0;    \\n     let sum2=0;\\n\\n    for(let i=0;i<player1.length;i++){\\n        sum1+=player1[i];\\n        sum2+=player2[i];\\n\\n\\n        if(player1[i-1]==10 || player1[i-2]==10){\\n            sum1+=player1[i];\\n        }\\n        if(player2[i-1]==10 || player2[i-2]==10){\\n            sum2+=player2[i];\\n\\n        }\\n    }\\n\\n    if(sum1>sum2) return 1;\\n    else if(sum1<sum2) return 2;\\n    else return 0;\\n\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3584075,
                "title": "simple-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def summa(self, player):\\n        p = 0\\n        for ind, i in enumerate(player):\\n            if ind < 2:\\n                p += i\\n                if ind == 1 and player[0] == 10:\\n                    p += i\\n            else:\\n                if 10 in (player[ind-1], player[ind-2]):\\n                    p += 2 * i\\n                else:\\n                    p += i\\n        return p\\n\\n\\n\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        res = []\\n        for x in (player1, player2):\\n            res.append(Solution.summa(self, x))\\n        return (len(set(res)) > 1) * (1 + res.index(max(res)))\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def summa(self, player):\\n        p = 0\\n        for ind, i in enumerate(player):\\n            if ind < 2:\\n                p += i\\n                if ind == 1 and player[0] == 10:\\n                    p += i\\n            else:\\n                if 10 in (player[ind-1], player[ind-2]):\\n                    p += 2 * i\\n                else:\\n                    p += i\\n        return p\\n\\n\\n\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        res = []\\n        for x in (player1, player2):\\n            res.append(Solution.summa(self, x))\\n        return (len(set(res)) > 1) * (1 + res.index(max(res)))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3572682,
                "title": "easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1 =0;\\n        int sum2=0;\\n        for(int i =0;i<player1.size();i++)\\n        {\\n            if((i>0 && player1[i-1]==10) ||(i>1 && player1[i-2]==10))\\n            {\\n                sum1 =sum1+(2*player1[i]);\\n            }\\n            else{\\n                sum1= sum1+player1[i];\\n            }\\n                \\n        }\\n         for(int i =0;i<player2.size();i++)\\n        {\\n            if((i>0 && player2[i-1]==10) ||(i>1 && player2[i-2]==10))\\n            {\\n                sum2 =sum2+(2*player2[i]);\\n            }\\n            else{\\n                sum2= sum2+player2[i];\\n            }\\n                \\n        }\\n        if(sum1==sum2)\\n        {\\n            return 0;\\n        }\\n        else if(sum1>sum2)\\n        {\\n            return 1;\\n        }\\n        return 2;\\n        \\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1 =0;\\n        int sum2=0;\\n        for(int i =0;i<player1.size();i++)\\n        {\\n            if((i>0 && player1[i-1]==10) ||(i>1 && player1[i-2]==10))\\n            {\\n                sum1 =sum1+(2*player1[i]);\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3572194,
                "title": "determine-the-winner-of-a-bowling-game-c-easy-solution-understandable",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size();\\n        int n2=player2.size();\\n        int p1_sum=player1[0];\\n        int p2_sum=player2[0];\\n        for(int i=1;i<n1;i++){\\n            if(i==1){\\n                if(player1[0]==10)\\n                p1_sum+=player1[i]*2;\\n                else\\n                p1_sum+=player1[i];\\n                if(player2[0]==10)\\n                p2_sum+=player2[i]*2;\\n                else\\n                p2_sum+=player2[i];\\n            }\\n            else{\\n                if(player1[i-1]==10 || player1[i-2]==10)\\n                p1_sum+=player1[i]*2;\\n                else\\n                p1_sum+=player1[i];\\n                if(player2[i-1]==10 || player2[i-2]==10)\\n                p2_sum+=player2[i]*2;\\n                else\\n                p2_sum+=player2[i];\\n            }\\n        }\\n        \\n\\n        if(p1_sum>p2_sum)\\n        return 1;\\n        else if(p1_sum<p2_sum)\\n        return 2;\\n        else\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int n1=player1.size();\\n        int n2=player2.size();\\n        int p1_sum=player1[0];\\n        int p2_sum=player2[0];\\n        for(int i=1;i<n1;i++){\\n            if(i==1){\\n                if(player1[0]==10)\\n                p1_sum+=player1[i]*2;\\n                else\\n                p1_sum+=player1[i];\\n                if(player2[0]==10)\\n                p2_sum+=player2[i]*2;\\n                else\\n                p2_sum+=player2[i];\\n            }\\n            else{\\n                if(player1[i-1]==10 || player1[i-2]==10)\\n                p1_sum+=player1[i]*2;\\n                else\\n                p1_sum+=player1[i];\\n                if(player2[i-1]==10 || player2[i-2]==10)\\n                p2_sum+=player2[i]*2;\\n                else\\n                p2_sum+=player2[i];\\n            }\\n        }\\n        \\n\\n        if(p1_sum>p2_sum)\\n        return 1;\\n        else if(p1_sum<p2_sum)\\n        return 2;\\n        else\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3569278,
                "title": "my-easy-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum=0,sum1=0;\\n        for(int i=0;i<player1.size();i++){\\n           if((i>0&& player1[i-1]==10) || (i>1 && player1[i-2]==10)){\\nsum+=2*player1[i];\\n           }\\n           else{\\n               sum+=player1[i];\\n           }\\n        }\\n         for(int i=0;i<player2.size();i++){\\n             if((i>0&& player2[i-1]==10) || (i>1 && player2[i-2]==10)){\\nsum1+=2*player2[i];\\n           }\\n           else{\\n               sum1+=player2[i];\\n           }\\n        }\\n        \\n        if(sum==sum1){\\n            return 0;\\n        }\\n        else if(sum>sum1){\\n            return 1;\\n        }\\n        return 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum=0,sum1=0;\\n        for(int i=0;i<player1.size();i++){\\n           if((i>0&& player1[i-1]==10) || (i>1 && player1[i-2]==10)){\\nsum+=2*player1[i];\\n           }\\n           else{\\n               sum+=player1[i];\\n           }\\n        }\\n         for(int i=0;i<player2.size();i++){\\n             if((i>0&& player2[i-1]==10) || (i>1 && player2[i-2]==10)){\\nsum1+=2*player2[i];\\n           }\\n           else{\\n               sum1+=player2[i];\\n           }\\n        }\\n        \\n        if(sum==sum1){\\n            return 0;\\n        }\\n        else if(sum>sum1){\\n            return 1;\\n        }\\n        return 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3562149,
                "title": "c-brute-force-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1=0;\\n        for(int i=0; i<player1.size(); i++){\\n            if(i>0 && player1[i-1]==10)score1+=2*player1[i];\\n            else if(i>1 && player1[i-2]==10)score1+=2*player1[i];\\n            else {score1+=player1[i];}\\n        }\\n        int score2=0;\\n        for(int i=0; i<player2.size(); i++){\\n            if(i>0 && player2[i-1]==10)score2+=2*player2[i];\\n            else if(i>1 && player2[i-2]==10)score2+=2*player2[i];\\n            else {score2+=player2[i];}\\n        }\\n        if(score1>score2)return 1;\\n        else if(score2>score1)return 2;\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int score1=0;\\n        for(int i=0; i<player1.size(); i++){\\n            if(i>0 && player1[i-1]==10)score1+=2*player1[i];\\n            else if(i>1 && player1[i-2]==10)score1+=2*player1[i];\\n            else {score1+=player1[i];}\\n        }\\n        int score2=0;\\n        for(int i=0; i<player2.size(); i++){\\n            if(i>0 && player2[i-1]==10)score2+=2*player2[i];\\n            else if(i>1 && player2[i-2]==10)score2+=2*player2[i];\\n            else {score2+=player2[i];}\\n        }\\n        if(score1>score2)return 1;\\n        else if(score2>score1)return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3561033,
                "title": "simple-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n> Basic\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nBrute force\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n   \\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        s1, s2 = 0, 0                   # variables to store sum\\n        for i in range(len(player1)):   # iterating the player score\\n            # adding the initial scores\\n            s1 += player1[i]            \\n            s2 += player2[i]\\n\\n            # checking the length to check previous occurance of full score\\n            if i==1:\\n                # if there is just 1 previous element then check the previous index\\n                if player1[i-1]==10:\\n                    s1 += player1[i]    #adding it AGAIN (i.e. 2x)\\n                if player2[i-1]==10:\\n                    s2 += player2[i]\\n            elif i>1:       \\n                # if more than 1 previous elements check previous 2 indexes\\n                if player1[i-1]==10 or player1[i-2]==10:\\n                    s1 += player1[i]\\n                if player2[i-1]==10 or player2[i-2]==10:\\n                    s2 += player2[i] \\n\\n        #check and return                          \\n        if s1 > s2:\\n            return 1\\n        elif s2 > s1:\\n            return 2\\n        else:\\n            return 0                 \\n```",
                "solutionTags": [
                    "Python3",
                    "Brainteaser"
                ],
                "code": "```\\nclass Solution:\\n    def isWinner(self, player1: List[int], player2: List[int]) -> int:\\n        s1, s2 = 0, 0                   # variables to store sum\\n        for i in range(len(player1)):   # iterating the player score\\n            # adding the initial scores\\n            s1 += player1[i]            \\n            s2 += player2[i]\\n\\n            # checking the length to check previous occurance of full score\\n            if i==1:\\n                # if there is just 1 previous element then check the previous index\\n                if player1[i-1]==10:\\n                    s1 += player1[i]    #adding it AGAIN (i.e. 2x)\\n                if player2[i-1]==10:\\n                    s2 += player2[i]\\n            elif i>1:       \\n                # if more than 1 previous elements check previous 2 indexes\\n                if player1[i-1]==10 or player1[i-2]==10:\\n                    s1 += player1[i]\\n                if player2[i-1]==10 or player2[i-2]==10:\\n                    s2 += player2[i] \\n\\n        #check and return                          \\n        if s1 > s2:\\n            return 1\\n        elif s2 > s1:\\n            return 2\\n        else:\\n            return 0                 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3558457,
                "title": "accepted-swift",
                "content": "```\\nclass Solution {\\n    func isWinner(_ player1: [Int], _ player2: [Int]) -> Int {\\n        \\n        func score(_ pins: [Int]) -> Int {\\n\\n            var ten = -3\\n            var res = 0\\n\\n            for i in pins.indices {\\n                if i - ten < 3 { res += pins[i] * 2 }\\n                else { res += pins[i] }\\n                if pins[i] == 10 { ten = i }\\n            }\\n\\n            return res\\n        }\\n\\n        switch score(player1) - score(player2) {\\n        case ...(-1): return 2\\n        case 1...: return 1\\n        default: return 0\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func isWinner(_ player1: [Int], _ player2: [Int]) -> Int {\\n        \\n        func score(_ pins: [Int]) -> Int {\\n\\n            var ten = -3\\n            var res = 0\\n\\n            for i in pins.indices {\\n                if i - ten < 3 { res += pins[i] * 2 }\\n                else { res += pins[i] }\\n                if pins[i] == 10 { ten = i }\\n            }\\n\\n            return res\\n        }\\n\\n        switch score(player1) - score(player2) {\\n        case ...(-1): return 2\\n        case 1...: return 1\\n        default: return 0\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3558140,
                "title": "my-solution-runtime-73-ms-beats-90-37",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    let sum1=0;\\n    let sum2=0;\\n\\n    for (let i=0; i<player1.length; i++) {\\n        if (player1[i-1]==10 || player1[i-2]==10) {sum1+=player1[i]*2;}\\n        else {sum1+=player1[i];}\\n    }    \\n\\n    for (let i=0; i<player2.length; i++) {\\n        if (player2[i-1]==10 || player2[i-2]==10) {sum2+=player2[i]*2;}\\n        else {sum2+=player2[i];}\\n    } \\nif (sum1>sum2) {return 1;}\\nelse if (sum1==sum2) {return 0;}\\nelse if (sum1<sum2) {return 2;}\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} player1\\n * @param {number[]} player2\\n * @return {number}\\n */\\nvar isWinner = function(player1, player2) {\\n    let sum1=0;\\n    let sum2=0;\\n\\n    for (let i=0; i<player1.length; i++) {\\n        if (player1[i-1]==10 || player1[i-2]==10) {sum1+=player1[i]*2;}\\n        else {sum1+=player1[i];}\\n    }    \\n\\n    for (let i=0; i<player2.length; i++) {\\n        if (player2[i-1]==10 || player2[i-2]==10) {sum2+=player2[i]*2;}\\n        else {sum2+=player2[i];}\\n    } \\nif (sum1>sum2) {return 1;}\\nelse if (sum1==sum2) {return 0;}\\nelse if (sum1<sum2) {return 2;}\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3555001,
                "title": "easy-java-solution-beats-99-9-runtime",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n=player1.length;\\n        int res1=player1[0];\\n        int res2=player2[0];\\n        if(n==1){\\n            if(res1==res2) return 0;\\n            else if(res1>res2 ) return 1;\\n            else return 2;\\n        }\\n        else {\\n            if(player1[0]==10) res1+=player1[1]*2;\\n            else res1+=player1[1];\\n            if(player2[0]==10) res2+=player2[1]*2;\\n            else res2+=player2[1];\\n            if(n==2){\\n                if(res1==res2) return 0;\\n                else if(res1>res2) return 1;\\n                else return 2;\\n            }\\n            else{\\n                for(int i=2;i<n;i++){\\n                    if(player1[i-1]==10 || player1[i-2]==10) res1+=2*player1[i];\\n                    else res1+=player1[i];\\n                }\\n                for(int i=2;i<n;i++){\\n                    if(player2[i-1]==10 || player2[i-2]==10) res2+=2*player2[i];\\n                    else res2+=player2[i];\\n                }\\n            }\\n        }\\n        if(res1==res2) return 0;\\n        else if(res1>res2) return 1;\\n        else return 2;\\n    }\\n}\\n```\\n![please-upvote-and.jpg](https://assets.leetcode.com/users/images/0ad5c409-73f4-48cc-926f-43d0a26fed7e_1684829609.9895198.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int n=player1.length;\\n        int res1=player1[0];\\n        int res2=player2[0];\\n        if(n==1){\\n            if(res1==res2) return 0;\\n            else if(res1>res2 ) return 1;\\n            else return 2;\\n        }\\n        else {\\n            if(player1[0]==10) res1+=player1[1]*2;\\n            else res1+=player1[1];\\n            if(player2[0]==10) res2+=player2[1]*2;\\n            else res2+=player2[1];\\n            if(n==2){\\n                if(res1==res2) return 0;\\n                else if(res1>res2) return 1;\\n                else return 2;\\n            }\\n            else{\\n                for(int i=2;i<n;i++){\\n                    if(player1[i-1]==10 || player1[i-2]==10) res1+=2*player1[i];\\n                    else res1+=player1[i];\\n                }\\n                for(int i=2;i<n;i++){\\n                    if(player2[i-1]==10 || player2[i-2]==10) res2+=2*player2[i];\\n                    else res2+=player2[i];\\n                }\\n            }\\n        }\\n        if(res1==res2) return 0;\\n        else if(res1>res2) return 1;\\n        else return 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3546710,
                "title": "very-easy-to-understand-c-solution",
                "content": "# Jai Shree Ram\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int solve(vector<int>& arr){\\n        int n=arr.size();\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            if(i==0)sum+=arr[i];\\n            else if(i==1){\\n                if(arr[i-1]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n            else{\\n                if(arr[i-1]==10 || arr[i-2]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n        }\\n        return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        if(solve(player1)>solve(player2))return 1;\\n        else if(solve(player1)<solve(player2))return 2;\\n        return 0;\\n    }\\n};\\n```\\n![leetcode upvote.jpg](https://assets.leetcode.com/users/images/25d70117-0e3e-4bd0-95ba-100c7345ff6c_1684641604.5223634.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int solve(vector<int>& arr){\\n        int n=arr.size();\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            if(i==0)sum+=arr[i];\\n            else if(i==1){\\n                if(arr[i-1]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n            else{\\n                if(arr[i-1]==10 || arr[i-2]==10)sum+=(2*arr[i]);\\n                else sum+=arr[i];\\n            }\\n        }\\n        return sum;\\n    }\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        if(solve(player1)>solve(player2))return 1;\\n        else if(solve(player1)<solve(player2))return 2;\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3544657,
                "title": "least-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int s1=0, s2=0;\\n        int f1=0,f2=0;\\n        for(int i=0; i<player1.length;i++){\\n            if(f1>0){\\n                s1+=player1[i]*2;\\n                f1--;\\n            }else{\\n                s1+=player1[i];\\n            }\\n            if(player1[i]==10){\\n                    f1=2;\\n            }\\n            if(f2>0){\\n                s2+=player2[i]*2;\\n                f2--;\\n            }else{\\n                s2+=player2[i];\\n            }\\n            if(player2[i]==10){\\n                    f2=2;\\n            }\\n\\n        }\\n        if(s1<s2){\\n            return 2;\\n        }if(s1>s2){\\n            return 1;\\n        }else\\n            return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int s1=0, s2=0;\\n        int f1=0,f2=0;\\n        for(int i=0; i<player1.length;i++){\\n            if(f1>0){\\n                s1+=player1[i]*2;\\n                f1--;\\n            }else{\\n                s1+=player1[i];\\n            }\\n            if(player1[i]==10){\\n                    f1=2;\\n            }\\n            if(f2>0){\\n                s2+=player2[i]*2;\\n                f2--;\\n            }else{\\n                s2+=player2[i];\\n            }\\n            if(player2[i]==10){\\n                    f2=2;\\n            }\\n\\n        }\\n        if(s1<s2){\\n            return 2;\\n        }if(s1>s2){\\n            return 1;\\n        }else\\n            return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3540082,
                "title": "c-solution-o-n-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1 = 0;\\n        for(int i=0;i<player1.size();i++){\\n            if(i==1 && player1[i-1]==10){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else if(i>=2 && (player1[i-1]==10 || player1[i-2]==10)){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else{\\n                sum1 = sum1 + player1[i];\\n            }\\n        }\\n        int sum2 = 0;\\n        for(int i=0;i<player2.size();i++){\\n            if(i==1 && (player2[i-1]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else if(i>=2 && (player2[i-1]==10 || player2[i-2]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else{\\n                sum2 = sum2 + player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum2>sum1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int isWinner(vector<int>& player1, vector<int>& player2) {\\n        int sum1 = 0;\\n        for(int i=0;i<player1.size();i++){\\n            if(i==1 && player1[i-1]==10){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else if(i>=2 && (player1[i-1]==10 || player1[i-2]==10)){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else{\\n                sum1 = sum1 + player1[i];\\n            }\\n        }\\n        int sum2 = 0;\\n        for(int i=0;i<player2.size();i++){\\n            if(i==1 && (player2[i-1]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else if(i>=2 && (player2[i-1]==10 || player2[i-2]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else{\\n                sum2 = sum2 + player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum2>sum1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3540076,
                "title": "java-solution-o-n-time-99-90-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        for(int i=0;i<player1.length;i++){\\n            if(i==1 && player1[i-1]==10){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else if(i>=2 && (player1[i-1]==10 || player1[i-2]==10)){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else{\\n                sum1 = sum1 + player1[i];\\n            }\\n        }\\n        int sum2 = 0;\\n        for(int i=0;i<player2.length;i++){\\n            if(i==1 && (player2[i-1]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else if(i>=2 && (player2[i-1]==10 || player2[i-2]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else{\\n                sum2 = sum2 + player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum2>sum1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int isWinner(int[] player1, int[] player2) {\\n        int sum1 = 0;\\n        for(int i=0;i<player1.length;i++){\\n            if(i==1 && player1[i-1]==10){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else if(i>=2 && (player1[i-1]==10 || player1[i-2]==10)){\\n                sum1 = sum1 + 2*player1[i];\\n            }\\n            else{\\n                sum1 = sum1 + player1[i];\\n            }\\n        }\\n        int sum2 = 0;\\n        for(int i=0;i<player2.length;i++){\\n            if(i==1 && (player2[i-1]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else if(i>=2 && (player2[i-1]==10 || player2[i-2]==10)){\\n                sum2 = sum2 + 2*player2[i];\\n            }\\n            else{\\n                sum2 = sum2 + player2[i];\\n            }\\n        }\\n        if(sum1>sum2){\\n            return 1;\\n        }\\n        else if(sum2>sum1){\\n            return 2;\\n        }\\n        else{\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3539620,
                "title": "bowling-game-javascript-count-strikes-85-ms",
                "content": "```\\nvar isWinner = function(player1, player2) {\\n    p1_x2 = p2_x2 = 0\\n    sum1 = sum2 = 0\\n    \\n    for (let i = 0; i < player1.length; i++) {\\n        sum1 += p1_x2 > 0 ? player1[i] * 2 : player1[i] \\n        sum2 += p2_x2 > 0 ? player2[i] * 2 : player2[i] \\n\\n        p1_x2 = p1_x2 > 0 ? p1_x2 - 1 : p1_x2 \\n        p2_x2 = p2_x2 > 0 ? p2_x2 - 1 : p2_x2 \\n\\n        p1_x2 = player1[i] == 10 ? 2 : p1_x2\\n        p2_x2 = player2[i] == 10 ? 2 : p2_x2  \\n    }    \\n\\n    return sum1 > sum2 ? 1 : sum1 == sum2 ? 0 : 2\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isWinner = function(player1, player2) {\\n    p1_x2 = p2_x2 = 0\\n    sum1 = sum2 = 0\\n    \\n    for (let i = 0; i < player1.length; i++) {\\n        sum1 += p1_x2 > 0 ? player1[i] * 2 : player1[i] \\n        sum2 += p2_x2 > 0 ? player2[i] * 2 : player2[i] \\n\\n        p1_x2 = p1_x2 > 0 ? p1_x2 - 1 : p1_x2 \\n        p2_x2 = p2_x2 > 0 ? p2_x2 - 1 : p2_x2 \\n\\n        p1_x2 = player1[i] == 10 ? 2 : p1_x2\\n        p2_x2 = player2[i] == 10 ? 2 : p2_x2  \\n    }    \\n\\n    return sum1 > sum2 ? 1 : sum1 == sum2 ? 0 : 2\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3539541,
                "title": "php-foreach-2n",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n\\n    /**\\n     * @param Integer[] $player1\\n     * @param Integer[] $player2\\n     * @return Integer\\n     */\\n    function isWinner($player1, $player2) {\\n        $score1 = 0;\\n        $score2 = 0;\\n\\n        foreach ($player1 as $key => $value) {\\n            $caf = 1;\\n            if (isset($player1[$key-1]) && $player1[$key-1] === 10) {\\n                $caf = 2;\\n            } elseif (isset($player1[$key-2]) && $player1[$key-2] === 10) {\\n                $caf = 2;\\n            }\\n            $score1 += ($value*$caf);\\n        }\\n\\n        foreach ($player2 as $key => $value) {\\n            $caf = 1;\\n            if (isset($player2[$key-1]) && $player2[$key-1] === 10) {\\n                $caf = 2;\\n            } elseif (isset($player2[$key-2]) && $player2[$key-2] === 10) {\\n                $caf = 2;\\n            }\\n            $score2 += ($value*$caf);\\n        }\\n\\n        if (($result = ($score1 <=> $score2)) === -1) {\\n            return 2;\\n        }\\n\\n        return $result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer[] $player1\\n     * @param Integer[] $player2\\n     * @return Integer\\n     */\\n    function isWinner($player1, $player2) {\\n        $score1 = 0;\\n        $score2 = 0;\\n\\n        foreach ($player1 as $key => $value) {\\n            $caf = 1;\\n            if (isset($player1[$key-1]) && $player1[$key-1] === 10) {\\n                $caf = 2;\\n            } elseif (isset($player1[$key-2]) && $player1[$key-2] === 10) {\\n                $caf = 2;\\n            }\\n            $score1 += ($value*$caf);\\n        }\\n\\n        foreach ($player2 as $key => $value) {\\n            $caf = 1;\\n            if (isset($player2[$key-1]) && $player2[$key-1] === 10) {\\n                $caf = 2;\\n            } elseif (isset($player2[$key-2]) && $player2[$key-2] === 10) {\\n                $caf = 2;\\n            }\\n            $score2 += ($value*$caf);\\n        }\\n\\n        if (($result = ($score1 <=> $score2)) === -1) {\\n            return 2;\\n        }\\n\\n        return $result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3537633,
                "title": "c-calculating-scores-110ms-95",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) \\n    {\\n        var diff = GetScore(player1) - GetScore(player2);\\n\\n        return diff == 0 ? 0 : (diff > 0 ? 1 : 2);\\n    }\\n\\n    int GetScore(int[] hits)\\n    {\\n        var doubling = 0;\\n\\n        var score = 0;\\n\\n        foreach(var h in hits)\\n        {\\n            score += (doubling-- > 0) ? 2 * h : h;\\n\\n            if(h == 10) doubling = 2;\\n        }\\n\\n        return score;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int IsWinner(int[] player1, int[] player2) \\n    {\\n        var diff = GetScore(player1) - GetScore(player2);\\n\\n        return diff == 0 ? 0 : (diff > 0 ? 1 : 2);\\n    }\\n\\n    int GetScore(int[] hits)\\n    {\\n        var doubling = 0;\\n\\n        var score = 0;\\n\\n        foreach(var h in hits)\\n        {\\n            score += (doubling-- > 0) ? 2 * h : h;\\n\\n            if(h == 10) doubling = 2;\\n        }\\n\\n        return score;\\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1878349,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1879196,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1878218,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877921,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877795,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1943431,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1879245,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1881378,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877747,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877717,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1878349,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1879196,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1878218,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877921,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877795,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1943431,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1879245,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1881378,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877747,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            },
            {
                "id": 1877717,
                "content": [
                    {
                        "username": "almostmonday",
                        "content": "Be careful:\n1) previous **TWO** turns;\n2) \"in any of the previous two turns\" means `player[i - 1] == 10 or player[i - 2] == 10`."
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**improves attention**"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "hahahaha"
                    },
                    {
                        "username": "abhi_shek123",
                        "content": "it wasn\\'t a easy question bro "
                    },
                    {
                        "username": "hhimanshii",
                        "content": "They should have given good example test cases. It\\'s so unclear from the given test cases."
                    },
                    {
                        "username": "bhattanrag123",
                        "content": "2xi (((if the player hits 10 pins in any of the previous two turns))). Read this line very carefully my fellow leetcoders only the one in bracket. We need to double the current score if it satisfies this condition "
                    },
                    {
                        "username": "gouravchalotra",
                        "content": "it\\'s took me 1 hour to to understand it \\uD83E\\uDD72"
                    },
                    {
                        "username": "learn_improve",
                        "content": "Thanks for highlighting this"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "Has any one got the same problem ?\\n```\\nplayer1 = [9,7,10,7]\\nplayer2 = [10,2,4,10]\\n```\\nThe total scores should be \\n```\\nscore_1 = 40\\nscore_2 = 42\\n```\\nAccording to the condition \\n```\\nsocre_2 > score_1 = True\\n```\\nand hence the output should be \\n```\\nOutput : 2\\n```\\nThen why it is showing the output to be \\n```\\nExpected : 1\\n```"
                    },
                    {
                        "username": "iam_kmrahul",
                        "content": "score_1=9+7+10+7*2=40\\nscore_2=10+2*2+4*2+10=32\\nso player 1 is scored more \\n1 is correct output"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@kshapwari](/kshapwari) \\n\\nLets consider this test case \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\nOutput: 2\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\nHere the 2nd 10 is also multiplied with 2, that\\'s why I consider multiplication with 2 \\n\\n```\\n10 + (2 * 2) + (2 * 4) + (2 * 10)\\n= 10 + 4 + 8 + 20\\n= 42\\n```"
                    },
                    {
                        "username": "kshapwari",
                        "content": "score_2 = 32\\n10 + 2*2 + 2*4 + 10 =32"
                    },
                    {
                        "username": "AyushS9020",
                        "content": "[@mainadotkim](/mainadotkim)  \\n\\nHey mainadotkim !. \\n\\nI had thought of this case but when I saw this test case in the example \\n\\n```\\nInput: player1 = [3,5,7,6], player2 = [8,10,10,2]\\n\\nOutput: 2\\n\\nExplanation: The score of player1 is 3 + 5 + 7 + 6 = 21.\\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.\\n```\\n\\nIn this test case the second `10` was also multiplied by `2`"
                    },
                    {
                        "username": "mainadotkim",
                        "content": "Because\n\n```\nscore_1 = 40\nscore_2 = 32\n```\n\nAnd the output will be as `Expected: 1`\n\nExplanation:\n\nThe statement\n\n> 2xi if the player hit 10 pins in any of the previous two turns\n\nmeans that the last 10 scored by `player2` should not be doubled.\n\nThus, `score_2 = 10 + 2*2 + 2*4 + 10`"
                    },
                    {
                        "username": "M1dn1ght",
                        "content": "Tip : Don\\'t underestimate this one "
                    },
                    {
                        "username": "NitinSingh77",
                        "content": "player1=[10,2,2,3]\\nplayer2=[3,8,4,5]\\n\\nWhy is player 1 the winner in this test case?"
                    },
                    {
                        "username": "IgorP17",
                        "content": "[@qleIIT](/qleIIT) yes, it seems here was the problem"
                    },
                    {
                        "username": "IgorP17",
                        "content": "I wrote aux method for cheking if we need doubling and test was passed)). Do not understand what was wrong)).\\nMethod:\\nboolean checkLast(int k, int[] res)\\nk == 0 -> false\\nk == 1 -> res[k - 1] == 10\\nelse -> res[k - 1] == 10 || res[k - 2] == 10"
                    },
                    {
                        "username": "qleIIT",
                        "content": "I’m no expert here, since I failed this question miserably 🥲, but for your example, player1 gets 10 + 2x2 + 2x2 + 3 = 21, player2 gets 3 + 8 + 4 + 5 = 20. So player1 is the winner here."
                    },
                    {
                        "username": "qleIIT",
                        "content": "29.7% acceptance rate for an \"Easy\" contest Q1 huh?\n\n"
                    },
                    {
                        "username": "luckymaster",
                        "content": "what does this mean --> 2xi if the player hit 10 pins in any of the previous two turns. \\nSo unclear. Please try to write proper statement it is so ambiguous. I could not understand it. "
                    },
                    {
                        "username": "Finesse",
                        "content": "The score of a turn doubles, if the score of the previous turn or the turn before the previous was 10. I.e. `if player1[i - 1] == 10 || player1[i - 2] == 10 { player1[i] *= 2 }`."
                    },
                    {
                        "username": "aquaman55",
                        "content": "Its bowling man. Have you never bowled? lol"
                    }
                ]
            }
        ]
    }
]