[
    {
        "title": "Check if All A's Appears Before All B's",
        "question_content": "Given a string s consisting of only the characters 'a' and 'b', return true if every 'a' appears before every 'b' in the string. Otherwise, return false.\n&nbsp;\nExample 1:\n\nInput: s = \"aaabbb\"\nOutput: true\nExplanation:\nThe 'a's are at indices 0, 1, and 2, while the 'b's are at indices 3, 4, and 5.\nHence, every 'a' appears before every 'b' and we return true.\n\nExample 2:\n\nInput: s = \"abab\"\nOutput: false\nExplanation:\nThere is an 'a' at index 2 and a 'b' at index 1.\nHence, not every 'a' appears before every 'b' and we return false.\n\nExample 3:\n\nInput: s = \"bbb\"\nOutput: true\nExplanation:\nThere are no 'a's, hence, every 'a' appears before every 'b' and we return true.\n\n&nbsp;\nConstraints:\n\n\t1 <= s.length <= 100\n\ts[i] is either 'a' or 'b'.",
        "solutions": [
            {
                "id": 1661056,
                "title": "python-1-liner",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1666486,
                "title": "c-2-one-liner-solution-find-ba-check-if-sorted",
                "content": "# C++ \\n\\n**Method 1:**\\n\\n**Logic:** if at any point ``b`` comes before ``a`` then \"ba\" will come in string. So just check that string doesn\\'t contain any \"ba\".\\n\\n**Code**\\n```\\nbool checkString(string s) {\\n        return s.find(\"ba\")==string::npos;\\n    }\\n```\\n\\n**Method 2:**\\n\\n**Logic:** Check if string is sorted or not.\\n\\n**Code:**\\n```\\nbool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n```\\n\\nPlease Upvote! if find helpful ,suggestion are welcomed :)\\nFind me on: https://coderaky.com",
                "solutionTags": [
                    "C",
                    "Sorting"
                ],
                "code": "```\\nbool checkString(string s) {\\n        return s.find(\"ba\")==string::npos;\\n    }\\n```\n```\\nbool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1660987,
                "title": "java-python-3-check-if-b-followed-by-a",
                "content": "**Method 1**\\n\\n```java\\n    public boolean checkString(String s) {\\n        for (int i = 1; i < s.length(); ++i) {\\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n```\\n```python\\n    def checkString(self, s: str) -> bool:\\n        for i, c in enumerate(s):\\n            if i > 0 and s[i - 1] == \\'b\\' and c == \\'a\\':\\n                return False\\n        return True\\n```\\n\\n----\\n\\n**Method 2:**\\n\\n```java\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n```\\n```python\\n    def checkString(self, s: str) -> bool:\\n        return \\'ba\\' not in s\\n```\\n**Analysis**\\n\\nTime: `O(n)`, space: `O(1)`, where `n = s.length()`.",
                "solutionTags": [
                    "Java",
                    "Python3"
                ],
                "code": "```java\\n    public boolean checkString(String s) {\\n        for (int i = 1; i < s.length(); ++i) {\\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n```\n```python\\n    def checkString(self, s: str) -> bool:\\n        for i, c in enumerate(s):\\n            if i > 0 and s[i - 1] == \\'b\\' and c == \\'a\\':\\n                return False\\n        return True\\n```\n```java\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n```\n```python\\n    def checkString(self, s: str) -> bool:\\n        return \\'ba\\' not in s\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1661052,
                "title": "c-simple-solution",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\tbool checkString(string s) {\\n\\t\\t\\tfor(int i = 1; i < s.size(); i++){\\n\\t\\t\\t\\tif(s[i - 1] == \\'b\\' && s[i] == \\'a\\'){\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tbool checkString(string s) {\\n\\t\\t\\tfor(int i = 1; i < s.size(); i++){\\n\\t\\t\\t\\tif(s[i - 1] == \\'b\\' && s[i] == \\'a\\'){\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1661834,
                "title": "easy-python-solution-1-liner-multiple-approach",
                "content": "```\\ndef checkString(self, s: str) -> bool:\\n        return (\\'\\'.join(sorted(list(s))))==s\\n```\\n\\n```\\ndef checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef checkString(self, s: str) -> bool:\\n        return (\\'\\'.join(sorted(list(s))))==s\\n```\n```\\ndef checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1797695,
                "title": "c-one-liner-solution-stl",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n    return is_sorted(s.begin(),s.end());    //using is_sorted() to check if the string is sorted or not\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n    return is_sorted(s.begin(),s.end());    //using is_sorted() to check if the string is sorted or not\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 1662993,
                "title": "java-basic-100-clear-presentation",
                "content": "if you like it pls upvote\\n\\nBasic idea is we cant have \\'a\\' after \\'b\\' so we cant have \"ba\" that string in our given string.\\n\\nwe have 2 solution both of them is simple.\\n\\n1.way just check with contains method. This one is shorter but a bit slower.\\n2.check it with manuelly for loop. This one is longer but more faster\\n\\n**1**\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n```\\n\\n**2**\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for (int i = 1; i < s.length(); ++i) \\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') \\n                return false;    \\n        return true;\\n    }\\n}\\n```\\n\\n\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for (int i = 1; i < s.length(); ++i) \\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') \\n                return false;    \\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1675939,
                "title": "python-simple-o-n-solution-one-line",
                "content": "**Python :**\\n\\n```\\ndef checkString(self, s: str) -> bool:\\n\\tisA = True\\n\\tfor char in s:\\n\\t\\tif char == \\'a\\' and not isA:\\n\\t\\t\\treturn False\\n\\t\\tif char == \\'b\\':\\n\\t\\t\\tisA = False\\n\\n\\treturn True\\n```\\n\\n**One line :**\\n\\n```\\ndef checkString(self, s: str) -> bool:\\n\\treturn \"ba\" not in s\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\ndef checkString(self, s: str) -> bool:\\n\\tisA = True\\n\\tfor char in s:\\n\\t\\tif char == \\'a\\' and not isA:\\n\\t\\t\\treturn False\\n\\t\\tif char == \\'b\\':\\n\\t\\t\\tisA = False\\n\\n\\treturn True\\n```\n```\\ndef checkString(self, s: str) -> bool:\\n\\treturn \"ba\" not in s\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1674089,
                "title": "is-sorted",
                "content": "**C++**\\n```cpp\\nbool checkString(string s) {\\n    return is_sorted(begin(s), end(s));\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nbool checkString(string s) {\\n    return is_sorted(begin(s), end(s));\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3063553,
                "title": "c-code-beats-100-of-the-solutions-on-leetcode",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe question is very straight forward and the first thought that comes to mind is to iterate over the string and check if all \\'a\\' are behind all \\'b\\', but there is one more solution which is very straight forward and easy to understand, if we sort the given string and check the if the unsorted string is equal to the sorted one then we return true else false.\\n\\nThis solution beats 100% of the solutions on leetcode in runtime.\\nPlease Upvote the solution if you like it.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nHere, we have a variable str, in which we are storing the given string s, then we use the \"standered template library\\'s\" sort function which sorts str and finally we compare both the strings. If they are equal then return true else false.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(nlogn)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string str = s;\\n        sort(str.begin(),str.end());\\n        if(str==s){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string str = s;\\n        sort(str.begin(),str.end());\\n        if(str==s){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1673121,
                "title": "sort-and-compare-easy-cpp-solution",
                "content": "\\ncheck if s is sorted or not.If sorted then all a\\'s will be appeared infront of b.\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661483,
                "title": "two-word-in-c-with-explanation-extremely-easy",
                "content": "### **Please upvote if you find it useful !!!**\\n\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n\\t// sorting function in c++ returns a permuattion of string or number in sorted ordere. Here,\\n\\t// we are just checking if it is sorted ! then all a would automatically be before a ! Isn\\'t is??\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```",
                "solutionTags": [
                    "String",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n\\t// sorting function in c++ returns a permuattion of string or number in sorted ordere. Here,\\n\\t// we are just checking if it is sorted ! then all a would automatically be before a ! Isn\\'t is??\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2017465,
                "title": "easy-to-read-javascript-solution",
                "content": "Found this solution helpful? Consider showing support by upvoting this post.\\nHave a question? Kindly leave a comment below.\\nThank you and happy hacking!\\n```\\nvar checkString = function(s) {\\n    if(!s.includes(\\'b\\')) return true\\n    let firstB = s.indexOf(\\'b\\');\\n\\t\\n    for(let i = firstB; i < s.length; i++){\\n        if(s[i] === \\'a\\') return false\\n    }\\n    \\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkString = function(s) {\\n    if(!s.includes(\\'b\\')) return true\\n    let firstB = s.indexOf(\\'b\\');\\n\\t\\n    for(let i = firstB; i < s.length; i++){\\n        if(s[i] === \\'a\\') return false\\n    }\\n    \\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1662586,
                "title": "python-o-nlogn-sort-solution-and-o-n-linear-scan-solution",
                "content": "O(NlogN) using sort.\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \\'\\'.join(sorted(s)) == s\\n```\\n\\nO(N) by linear scanning.\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        appeared_b = False\\n        for char in s:\\n            if char == \\'b\\':\\n                appeared_b = True\\n            else:\\n                if appeared_b:\\n                    return False\\n        return True\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Sorting"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \\'\\'.join(sorted(s)) == s\\n```\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        appeared_b = False\\n        for char in s:\\n            if char == \\'b\\':\\n                appeared_b = True\\n            else:\\n                if appeared_b:\\n                    return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2779991,
                "title": "check-if-all-a-s-appears-before-all-b-s-easy-and-short-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nbool checkString(char * s){\\n    int x=strlen(s);\\n    for(int i=0;i<x;i++)\\n    {\\n        if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n        {\\n            return false;\\n        }\\n\\n    }\\n    return true;\\n\\n}\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nbool checkString(char * s){\\n    int x=strlen(s);\\n    for(int i=0;i<x;i++)\\n    {\\n        if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n        {\\n            return false;\\n        }\\n\\n    }\\n    return true;\\n\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1661920,
                "title": "python-js-go-c-o-n-violation-checking-w-example",
                "content": "**Hint**:\\n\\nSince description says that **\\'a\\' must come before \\'b\\'** in whole string, \\nthen **violation pattern \\'ba\\' should not appear** in input string.\\n\\n**Example**:\\n\\n<img src=\"https://assets.leetcode.com/users/images/c293783c-e2fb-442d-84aa-6740e0aae3e8_1641125355.7053854.png\" width=400 height=300>\\n\\n---\\n**Implementation**:\\nin **Python**\\n\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        \\n        # \\'a\\' cannot come after \\'b\\'\\n        violation = \"ba\"\\n        \\n        return violation not in s\\n```\\n\\n---\\n\\nin **Javascript**:\\n\\n```\\nvar checkString = function(s) {\\n    \\n    // a cannot come after b\\n    let violation = \"ba\";\\n    \\n    return s.indexOf(violation, 0) == -1;\\n};\\n```\\n\\n---\\n\\nin **Go**:\\n\\n```\\nfunc checkString(s string) bool {\\n    \\n    // \\'a\\' cannot come after \\'b\\'\\n    violation := \"ba\"\\n    \\n    return strings.Count(s, violation) == 0\\n}\\n```\\n\\n---\\n\\nin **C++**\\n\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        // \\'a\\' cannot come after \\'b\\'\\n        return s.find( violation ) == -1;\\n    }\\n    \\nprivate:\\n    string violation = \"ba\";\\n};\\n```\\n\\n---\\n\\nReference:\\n\\n[1] [Python official docs about in, not in  membership operation](https://docs.python.org/3/reference/expressions.html#membership-test-operations)\\n\\n[2] [MDN Javascript docs about substring indexOf() method](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf)\\n\\n[3] [Golang official docs about string.Count( ... ) function](https://pkg.go.dev/strings#Count)\\n\\n[4] [CPP reference about string.find( ... ) method](https://www.cplusplus.com/reference/string/string/find/)",
                "solutionTags": [
                    "Python",
                    "C",
                    "JavaScript",
                    "Go",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        \\n        # \\'a\\' cannot come after \\'b\\'\\n        violation = \"ba\"\\n        \\n        return violation not in s\\n```\n```\\nvar checkString = function(s) {\\n    \\n    // a cannot come after b\\n    let violation = \"ba\";\\n    \\n    return s.indexOf(violation, 0) == -1;\\n};\\n```\n```\\nfunc checkString(s string) bool {\\n    \\n    // \\'a\\' cannot come after \\'b\\'\\n    violation := \"ba\"\\n    \\n    return strings.Count(s, violation) == 0\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        // \\'a\\' cannot come after \\'b\\'\\n        return s.find( violation ) == -1;\\n    }\\n    \\nprivate:\\n    string violation = \"ba\";\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661296,
                "title": "javascript-2124-check-if-all-a-s-appears-before-all-b-s",
                "content": "\\n---\\n\\n**Weekly Contest 274**\\n  - **Q1** answer\\n    - https://leetcode.com/problems/check-if-all-as-appears-before-all-bs/discuss/1661296/JavaScript-2124.-Check-if-All-A\\'s-Appears-Before-All-B\\'s\\n    - **below**\\n- **Q2** answer\\n  - https://leetcode.com/problems/number-of-laser-beams-in-a-bank/discuss/1661353/javascript-2125-number-of-laser-beams-in-a-bank\\n- **Q3** answer\\n  - https://leetcode.com/problems/destroying-asteroids/discuss/1661395/JavaScript-2126.-Destroying-Asteroids\\n- **Q4** answer - **C++ & JavaScript**\\n  - https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/discuss/1664868/C%2B%2B-JavaScript-return-max-(-maxCycleLength-sumOfMaxCycle2ChainLengths-)\\n\\n---\\n\\nHope it is simple to understand.\\n\\n---\\n\\n```\\nvar checkString = function (s) {\\n    return (\\n        s.indexOf(\"b\") === -1 ||                          // is b is not there ?\\n        s.lastIndexOf(\"a\") < s.indexOf(\"b\")               // is  last a  before  1st b ?\\n    );\\n};\\n```\\n\\n---\\n\\n```\\nvar checkString = function (s) {\\n    return s.indexOf(\"ba\") === -1;                        // is no  a  after  b ?\\n};\\n```\\n\\n---\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkString = function (s) {\\n    return (\\n        s.indexOf(\"b\") === -1 ||                          // is b is not there ?\\n        s.lastIndexOf(\"a\") < s.indexOf(\"b\")               // is  last a  before  1st b ?\\n    );\\n};\\n```\n```\\nvar checkString = function (s) {\\n    return s.indexOf(\"ba\") === -1;                        // is no  a  after  b ?\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1660995,
                "title": "easy-to-understand-java-n-python-solution",
                "content": "**Python**\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \"ba\" in s:\\n            return False\\n        else:\\n            return True\\n```\\nANALYSIS :-\\n* **Time Complexity** :- BigO(N) where N is s.length()\\n\\n* **Space Complexity** :- BigO(1) as we are not using extra space\\n**Java Method - 1**\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == \\'b\\'){\\n                for(int j = i+1; j < s.length(); j++){\\n                    if(s.charAt(j) == \\'a\\'){\\n                        return false;\\n                    }\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\\nANALYSIS :-\\n* **Time Complexity** :- BigO(N^2) \\n\\n* **Space Complexity** :- BigO(1) \\n\\n**Java Method - 2** *By :- @rhythm_varshney*\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return s.indexOf(\\'b\\')==-1? true: s.indexOf(\\'b\\')>s.lastIndexOf(\\'a\\');\\n    }\\n}\\n```\\nANALYSIS :-\\n* **Time Complexity** :- BigO(N) \\n\\n* **Space Complexity** :- BigO(1)",
                "solutionTags": [
                    "Java",
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \"ba\" in s:\\n            return False\\n        else:\\n            return True\\n```\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == \\'b\\'){\\n                for(int j = i+1; j < s.length(); j++){\\n                    if(s.charAt(j) == \\'a\\'){\\n                        return false;\\n                    }\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return s.indexOf(\\'b\\')==-1? true: s.indexOf(\\'b\\')>s.lastIndexOf(\\'a\\');\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1761173,
                "title": "java-100-faster-simple-2-liner-code",
                "content": "Easy 2 liner code which runs in 0ms\\n\\n```\\nif(s.lastIndexOf(\"a\")<s.indexOf(\"b\")||s.indexOf(\"b\")==-1)\\n            return true;\\n        else return false;  \\n\\t\\t```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nif(s.lastIndexOf(\"a\")<s.indexOf(\"b\")||s.indexOf(\"b\")==-1)\\n            return true;\\n        else return false;  \\n\\t\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1661100,
                "title": "check-if-all-a-s-appears-before-all-b-s",
                "content": "class Solution {\\n    public static boolean checkString(String s) {\\n\\t\\n\\tfor(int i=0;i<s.length()-1;i++)\\n\\t{\\n\\t\\tif(s.charAt(i)>s.charAt(i+1))\\n\\t\\t{\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\treturn true;\\n\\n}\\n\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public static boolean checkString(String s) {\\n\\t\\n\\tfor(int i=0;i<s.length()-1;i++)\\n\\t{\\n\\t\\tif(s.charAt(i)>s.charAt(i+1))\\n\\t\\t{\\n\\t\\t\\treturn false;\\n\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1661063,
                "title": "c-easy-implementation",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string t=s;\\n        sort(t.begin(),t.end());\\n        return t==s;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string t=s;\\n        sort(t.begin(),t.end());\\n        return t==s;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1660964,
                "title": "c-easiest-3-liner-solution-with-explanation",
                "content": "sorting the string will make all the \\'a\\'s come before the \\'b\\'s , after this we just gotta check if the sorted string is equal to the original string \\n\\nhave a doubt ? comment below :)\\nfound it helpful ? do upvote ;)\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\nstring x=s;\\nsort(s.begin() , s.end());\\nreturn x==s;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\nstring x=s;\\nsort(s.begin() , s.end());\\nreturn x==s;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 3047328,
                "title": "easy-peezy-python",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        a=list(s)\\n        b=sorted(s)\\n        if a==b:\\n            return True\\n        else:\\n            return False\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        a=list(s)\\n        b=sorted(s)\\n        if a==b:\\n            return True\\n        else:\\n            return False\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2965993,
                "title": "java-3-line-code-100-faster-two-approach-explained",
                "content": "![100%.PNG](https://assets.leetcode.com/users/images/eb264102-ba2f-4fee-879b-07721f982b77_1672296045.2027338.png)\\n\\n**PLEASE UPVOTE, IF YOU LIKE IT**\\n# Code\\n\\nFIRST APPROACH:\\n\\nHere first count the number of a\\'s in the array and then if b is found in between the length of a, then return false otherwise return true;\\n\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int count = 0;\\n        char[] c = s.toCharArray();\\n        for (char ch : c) if (ch == \\'a\\') count++;\\n\\n        for(int i = 0; i < c.length; i++){\\n            if(c[i] == \\'b\\') if(i < count) return false;\\n        }\\n        return true; \\n    }\\n}\\n```\\nSECOND APPROACH: \\n\\nSort the string array and compare with the original string;\\n```\\npublic static boolean checkString(String s) {\\n        char[] c = s.toCharArray();\\n        StringBuilder sb = new StringBuilder();\\n        Arrays.sort(c);\\n        for(char i : c) sb.append(i);\\n        return s.equals(sb.toString());\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Sorting",
                    "Counting"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int count = 0;\\n        char[] c = s.toCharArray();\\n        for (char ch : c) if (ch == \\'a\\') count++;\\n\\n        for(int i = 0; i < c.length; i++){\\n            if(c[i] == \\'b\\') if(i < count) return false;\\n        }\\n        return true; \\n    }\\n}\\n```\n```\\npublic static boolean checkString(String s) {\\n        char[] c = s.toCharArray();\\n        StringBuilder sb = new StringBuilder();\\n        Arrays.sort(c);\\n        for(char i : c) sb.append(i);\\n        return s.equals(sb.toString());\\n    }\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2918517,
                "title": "100-on-memory",
                "content": "![Screenshot 2022-12-16 at 20.34.58.png](https://assets.leetcode.com/users/images/e94987fc-7a3b-4faa-a6b7-cbe02e39825e_1671205010.4123518.png)\\n\\n- Please give me \\uD83D\\uDC4D\\uD83D\\uDC4D for this solution.\\n\\n# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        try:\\n            b = s.index(\\'b\\')\\n            try:\\n                a = s[::-1].index(\\'a\\')\\n                return len(s)-a-1<b\\n            except: return True\\n        except:\\n            return True\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        try:\\n            b = s.index(\\'b\\')\\n            try:\\n                a = s[::-1].index(\\'a\\')\\n                return len(s)-a-1<b\\n            except: return True\\n        except:\\n            return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2708552,
                "title": "c-one-line-code",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        return is_sorted(s.begin(), s.end());\\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        return is_sorted(s.begin(), s.end());\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2594954,
                "title": "java-beats-100-simple",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return s.indexOf(\"ba\")==-1;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public boolean checkString(String s) {\\n        return s.indexOf(\"ba\")==-1;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2509408,
                "title": "java-solution-100-faster",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return s.lastIndexOf(\\'a\\') < (s.indexOf(\\'b\\') != -1 ? s.indexOf(\\'b\\') : Integer.MAX_VALUE);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return s.lastIndexOf(\\'a\\') < (s.indexOf(\\'b\\') != -1 ? s.indexOf(\\'b\\') : Integer.MAX_VALUE);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2072302,
                "title": "simple-code-and-easy-to-understand",
                "content": "***If you have any questions regard to my solution, feel free to ask.***\\n\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        if (!s.contains(\"b\") || !s.contains(\"a\")) // if s includes only the same letters, then no need to think about it\\n            return true;\\n\\n        int b = s.indexOf(\"b\");       // finding the index of first b in a String\\n        String s1 = s.substring(b);   //substring s from b index\\n        if (!s1.contains(\"a\"))        // checking if substring contains a then return false otherwise true\\n            return true;\\n        \\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        if (!s.contains(\"b\") || !s.contains(\"a\")) // if s includes only the same letters, then no need to think about it\\n            return true;\\n\\n        int b = s.indexOf(\"b\");       // finding the index of first b in a String\\n        String s1 = s.substring(b);   //substring s from b index\\n        if (!s1.contains(\"a\"))        // checking if substring contains a then return false otherwise true\\n            return true;\\n        \\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1687486,
                "title": "c-python-one-liner-solutions-0ms-faster-than-100",
                "content": "**C++ - 0 ms, Faster than 100%:**\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return (s.find(\"ba\") == string::npos);\\n    }\\n};\\n```\\n**Python:**\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "Python",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return (s.find(\"ba\") == string::npos);\\n    }\\n};\\n```\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1667687,
                "title": "easiest-c-solution",
                "content": "```\\nbool checkString(char * s){\\n    int i;\\n    \\n    for(i = 0; i < strlen(s) - 1; i++){\\n        if(s[i] == \\'b\\' && s[i + 1] == \\'a\\')\\n            return 0;\\n    }\\n    return 1;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nbool checkString(char * s){\\n    int i;\\n    \\n    for(i = 0; i < strlen(s) - 1; i++){\\n        if(s[i] == \\'b\\' && s[i + 1] == \\'a\\')\\n            return 0;\\n    }\\n    return 1;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1665876,
                "title": "rust-single-contains",
                "content": "```rust\\nimpl Solution {\\n    pub fn check_string(s: String) -> bool {\\n        !s.contains(\"ba\")\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn check_string(s: String) -> bool {\\n        !s.contains(\"ba\")\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1663208,
                "title": "c-108ms-s-contains-ba",
                "content": "\\n\\n```\\n    public bool CheckString(string s) => !s.Contains(\"ba\");\\n```\\n",
                "solutionTags": [],
                "code": "```\\n    public bool CheckString(string s) => !s.Contains(\"ba\");\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1662280,
                "title": "c-1-liner-fastest-and-shortest-solution",
                "content": "Simplifying the problem statement, we can say that we only need to check whether given string is **sorted** or not. \\nThe code is following.\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(), s.end());\\n    }\\n};\\n```\\nTime Complexity: O(s.length())\\nSpace Complexity: O(1)",
                "solutionTags": [
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(), s.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661227,
                "title": "c-2-one-liner-solutions-easy-100-fast",
                "content": "**Here is one liner code:**\\nJust find \"ba\" in the string\\n\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return (s.find(\"ba\")==string::npos);\\n    }\\n};\\n```\\n\\nAnother approach is to check whether string is sorted or not:\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```\\n\\n",
                "solutionTags": [
                    "C",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return (s.find(\"ba\")==string::npos);\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(),s.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661005,
                "title": "c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n        bool b=true;\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'a\\'&&b==false)\\n            {\\n                return false;\\n            }\\n            else if(s[i]==\\'b\\')\\n            {\\n                b=false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n        bool b=true;\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'a\\'&&b==false)\\n            {\\n                return false;\\n            }\\n            else if(s[i]==\\'b\\')\\n            {\\n                b=false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3344458,
                "title": "1-line-java-solution-with-explanation-0-ms-100-faster",
                "content": "# Approach\\nIf s does not contain \"ba\", then \"b\" does not precede \"a\" anywhere.\\nSo we just need to check if s contains the word \"ba\" or not\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3171510,
                "title": "c-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n\\n- Space complexity:$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0; i<s.size()-1; i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){return false;}\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0; i<s.size()-1; i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){return false;}\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3024895,
                "title": "with-explanation-0-ms-beats-100-very-easy",
                "content": "# Approach\\nThe idea is very simple\\nWe have to check if any \\'a\\' is appears after \\'b\\' or not.\\nif any \\'a\\' appears after \\'b\\' then simply return false else true;\\n\\n![image.png](https://assets.leetcode.com/users/images/972c7c3d-5bd4-429d-b56a-3cc00094ba49_1673270322.7334535.png)\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nHere we are just iterating the whole string once only \\nSo the Time complexity will be O(n);\\n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nWe are not using any extra String so space complexity will be O(1);\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++){\\n            if(s.charAt(i)==\\'b\\'&& s.charAt(i+1)==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++){\\n            if(s.charAt(i)==\\'b\\'&& s.charAt(i+1)==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2905649,
                "title": "python3-code",
                "content": "# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return not \"ba\" in s\\n```\\n\\n![image.png](https://assets.leetcode.com/users/images/8f7ebd71-d898-4b65-ab41-464f079af573_1670889020.4467058.png)\\n![image.png](https://assets.leetcode.com/users/images/1d14d26b-35c0-4246-9da3-8cd8a2e7925b_1670889065.1319807.png)\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return not \"ba\" in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2867344,
                "title": "simple-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n       for(int i=1;i<s.size();i++) {\\n           if(s[i-1]==\\'b\\' and s[i]==\\'a\\')return false;\\n       }\\n    \\n    return true;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n       for(int i=1;i<s.size();i++) {\\n           if(s[i-1]==\\'b\\' and s[i]==\\'a\\')return false;\\n       }",
                "codeTag": "Java"
            },
            {
                "id": 2789207,
                "title": "all-a-s-appears-before-all-b-s",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.length();\\n        int i=0;\\n        while(i<n)\\n        {\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n            {\\n                return false;\\n            }\\n         i++;\\n        }\\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "String"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.length();\\n        int i=0;\\n        while(i<n)\\n        {\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n            {\\n                return false;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2614550,
                "title": "simple-python-solution-3-lines",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'a\\' in s:\\n            return \\'b\\' not in s[:s.rindex(\\'a\\')]\\n        return True",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'a\\' in s:\\n            return \\'b\\' not in s[:s.rindex(\\'a\\')]\\n        return True",
                "codeTag": "Java"
            },
            {
                "id": 2371820,
                "title": "javascript-solution-simplest-loop-and-conditional",
                "content": "```\\nvar checkString = function(s) {\\n  \\n  for (let i = 0; i < s.length; i++) {\\n    if (s[i] > s[i+1]) return false\\n  }\\n\\n  return true\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkString = function(s) {\\n  \\n  for (let i = 0; i < s.length; i++) {\\n    if (s[i] > s[i+1]) return false\\n  }\\n\\n  return true\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2345850,
                "title": "c-easy-simple-0ms",
                "content": "Easy Solution \\uD83D\\uDCAF\\nWe will maintain count of b in B.\\nAt any point if B >= 1 and we encounter \\'a\\', that means there is an \\'a\\' after \\'b\\'. We will return false.\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n\\n\\tint B = 0;\\n\\tfor(auto &c : s)\\n\\t{\\n\\t\\tif(B >= 1 and c == \\'a\\') return false;\\n\\t\\telse if(c == \\'b\\') B++;\\n\\t}\\n\\n\\treturn true;\\n}\\n};\\n\\n```\\n\\n**Do Upvote if you found it helpful \\uD83D\\uDC4D\\uD83D\\uDC4D**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n\\n\\tint B = 0;\\n\\tfor(auto &c : s)\\n\\t{\\n\\t\\tif(B >= 1 and c == \\'a\\') return false;\\n\\t\\telse if(c == \\'b\\') B++;\\n\\t}\\n\\n\\treturn true;\\n}\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2307909,
                "title": "0ms-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool SeenB = false;\\n\\t\\t/*\\n\\t\\t    SeenB is equal to true if we have seen letter \\'b\\' before\\n\\t\\t\\tAt first it is false\\n\\t\\t*/\\n        for (int i = 0; i < s.size(); ++i)\\n        {\\n            if (s[i] == \\'b\\')\\n                SeenB = true;\\n\\t\\t\\t\\t/*\\n\\t\\t\\t\\t    if the letter is \\'b\\'\\n\\t\\t\\t\\t\\tSeenB is true\\n\\t\\t\\t\\t*/\\n            else\\n                if (SeenB)\\n                    return false;\\n\\t\\t\\t\\t\\t/*\\n\\t\\t\\t\\t\\t    else if the letter is \\'a\\' and we have seen letter \\'b\\'\\n\\t\\t\\t\\t\\t\\treturn false\\n\\t\\t\\t\\t\\t*/\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool SeenB = false;\\n\\t\\t/*\\n\\t\\t    SeenB is equal to true if we have seen letter \\'b\\' before\\n\\t\\t\\tAt first it is false\\n\\t\\t*/\\n        for (int i = 0; i < s.size(); ++i)\\n        {\\n            if (s[i] == \\'b\\')\\n                SeenB = true;\\n\\t\\t\\t\\t/*\\n\\t\\t\\t\\t    if the letter is \\'b\\'\\n\\t\\t\\t\\t\\tSeenB is true\\n\\t\\t\\t\\t*/\\n            else\\n                if (SeenB)\\n                    return false;\\n\\t\\t\\t\\t\\t/*\\n\\t\\t\\t\\t\\t    else if the letter is \\'a\\' and we have seen letter \\'b\\'\\n\\t\\t\\t\\t\\t\\treturn false\\n\\t\\t\\t\\t\\t*/\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2303669,
                "title": "one-line",
                "content": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = function(s) {\\n    return s.includes(\\'ba\\') ? false : true\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = function(s) {\\n    return s.includes(\\'ba\\') ? false : true\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2273870,
                "title": "c-simple-solution",
                "content": "### Check My Easy Solution and feel free to ask any doubt regarding the same in the comment section..!\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i=0;\\n        for(i=0;i<s.length();i++)\\n        {\\n           if(s[i]==\\'b\\'){    // search for the first occurence of \\'b\\'\\n               break; \\n            }\\n        }\\n        for(int j=i;j<s.length();j++)  //starting from the first occurence of \\'b\\'.\\n        {\\n            if(s[j]==\\'a\\')         \\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i=0;\\n        for(i=0;i<s.length();i++)\\n        {\\n           if(s[i]==\\'b\\'){    // search for the first occurence of \\'b\\'\\n               break; \\n            }\\n        }\\n        for(int j=i;j<s.length();j++)  //starting from the first occurence of \\'b\\'.\\n        {\\n            if(s[j]==\\'a\\')         \\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2215321,
                "title": "0ms-c-simple-solution",
                "content": "**Approach:** We will find first occurance of \\'b\\' and find \\'a\\' after that index, if \\'a\\' is present return false else true.\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i,len=s.size();\\n        for(i=0;i<len;i++){\\n            if(s[i]==\\'b\\'){\\n                break;\\n            }\\n        }\\n        if(i==len)\\n            return true;\\n        return s.substr(i,len-i).find(\"a\")==-1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i,len=s.size();\\n        for(i=0;i<len;i++){\\n            if(s[i]==\\'b\\'){\\n                break;\\n            }\\n        }\\n        if(i==len)\\n            return true;\\n        return s.substr(i,len-i).find(\"a\")==-1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2143230,
                "title": "c-solution-essy-to-understand",
                "content": "**bool checkString(string s) {\\n        bool flag=false;\\n        for(int i=0; i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                flag=true;\\n            if(flag==true && s[i]==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }**",
                "solutionTags": [
                    "C"
                ],
                "code": "**bool checkString(string s) {\\n        bool flag=false;\\n        for(int i=0; i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                flag=true;\\n            if(flag==true && s[i]==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }**",
                "codeTag": "Unknown"
            },
            {
                "id": 1934770,
                "title": "one-liner",
                "content": "class Solution {\\n    public boolean checkString(String s) {\\n        \\n        return !s.contains(\"ba\");\\n        \\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public boolean checkString(String s) {\\n        \\n        return !s.contains(\"ba\");\\n        \\n    }",
                "codeTag": "Java"
            },
            {
                "id": 1845863,
                "title": "c-100-fast-and-small-code",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1780510,
                "title": "simple-cpp-solution-easy-to-understand-using-for-loop-using-sorting",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i = 0; \\n        for(i = 0 ; i < s.size() ; i++){\\n            if(s[i]==\\'b\\') // Finding the first \\'b\\' character\\n                break;\\n        }\\n        for(;i<s.size();i++){\\n            if(s[i]==\\'a\\') // If there is any \\'a\\' character then it returns false\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\nUsing Sorting\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string copy = s; \\n        sort(s.begin() , s.end());\\n        if(s==copy)\\n            return true;\\n        return false;\\n    }\\n};\\n/* Note : This can also be replaced as - \\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n   return is_sorted(s.begin() , s.end()); // If the string is sorted  it returns true , which means every character \\'b\\' appears after \\'a\\' only.\\n    }\\n};*/\\n```\\n**Please upvote if you find this helpful**\\n*Thank You*",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i = 0; \\n        for(i = 0 ; i < s.size() ; i++){\\n            if(s[i]==\\'b\\') // Finding the first \\'b\\' character\\n                break;\\n        }\\n        for(;i<s.size();i++){\\n            if(s[i]==\\'a\\') // If there is any \\'a\\' character then it returns false\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string copy = s; \\n        sort(s.begin() , s.end());\\n        if(s==copy)\\n            return true;\\n        return false;\\n    }\\n};\\n/* Note : This can also be replaced as - \\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n   return is_sorted(s.begin() , s.end()); // If the string is sorted  it returns true , which means every character \\'b\\' appears after \\'a\\' only.\\n    }\\n};*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1774066,
                "title": "python3-1-line",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \\'ba\\' not in s\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \\'ba\\' not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1754076,
                "title": "c-solution-check-if-all-a-s-appears-before-all-b-s",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool flag = true;\\n        int firstIndex = -1;\\n        \\n        for(int i = 0 ; i < s.length() ; i++){\\n            if(s[i] == \\'b\\'){\\n                firstIndex = i;\\n                break;\\n            }\\n        }\\n        for(int i = firstIndex ; i < s.length() ; i++){\\n            if(s[i] == \\'a\\'){\\n                flag = false;\\n                break;\\n            }\\n        }\\n        return flag;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool flag = true;\\n        int firstIndex = -1;\\n        \\n        for(int i = 0 ; i < s.length() ; i++){\\n            if(s[i] == \\'b\\'){\\n                firstIndex = i;\\n                break;\\n            }\\n        }\\n        for(int i = firstIndex ; i < s.length() ; i++){\\n            if(s[i] == \\'a\\'){\\n                flag = false;\\n                break;\\n            }\\n        }\\n        return flag;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1683623,
                "title": "python3-runtime-32ms-faster-than-84-98-memory-14-3mb-less-than-39-57",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'ba\\' in s:\\n            return False\\n        else:\\n            return True\\t\\t\\t\\n```",
                "solutionTags": [
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'ba\\' in s:\\n            return False\\n        else:\\n            return True\\t\\t\\t\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1663244,
                "title": "kotlin-one-liner",
                "content": "```\\nclass Solution {\\n    fun checkString(s: String): Boolean = \"ba\" !in s \\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun checkString(s: String): Boolean = \"ba\" !in s \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661991,
                "title": "java-easy-o-n",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int loA = -1; //last occurence of \\'A\\'\\n        int foB = -1; //first occurence of \\'B\\'\\n        \\n        for(int i = 0 ; i < s.length() ; i++){\\n            if(s.charAt(i) == \\'a\\'){\\n                loA = i;\\n            }\\n            if(s.charAt(i) == \\'b\\' && foB == -1){\\n                foB = i;    \\n            }\\n            \\n        }\\n        if(loA == -1 || foB == -1) return true;\\n        \\n        return loA < foB; //according to the problem statement \\'A\\' should occur before \\'B\\'\\n    }\\n}\\n```",
                "solutionTags": [
                    "Array",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int loA = -1; //last occurence of \\'A\\'\\n        int foB = -1; //first occurence of \\'B\\'\\n        \\n        for(int i = 0 ; i < s.length() ; i++){\\n            if(s.charAt(i) == \\'a\\'){\\n                loA = i;\\n            }\\n            if(s.charAt(i) == \\'b\\' && foB == -1){\\n                foB = i;    \\n            }\\n            \\n        }\\n        if(loA == -1 || foB == -1) return true;\\n        \\n        return loA < foB; //according to the problem statement \\'A\\' should occur before \\'B\\'\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661842,
                "title": "go-simple-code",
                "content": "```\\nfunc checkString(s string) bool {\\n    b := false\\n    for i := 0; i < len(s); i++ {\\n        if s[i] == \\'a\\' {\\n            if b {\\n                return false\\n            }\\n        } else {\\n            b = true\\n        }\\n    }\\n    return true\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfunc checkString(s string) bool {\\n    b := false\\n    for i := 0; i < len(s); i++ {\\n        if s[i] == \\'a\\' {\\n            if b {\\n                return false\\n            }\\n        } else {\\n            b = true\\n        }\\n    }\\n    return true\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1661317,
                "title": "python",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        found = False\\n        for c in s:\\n            if c == \\'b\\':\\n                found = True\\n            elif found:\\n                return False\\n        return True\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        found = False\\n        for c in s:\\n            if c == \\'b\\':\\n                found = True\\n            elif found:\\n                return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661278,
                "title": "simple-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string p=s;\\n        sort(s.begin(),s.end());\\n        if(s==p) return true;\\n        else return false;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string p=s;\\n        sort(s.begin(),s.end());\\n        if(s==p) return true;\\n        else return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1661098,
                "title": "simple-solution-counting-c-clean-code",
                "content": "**Idea :**\\n\\nSImple logic is to check if at any point, character \\'a\\' occur after \\'b\\'. \\n* If yes, then return false\\n# Code :\\n\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        int cntA = 0, cntB = 0;\\n        \\n        for(auto& i : s) {\\n            if(i == \\'a\\') {\\n                cntA++;\\n                if(cntB) return false;\\n            }\\n            else {\\n                cntB++;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```\\n\\n**Complexity :**\\n\\n* Time : `O(N)`\\n* Space : `O(1)`",
                "solutionTags": [
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        int cntA = 0, cntB = 0;\\n        \\n        for(auto& i : s) {\\n            if(i == \\'a\\') {\\n                cntA++;\\n                if(cntB) return false;\\n            }\\n            else {\\n                cntB++;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1660968,
                "title": "python-one-word-solution",
                "content": "```\\n    return s.find(\\'ba\\') < 0\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\n    return s.find(\\'ba\\') < 0\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3872757,
                "title": "check-if-all-a-s-appears-before-all-b-s-java-solution-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int ans = 1;\\n        for(int i=0; i<s.length()-1; i++){\\n            if(s.charAt(i) == \\'b\\' && s.charAt(i+1) == \\'a\\'){\\n                ans = 0;\\n            }\\n        }\\n        return ans == 1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int ans = 1;\\n        for(int i=0; i<s.length()-1; i++){\\n            if(s.charAt(i) == \\'b\\' && s.charAt(i+1) == \\'a\\'){\\n                ans = 0;\\n            }\\n        }\\n        return ans == 1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3742098,
                "title": "easy-and-simple-solution-in-java-and-c-beats-100-runtime",
                "content": "```Java []\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++)\\n        {\\n            if(s.charAt(i)==\\'b\\'&&s.charAt(i+1)==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```\\n```C++ []\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "String"
                ],
                "code": "```Java []\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++)\\n        {\\n            if(s.charAt(i)==\\'b\\'&&s.charAt(i+1)==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3742094,
                "title": "easy-and-0-ms-solution-in-java-and-c",
                "content": "```Java []\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++)\\n        {\\n            if(s.charAt(i)==\\'b\\'&&s.charAt(i+1)==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```\\n```C++ []\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "String"
                ],
                "code": "```Java []\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length()-1;i++)\\n        {\\n            if(s.charAt(i)==\\'b\\'&&s.charAt(i+1)==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3612891,
                "title": "much-easier-solution-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i) == \\'a\\') continue;\\n            else {\\n                while(i<s.length())\\n                {\\n                    if(s.charAt(i) == \\'b\\'){\\n                        i++;\\n                        continue;\\n                    } \\n                    else return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i) == \\'a\\') continue;\\n            else {\\n                while(i<s.length())\\n                {\\n                    if(s.charAt(i) == \\'b\\'){\\n                        i++;\\n                        continue;\\n                    } \\n                    else return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3600047,
                "title": "beats-100-killer-solution-c-most-easy-approach-ever-upvote-if-you-like",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n\\n        int n=s.length();\\n        for(int i=1;i<n;i++)\\n        {\\n            if(s[i-1]<=s[i])\\n            continue;\\n            else;\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n\\n        int n=s.length();\\n        for(int i=1;i<n;i++)\\n        {\\n            if(s[i-1]<=s[i])\\n            continue;\\n            else;\\n            return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3580842,
                "title": "o-n-check-if-all-a-s-appears-before-all-b-s-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i, flag=0;\\n        for(i=0 ; i<s.length() ; i++)\\n        {\\n            if(s[i]==\\'b\\' && flag==0)\\n                flag=1;\\n            else if(s[i]==\\'a\\' && flag==1)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\n![upvote new.jpg](https://assets.leetcode.com/users/images/baab400c-b1d2-4576-b8fb-441ea1da777e_1685507854.3757064.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int i, flag=0;\\n        for(i=0 ; i<s.length() ; i++)\\n        {\\n            if(s[i]==\\'b\\' && flag==0)\\n                flag=1;\\n            else if(s[i]==\\'a\\' && flag==1)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3422762,
                "title": "o-n-beats-100-explained",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nTraverse through the string.\\nMaintain a check if \\'b\\' has appeared before.\\nIf true, and \\'a\\' appears, immediately return false;\\nElse return true;\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool has_b_appeared = false;\\n\\n        for (int i = 0; i < s.size(); i++) {\\n            if (s[i] == \\'b\\' && !has_b_appeared) {\\n                has_b_appeared = true;\\n            }\\n\\n            if (s[i] == \\'a\\' && has_b_appeared) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool has_b_appeared = false;\\n\\n        for (int i = 0; i < s.size(); i++) {\\n            if (s[i] == \\'b\\' && !has_b_appeared) {\\n                has_b_appeared = true;\\n            }\\n\\n            if (s[i] == \\'a\\' && has_b_appeared) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3401350,
                "title": "java-simple-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n      char ch[]=s.toCharArray();\\n      for(int i=0;i<ch.length-1;i++){\\n       if(ch[i]==\\'b\\'&&ch[i+1]==\\'a\\')\\n       return false;\\n      } \\n      return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n      char ch[]=s.toCharArray();\\n      for(int i=0;i<ch.length-1;i++){\\n       if(ch[i]==\\'b\\'&&ch[i+1]==\\'a\\')\\n       return false;\\n      } \\n      return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3331589,
                "title": "c-3-line-simplest-solution-using-set",
                "content": "```\\nbool checkString(string s) {\\n        set<char> a;\\n        for(auto i:s){\\n            if(a.empty() || i==\\'b\\') a.insert(i);\\n            if(i==\\'a\\' && a.find(\\'b\\')!=a.end()) return false;\\n            else(a.insert(i));\\n        }\\n        return true;\\n    }\\n```",
                "solutionTags": [
                    "C",
                    "Ordered Set"
                ],
                "code": "```\\nbool checkString(string s) {\\n        set<char> a;\\n        for(auto i:s){\\n            if(a.empty() || i==\\'b\\') a.insert(i);\\n            if(i==\\'a\\' && a.find(\\'b\\')!=a.end()) return false;\\n            else(a.insert(i));\\n        }\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3277257,
                "title": "oneliner-python3",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return (s.count(\\'ba\\')) < 1\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return (s.count(\\'ba\\')) < 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3205681,
                "title": "beats-100-basic-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nbreak when you see first b , and say false if see any a after that\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int j=0;\\n        int i=0;\\n        for(;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n              j=i;\\n            break;  \\n            }\\n            \\n        }\\n        if(i==s.size())\\n        {\\n            return true;\\n        }\\n        cout<<j<<endl;\\n        for( ;j<s.size();j++)\\n        {\\n            if(s[j]==\\'a\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int j=0;\\n        int i=0;\\n        for(;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n              j=i;\\n            break;  \\n            }\\n            \\n        }\\n        if(i==s.size())\\n        {\\n            return true;\\n        }\\n        cout<<j<<endl;\\n        for( ;j<s.size();j++)\\n        {\\n            if(s[j]==\\'a\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n        \\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3201763,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3198238,
                "title": "c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n    int count = 0;\\n    for (int i = 0; i < s.size(); i++)\\n    {\\n        if (s[i] == \\'a\\')\\n        {\\n            count++;\\n        }\\n    }\\n    string As(count, \\'a\\');\\n    bool ans = true;\\n    if (s.find(As) != 0)\\n        ans = false;\\n    else\\n        ans = true;\\n        \\n    return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n    int count = 0;\\n    for (int i = 0; i < s.size(); i++)\\n    {\\n        if (s[i] == \\'a\\')\\n        {\\n            count++;\\n        }\\n    }\\n    string As(count, \\'a\\');\\n    bool ans = true;\\n    if (s.find(As) != 0)\\n        ans = false;\\n    else\\n        ans = true;\\n        \\n    return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3132724,
                "title": "easy-to-understand-c-solution-in-just-one-line",
                "content": "# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(), s.end());\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return is_sorted(s.begin(), s.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3062006,
                "title": "python3-easy-and-simple-solution",
                "content": "# **Please \\u2191(upvote) if you like the solution.**\\n# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        for i in range(len(s)):\\n            if s[i]==\\'b\\':\\n                if \\'a\\' in s[i+1:]:\\n                    return False\\n                return True\\n            elif \\'b\\' not in s:\\n                return True        \\n```",
                "solutionTags": [
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        for i in range(len(s)):\\n            if s[i]==\\'b\\':\\n                if \\'a\\' in s[i+1:]:\\n                    return False\\n                return True\\n            elif \\'b\\' not in s:\\n                return True        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3054519,
                "title": "c-fast-few-lines-or-1-liner-70ms-98",
                "content": "# Code\\n```\\npublic class Solution {\\n    public bool CheckString(string s) \\n    {\\n       for(var i=1; i < s.Length; i++) \\n       {\\n           if(s[i]==\\'a\\' && s[i-1]==\\'b\\') return false;\\n       }\\n\\n       return true;\\n    }\\n}\\n```\\n# 1-liner\\n```\\npublic class Solution {\\n    public bool CheckString(string s) => !s.Contains(\"ba\");\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public bool CheckString(string s) \\n    {\\n       for(var i=1; i < s.Length; i++) \\n       {\\n           if(s[i]==\\'a\\' && s[i-1]==\\'b\\') return false;\\n       }\\n\\n       return true;\\n    }\\n}\\n```\n```\\npublic class Solution {\\n    public bool CheckString(string s) => !s.Contains(\"ba\");\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3050817,
                "title": "0ms-with-100-beats-2-lines-code-simple-and-short",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\'&&s[i+1]==\\'a\\')\\n            return false;\\n        }\\n        return true;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2954331,
                "title": "crisp-n-clear-o-n-javascript-memory-99-31-meaningful-vars",
                "content": "# Complexity\\n- Time complexity:\\nO(n) || 90.63%\\n\\n- Space complexity:\\nO(1) || 99.31%\\n\\n# Code\\n```\\nvar checkString = function (str) {\\n    let hasBEncountered = false;\\n    for (let index = 0; index < str.length; index++) {\\n        if (hasBEncountered && str[index] === \\'a\\') {\\n            return false;\\n        }\\n        if (str[index] === \\'b\\') {\\n            hasBEncountered = true;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkString = function (str) {\\n    let hasBEncountered = false;\\n    for (let index = 0; index < str.length; index++) {\\n        if (hasBEncountered && str[index] === \\'a\\') {\\n            return false;\\n        }\\n        if (str[index] === \\'b\\') {\\n            hasBEncountered = true;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2831049,
                "title": "2124-simple-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]>s[i+1]) return 0;\\n        }\\n        return 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size()-1;i++)\\n        {\\n            if(s[i]>s[i+1]) return 0;\\n        }\\n        return 1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809958,
                "title": "c-100-fast-easy-to-understand",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.length();\\n        for(int i=0;i<n-1;i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.length();\\n        for(int i=0;i<n-1;i++){\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2742654,
                "title": "0-ms-12-lines-solution",
                "content": "```\\nfunc checkString(s string) bool {\\n    foundB := false\\n    for _, char := range s {\\n        if char == \\'b\\' {\\n            foundB = true\\n        }\\n        if foundB && char == \\'a\\' {\\n            return false\\n        }\\n    }\\n    return true\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc checkString(s string) bool {\\n    foundB := false\\n    for _, char := range s {\\n        if char == \\'b\\' {\\n            foundB = true\\n        }\\n        if foundB && char == \\'a\\' {\\n            return false\\n        }\\n    }\\n    return true\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2725389,
                "title": "python3-o-n-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n- O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        c=s[0]\\n        if s[0]==\\'b\\' and \\'a\\'  in s:\\n            return False\\n        n=len(s)\\n        for i in range(n):\\n            if c==s[i]:\\n                continue\\n            elif c in s[i+1:]:\\n                return False\\n        return True\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        c=s[0]\\n        if s[0]==\\'b\\' and \\'a\\'  in s:\\n            return False\\n        n=len(s)\\n        for i in range(n):\\n            if c==s[i]:\\n                continue\\n            elif c in s[i+1:]:\\n                return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2688769,
                "title": "100-faster-cpp-colution",
                "content": "```\\nclass Solution {\\n   public:\\n    bool checkString(string s) {\\n        int len = s.length(), i;\\n        for (i = 0; i < len; i++)\\n            if (s[i] == \\'b\\') break;\\n\\n        while (i < len) {\\n            if (s[i] == \\'a\\') return false;\\n            i++;\\n        }\\n        return true;\\n    }\\n};```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\n   public:\\n    bool checkString(string s) {\\n        int len = s.length(), i;\\n        for (i = 0; i < len; i++)\\n            if (s[i] == \\'b\\') break;\\n\\n        while (i < len) {\\n            if (s[i] == \\'a\\') return false;\\n            i++;\\n        }\\n        return true;\\n    }\\n};```",
                "codeTag": "Java"
            },
            {
                "id": 2673314,
                "title": "java",
                "content": "```\\n\\nclass Solution {\\n    public boolean checkString(String s) {\\n       return !s.contains(\"ba\"); \\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n\\nclass Solution {\\n    public boolean checkString(String s) {\\n       return !s.contains(\"ba\"); \\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2593422,
                "title": "c-sol-0ms-100-fast",
                "content": "```\\n\\nclass Solution {\\npublic:\\n\\n    bool checkString(string s) {\\n\\t\\n         ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        cout.tie(NULL);\\n\\t\\t\\n       for(int i=0;i<s.size();i++){\\n           if(i+1<s.size())\\n               if(s[i]==\\'b\\'&&s[i+1]==\\'a\\') return false;\\n       }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\nclass Solution {\\npublic:\\n\\n    bool checkString(string s) {\\n\\t\\n         ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        cout.tie(NULL);\\n\\t\\t\\n       for(int i=0;i<s.size();i++){\\n           if(i+1<s.size())\\n               if(s[i]==\\'b\\'&&s[i+1]==\\'a\\') return false;\\n       }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2592661,
                "title": "c-solution-easy-0ms-100-fast",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        cout.tie(NULL);\\n        \\n        int flag=0;\\n        for(int i=s.length()-1;i>=0;i--){\\n            if(s[i]==\\'a\\') flag=1;\\n            if(flag && s[i]==\\'b\\') return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        cout.tie(NULL);\\n        \\n        int flag=0;\\n        for(int i=s.length()-1;i>=0;i--){\\n            if(s[i]==\\'a\\') flag=1;\\n            if(flag && s[i]==\\'b\\') return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2566599,
                "title": "2124-check-if-all-a-s-appears-before-all-b-s",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'ba\\' in s:\\n            return False\\n        else:\\n            return True\\n```",
                "solutionTags": [
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \\'ba\\' in s:\\n            return False\\n        else:\\n            return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2523295,
                "title": "two-o-n-time-java-solutions",
                "content": "Solution 1:\\n\\n```\\n\\nclass Solution {\\n    public boolean checkString(String s) \\n    {\\n        for(int i=1; i<s.length(); i++)\\n        {\\n            if(s.charAt(i-1) == \\'b\\' && s.charAt(i) == \\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n\\n```\\n\\nSolution 2:\\n\\n```\\n\\nclass Solution {\\n    public boolean checkString(String s) \\n    {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\n\\nclass Solution {\\n    public boolean checkString(String s) \\n    {\\n        for(int i=1; i<s.length(); i++)\\n        {\\n            if(s.charAt(i-1) == \\'b\\' && s.charAt(i) == \\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n\\n```\n```\\n\\nclass Solution {\\n    public boolean checkString(String s) \\n    {\\n        return !s.contains(\"ba\");\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2516910,
                "title": "c-simplest-5-liner-explained",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n\\t//to check if a appears after a certain position\\n        int pos=99999;\\n        for(int i=0;i<s.length();i++)\\n        {\\n\\t\\t//first position of b is stored\\n            if(s[i]==\\'b\\')\\n                pos=i;\\n\\t\\t//a must not come after this position\\n            if(s[i]==\\'a\\'&&i>pos)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n\\t//to check if a appears after a certain position\\n        int pos=99999;\\n        for(int i=0;i<s.length();i++)\\n        {\\n\\t\\t//first position of b is stored\\n            if(s[i]==\\'b\\')\\n                pos=i;\\n\\t\\t//a must not come after this position\\n            if(s[i]==\\'a\\'&&i>pos)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2479798,
                "title": "java-solution-very-easy",
                "content": "##### Please upvote!\\n\\n```\\n// To basically check if character string is sorted\\n\\nclass Solution {\\n    public boolean checkString(String s) {\\n        \\n        for (int i = 1; i < s.length(); i++) {\\n            if (s.charAt(i) < s.charAt(i - 1)) {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n\\n// TC: O(n), SC: O(1)\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// To basically check if character string is sorted\\n\\nclass Solution {\\n    public boolean checkString(String s) {\\n        \\n        for (int i = 1; i < s.length(); i++) {\\n            if (s.charAt(i) < s.charAt(i - 1)) {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n\\n// TC: O(n), SC: O(1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2448641,
                "title": "java-solution-1ms-runtime-easy-to-understand",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        boolean b = true;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'b\\') b = false;\\n            if (!b) {\\n                if (s.charAt(i) == \\'a\\') {\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;  \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        boolean b = true;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'b\\') b = false;\\n            if (!b) {\\n                if (s.charAt(i) == \\'a\\') {\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2373809,
                "title": "java-easy-short-solution-begineer-friendly-approach-2",
                "content": "```\\npublic boolean checkString(String s) {\\n    // 2nd Approach\\n    for (int i = 1; i < s.length(); ++i) {\\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') {\\n                 return false;\\n             }\\n    }\\n      return true;\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic boolean checkString(String s) {\\n    // 2nd Approach\\n    for (int i = 1; i < s.length(); ++i) {\\n            if (s.charAt(i - 1) == \\'b\\' && s.charAt(i) == \\'a\\') {\\n                 return false;\\n             }\\n    }\\n      return true;\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 2349908,
                "title": "c-easiest-solution-0ms-o-n",
                "content": "//We will use a bool variable CHECK which will tell that if we have passed through b or not \\n\\n//Now if CHECK is true and we are passing through a then return false\\n\\n\\n\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool check = false;\\n        \\n        for(int i = 0 ; i< s.length() ; i++)\\n        {\\n            if(check && s[i] == \\'a\\')\\n                return false;\\n            if(s[i] == \\'b\\')\\n                check = true;\\n        }\\n        \\n        return true;\\n    }\\n};\\n\\n// Do upvote if you like the solution\\n\\n![image](https://assets.leetcode.com/users/images/44c78ba9-bd6f-4fdb-ab5c-0c79a3781ba1_1659087098.198588.png)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool check = false;\\n        \\n        for(int i = 0 ; i< s.length() ; i++)\\n        {\\n            if(check && s[i] == \\'a\\')\\n                return false;\\n            if(s[i] == \\'b\\')\\n                check = true;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2339828,
                "title": "c-easiest-solution-o-n",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n         \\n        bool ans = true;\\n        int len = s.size();\\n        \\n        for(int i=1; i<len; i++){\\n            if(s[i] == \\'a\\' && s[i-1] == \\'b\\' ){\\n                ans = false;\\n                break;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n         \\n        bool ans = true;\\n        int len = s.size();\\n        \\n        for(int i=1; i<len; i++){\\n            if(s[i] == \\'a\\' && s[i-1] == \\'b\\' ){\\n                ans = false;\\n                break;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2304757,
                "title": "fastest-java-solution-using-string-and-indexof-function-in-java",
                "content": "public boolean checkString(String s) {\\n        int index=s.indexOf(\\'b\\');\\n\\t\\tif(index!=-1) {\\n\\t\\t\\tfor(int i=index;i<s.length();i++) {\\n\\t\\t\\t\\tif(s.charAt(i)==\\'a\\') {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn true;\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "public boolean checkString(String s) {\\n        int index=s.indexOf(\\'b\\');\\n\\t\\tif(index!=-1) {\\n\\t\\t\\tfor(int i=index;i<s.length();i++) {\\n\\t\\t\\t\\tif(s.charAt(i)==\\'a\\') {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn true;\\n    }\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 2296832,
                "title": "java-easy-solution",
                "content": "If u find it useful then upvote\\n\\n\\tclass Solution {\\n\\t\\tpublic boolean checkString(String s) {\\n\\t\\t\\tfor(int i=1; i<s.length(); i++){\\n\\t\\t\\t\\tif(s.charAt(i-1)==\\'b\\' && s.charAt(i)==\\'a\\'){\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\n\\t\\t}\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\t\\tpublic boolean checkString(String s) {\\n\\t\\t\\tfor(int i=1; i<s.length(); i++){\\n\\t\\t\\t\\tif(s.charAt(i-1)==\\'b\\' && s.charAt(i)==\\'a\\'){\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 2228633,
                "title": "java-1-liner-using-indexof-and-lastindexof",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n      return s.lastIndexOf(\\'a\\') != -1 &&  s.indexOf(\\'b\\') != -1 ? s.lastIndexOf(\\'a\\') < s.indexOf(\\'b\\') : true;   \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n      return s.lastIndexOf(\\'a\\') != -1 &&  s.indexOf(\\'b\\') != -1 ? s.lastIndexOf(\\'a\\') < s.indexOf(\\'b\\') : true;   \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2207631,
                "title": "go-one-pass-easy-game-hehe",
                "content": "```\\nfunc checkString(s string) bool {\\n    firstOccurrenceOfB, lastOccurrenceOfA := -1, -1\\n    \\n    for i := 0; i < len(s); i++ {\\n        if s[i] == 97 {\\n            lastOccurrenceOfA = i\\n        } else {\\n            if firstOccurrenceOfB == -1 {\\n                firstOccurrenceOfB = i\\n            }\\n        }\\n    }\\n    \\n    if firstOccurrenceOfB == -1 || lastOccurrenceOfA == -1 {\\n        return true\\n    }\\n    \\n    return lastOccurrenceOfA < firstOccurrenceOfB\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C",
                    "JavaScript",
                    "Ruby",
                    "Go"
                ],
                "code": "```\\nfunc checkString(s string) bool {\\n    firstOccurrenceOfB, lastOccurrenceOfA := -1, -1\\n    \\n    for i := 0; i < len(s); i++ {\\n        if s[i] == 97 {\\n            lastOccurrenceOfA = i\\n        } else {\\n            if firstOccurrenceOfB == -1 {\\n                firstOccurrenceOfB = i\\n            }\\n        }\\n    }\\n    \\n    if firstOccurrenceOfB == -1 || lastOccurrenceOfA == -1 {\\n        return true\\n    }\\n    \\n    return lastOccurrenceOfA < firstOccurrenceOfB\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2205106,
                "title": "easy-javascript-solution",
                "content": "```\\nvar checkString = function(s) {\\n    if(!s.includes(\\'b\\') && s.includes(\\'a\\'))   return true; \\n        \\n    if(s.lastIndexOf(\\'a\\') < s.indexOf(\\'b\\'))   return true;  \\n    \\n   \\n    return false;\\n};\\n```\\n\\n\\n216 / 216 test cases passed.\\nStatus: Accepted\\nRuntime: 65 ms\\nMemory Usage: 42.3 MB",
                "solutionTags": [],
                "code": "```\\nvar checkString = function(s) {\\n    if(!s.includes(\\'b\\') && s.includes(\\'a\\'))   return true; \\n        \\n    if(s.lastIndexOf(\\'a\\') < s.indexOf(\\'b\\'))   return true;  \\n    \\n   \\n    return false;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2176314,
                "title": "c-solution-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool flag = false;\\n        \\n        for(char c : s) {\\n            if(c == \\'b\\') {\\n                flag = true;\\n                continue;\\n            }\\n            if(flag && c == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool flag = false;\\n        \\n        for(char c : s) {\\n            if(c == \\'b\\') {\\n                flag = true;\\n                continue;\\n            }\\n            if(flag && c == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2175664,
                "title": "java-simple-solution",
                "content": "just run a for loop to check if \\'b\\' appears before \\'a\\' if conditions satisfy return false else return true\\n\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n       for(int i = 1; i< s.length(); i++){\\n           if(s.charAt(i) == \\'a\\' && s.charAt(i-1) == \\'b\\'){\\n               return false;\\n           }\\n       }   \\n        return true;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public boolean checkString(String s) {\\n       for(int i = 1; i< s.length(); i++){\\n           if(s.charAt(i) == \\'a\\' && s.charAt(i-1) == \\'b\\'){\\n               return false;\\n           }",
                "codeTag": "Java"
            },
            {
                "id": 2112966,
                "title": "c-0-ms-two-pointer-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        if(s.size() == 1) return true;\\n        int l=0 , r=s.size()-1;\\n        while(l < r)\\n            if(s[l] == \\'a\\' and s[r] == \\'b\\') l++,r--;\\n            else if(s[l]==\\'a\\') l++;\\n            else if(s[r]==\\'b\\') r--;\\n            else break;\\n        \\n        return l >= r;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        if(s.size() == 1) return true;\\n        int l=0 , r=s.size()-1;\\n        while(l < r)\\n            if(s[l] == \\'a\\' and s[r] == \\'b\\') l++,r--;\\n            else if(s[l]==\\'a\\') l++;\\n            else if(s[r]==\\'b\\') r--;\\n            else break;\\n        \\n        return l >= r;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2089363,
                "title": "easy-cpp",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int count=0;\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'a\\')\\n            {\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n        {\\n            return true;\\n        }\\n        for(int i=0;i<count;i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n            \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int count=0;\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'a\\')\\n            {\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n        {\\n            return true;\\n        }\\n        for(int i=0;i<count;i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n            \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2063999,
                "title": "c-easy-100-faster-83-68-less-space",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n        bool c = false;\\n        for(int i=0; i<s.size(); i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                c=true;\\n            if(c && s[i]==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n// do upvote if u found it helpful ;)\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) \\n    {\\n        bool c = false;\\n        for(int i=0; i<s.size(); i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                c=true;\\n            if(c && s[i]==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n// do upvote if u found it helpful ;)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2049745,
                "title": "python-solution-2124",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \"b\" in s :\\n            b_index=s.index(\"b\")\\n            if ((\"a\" in s[b_index+1:]) or (\"A\" in s[b_index+1:])) :\\n                return False\\n            return True\\n        else :\\n            return True\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if \"b\" in s :\\n            b_index=s.index(\"b\")\\n            if ((\"a\" in s[b_index+1:]) or (\"A\" in s[b_index+1:])) :\\n                return False\\n            return True\\n        else :\\n            return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2024660,
                "title": "javascript-o-n-time-easy-solution",
                "content": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n*  @explain - if any of the a comes after b then return false.\\n */\\nvar checkString = function(s) {\\n    let encounterB = false;\\n    for(i = 0; i<s.length; i++){\\n// keep track that if we have any `b` in the string\\n        if(s.charAt(i) === \"b\"){\\n            encounterB = true;\\n        }\\n\\t\\t// if we already encountered a `b` and an `a` is coming after it then return false\\n        if(encounterB && s.charAt(i) === \"a\"){\\n            return false;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n*  @explain - if any of the a comes after b then return false.\\n */\\nvar checkString = function(s) {\\n    let encounterB = false;\\n    for(i = 0; i<s.length; i++){\\n// keep track that if we have any `b` in the string\\n        if(s.charAt(i) === \"b\"){\\n            encounterB = true;\\n        }\\n\\t\\t// if we already encountered a `b` and an `a` is coming after it then return false\\n        if(encounterB && s.charAt(i) === \"a\"){\\n            return false;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2016980,
                "title": "java-loops-easy-simple-ac-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n       \\n        for(int i=1;i<s.length();i++){\\n            if(s.charAt(i-1)==\\'b\\' && s.charAt(i)==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n       \\n        for(int i=1;i<s.length();i++){\\n            if(s.charAt(i-1)==\\'b\\' && s.charAt(i)==\\'a\\'){\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2005263,
                "title": "java-short-and-easy-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int i = s.indexOf(\"b\");\\n        if(i == -1)return true;\\n        for(i = s.indexOf(\"b\"); i < s.length(); i++){\\n            if(s.charAt(i) == \\'a\\')return false;\\n        }\\n        return true;\\n    }\\n}\\n\\n// Runtime: 1 ms, faster than 73.03% of Java online submissions for Check if All A\\'s Appears Before All B\\'s.\\n// Memory Usage: 42 MB, less than 59.29% of Java online submissions for Check if All A\\'s Appears Before All B\\'s.\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int i = s.indexOf(\"b\");\\n        if(i == -1)return true;\\n        for(i = s.indexOf(\"b\"); i < s.length(); i++){\\n            if(s.charAt(i) == \\'a\\')return false;\\n        }\\n        return true;\\n    }\\n}\\n\\n// Runtime: 1 ms, faster than 73.03% of Java online submissions for Check if All A\\'s Appears Before All B\\'s.\\n// Memory Usage: 42 MB, less than 59.29% of Java online submissions for Check if All A\\'s Appears Before All B\\'s.\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1990749,
                "title": "python3-solution-with-index",
                "content": "class Solution:\\n    def checkString(self, s: str) -> bool:\\n        a_ = [i for i in s]\\n        if len(set(s)) < 2:\\n               return True\\n        b_ = a_.index(\\'b\\')\\n        for i in range(b_+1, len(a_)):\\n               if a_[i] == \\'a\\':\\n                    return False\\n        return True",
                "solutionTags": [],
                "code": "class Solution:\\n    def checkString(self, s: str) -> bool:\\n        a_ = [i for i in s]\\n        if len(set(s)) < 2:\\n               return True\\n        b_ = a_.index(\\'b\\')\\n        for i in range(b_+1, len(a_)):\\n               if a_[i] == \\'a\\':\\n                    return False\\n        return True",
                "codeTag": "Java"
            },
            {
                "id": 1989862,
                "title": "python-easy-solution",
                "content": "Just check if the array is non-decreasing\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        previous_char = s[0]\\n        for i in s[1:]:\\n            if i >= previous_char:\\n                previous_char = i\\n            else:\\n                return False\\n        return True\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        previous_char = s[0]\\n        for i in s[1:]:\\n            if i >= previous_char:\\n                previous_char = i\\n            else:\\n                return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1934132,
                "title": "java-easy-consice",
                "content": "```\\n// just check if any \"a\" is present after first \"b\"\\nclass Solution {\\n    public boolean checkString(String s) {\\n        \\n        if (s.indexOf(\\'b\\') < s.lastIndexOf(\\'a\\') && s.indexOf(\\'b\\') >= 0) {\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// just check if any \"a\" is present after first \"b\"\\nclass Solution {\\n    public boolean checkString(String s) {\\n        \\n        if (s.indexOf(\\'b\\') < s.lastIndexOf(\\'a\\') && s.indexOf(\\'b\\') >= 0) {\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1931813,
                "title": "python-3-solution-beats-98",
                "content": "class Solution:\\n    def checkString(self, s: str) -> bool:\\n        \\n        seen = \"a\"\\n\\n        for ch in s:\\n\\n            if ch == \"b\":\\n                seen = \"b\"\\n\\n            if ch == \"a\" and seen == \"b\":\\n                return False\\n\\n        return True",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n    def checkString(self, s: str) -> bool:\\n        \\n        seen = \"a\"\\n\\n        for ch in s:\\n\\n            if ch == \"b\":\\n                seen = \"b\"\\n\\n            if ch == \"a\" and seen == \"b\":\\n                return False\\n\\n        return True",
                "codeTag": "Java"
            },
            {
                "id": 1911238,
                "title": "java-100-faster-and-99-in-space",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        boolean b = false;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'b\\') {\\n                b = true;\\n            }\\n            if (b && s.charAt(i) == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        boolean b = false;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'b\\') {\\n                b = true;\\n            }\\n            if (b && s.charAt(i) == \\'a\\') {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1853378,
                "title": "simple-javascript-java-python-and-c-solution",
                "content": "**Javascript Solution**\\n```\\nvar checkString = function(s) {\\n    for(let i=1;i<s.length;i++){\\n        if(s[i]==\\'a\\' && s[i-1]==\\'b\\')return false\\n    }\\n    return true;\\n};\\n```\\n**C++ Solution**\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=1;i<s.size();i++){\\n            if(s[i]==\\'a\\' && s[i-1]==\\'b\\')return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\n**Java Solution**\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=1;i<s.length();i++){\\n            if(s.charAt(i)==\\'a\\' && s.charAt(i-1)==\\'b\\')return false;\\n        }\\n        return true;\\n    }\\n}\\n```\\n**Python Solution**\\n```\\nclass Solution(object):\\n    def checkString(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"\\n        for i in range(1,len(s)):\\n            if s[i]==\\'a\\' and s[i-1]==\\'b\\':\\n                return False\\n        return True\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\nvar checkString = function(s) {\\n    for(let i=1;i<s.length;i++){\\n        if(s[i]==\\'a\\' && s[i-1]==\\'b\\')return false\\n    }\\n    return true;\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=1;i<s.size();i++){\\n            if(s[i]==\\'a\\' && s[i-1]==\\'b\\')return false;\\n        }\\n        return true;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=1;i<s.length();i++){\\n            if(s.charAt(i)==\\'a\\' && s.charAt(i-1)==\\'b\\')return false;\\n        }\\n        return true;\\n    }\\n}\\n```\n```\\nclass Solution(object):\\n    def checkString(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"\\n        for i in range(1,len(s)):\\n            if s[i]==\\'a\\' and s[i-1]==\\'b\\':\\n                return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1847049,
                "title": "c-easiest",
                "content": "int n=s.size();\\n        int x;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n                x=i;\\n                break;\\n            }\\n        }\\n        for(int i=x;i<n;i++)\\n        {\\n            if(s[i]==\\'a\\') return false;\\n        }\\n        \\n        return true;",
                "solutionTags": [],
                "code": "int n=s.size();\\n        int x;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'b\\')\\n            {\\n                x=i;\\n                break;\\n            }\\n        }\\n        for(int i=x;i<n;i++)\\n        {\\n            if(s[i]==\\'a\\') return false;\\n        }\\n        \\n        return true;",
                "codeTag": "Unknown"
            },
            {
                "id": 1827592,
                "title": "java-solution",
                "content": "```java\\nclass Solution {\\n    public boolean checkString(String s) {\\n        String m=\"\";\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'b\\')\\n            {\\n            m = s.substring(i,s.length());\\n            break;\\n            }\\n        }\\n        \\n        for(int i=0;i<m.length();i++)\\n        {\\n            if(m.charAt(i)==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public boolean checkString(String s) {\\n        String m=\"\";\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'b\\')\\n            {\\n            m = s.substring(i,s.length());\\n            break;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1825795,
                "title": "simple-o-n-solution-c",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.size();\\n        int t=0;\\n        for(int i=0;i<n;i++){\\n            if(s[i]==\\'b\\')\\n                t=1;\\n            else if(s[i]==\\'a\\'&& t==1)\\n                return false;      \\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.size();\\n        int t=0;\\n        for(int i=0;i<n;i++){\\n            if(s[i]==\\'b\\')\\n                t=1;\\n            else if(s[i]==\\'a\\'&& t==1)\\n                return false;      \\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1816424,
                "title": "c-easy-solution-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool seen_b = 0;\\n        for(int i = 0; i < s.size(); i++){\\n            if(s[i] == \\'b\\')\\n                seen_b = 1;\\n            if(s[i] == \\'a\\' && seen_b)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        bool seen_b = 0;\\n        for(int i = 0; i < s.size(); i++){\\n            if(s[i] == \\'b\\')\\n                seen_b = 1;\\n            if(s[i] == \\'a\\' && seen_b)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1816145,
                "title": "python-solution-in-one-line",
                "content": "first way:\\n```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return not \\'ba\\' in s\\n```\\n(Runtime: 59 ms, faster than 11.25% of Python3 online submissions for Check if All A\\'s Appears Before All B\\'s.\\nMemory Usage: 13.9 MB, less than 92.53% of Python3 online submissions for Check if All A\\'s Appears Before All B\\'s.)\\n\\nsecond way:\\n```\\n\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if s.count(\\'b\\') == 0 or s.count(\\'a\\') == 0:\\n            return True\\n        index = s.index(\\'b\\')\\n        while index < len(s):\\n            if s[index] == \\'a\\':\\n                return False\\n            index += 1\\n        return True\\n```\\n(Runtime: 47 ms, faster than 38.23% of Python3 online submissions for Check if All A\\'s Appears Before All B\\'s.\\nMemory Usage: 13.9 MB, less than 92.53% of Python3 online submissions for Check if All A\\'s Appears Before All B\\'s.)",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return not \\'ba\\' in s\\n```\n```\\n\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        if s.count(\\'b\\') == 0 or s.count(\\'a\\') == 0:\\n            return True\\n        index = s.index(\\'b\\')\\n        while index < len(s):\\n            if s[index] == \\'a\\':\\n                return False\\n            index += 1\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1812912,
                "title": "c-solution-easy-to-understand-solution",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n     bool flag = false;\\n        for(char ch : s)\\n        {\\n            if(ch==\\'a\\' and flag) return false;\\n            if(ch == \\'b\\' ) flag = true;\\n        }\\n    return true;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n     bool flag = false;\\n        for(char ch : s)\\n        {\\n            if(ch==\\'a\\' and flag) return false;\\n            if(ch == \\'b\\' ) flag = true;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1807281,
                "title": "c-very-easy-4-line-solution-100-faster-short-solution-o-logn",
                "content": "**Solution** :\\n\\n\\tpublic class Solution {\\n    public bool CheckString(string s)\\n        {\\n            bool aEnd = false;\\n            foreach(var x in s)\\n            {\\n                if (x == \\'b\\')\\n                    aEnd = true;\\n                if(x == \\'a\\' && aEnd)\\n                {\\n                    return false;\\n                }\\n            }\\n            return true;\\n        }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public bool CheckString(string s)\\n        {\\n            bool aEnd = false;\\n            foreach(var x in s)\\n            {\\n                if (x == \\'b\\')\\n                    aEnd = true;\\n                if(x == \\'a\\' && aEnd)\\n                {\\n                    return false;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 1796678,
                "title": "python-simple-o-n-o-1-solution",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        last_a_pos = 0\\n        last_b_pos = math.inf\\n        \\n        for indx, val in enumerate(s):\\n            if val == \\'a\\':\\n                last_a_pos = indx\\n            else:\\n                last_b_pos = indx\\n                \\n            if last_a_pos > last_b_pos:\\n                return False\\n        return True\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        last_a_pos = 0\\n        last_b_pos = math.inf\\n        \\n        for indx, val in enumerate(s):\\n            if val == \\'a\\':\\n                last_a_pos = indx\\n            else:\\n                last_b_pos = indx\\n                \\n            if last_a_pos > last_b_pos:\\n                return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1794067,
                "title": "c-solution-beats-100",
                "content": "```\\nbool checkString(string s) {\\n        bool flag=true;\\n        for(auto c: s){\\n            if(!flag && c==\\'a\\') return false;\\n            else if(c==\\'b\\'){\\n                flag=false;\\n            }\\n        }\\n        return true;\\n    }\\n```",
                "solutionTags": [
                    "C",
                    "String"
                ],
                "code": "```\\nbool checkString(string s) {\\n        bool flag=true;\\n        for(auto c: s){\\n            if(!flag && c==\\'a\\') return false;\\n            else if(c==\\'b\\'){\\n                flag=false;\\n            }\\n        }\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1785172,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int n = s.length();\\n        int i = 0;\\n        while(i<n-1) {\\n            if(s.charAt(i) == \\'b\\' && s.charAt(i+1) == \\'a\\') {\\n                return false;\\n            }\\n            i++;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int n = s.length();\\n        int i = 0;\\n        while(i<n-1) {\\n            if(s.charAt(i) == \\'b\\' && s.charAt(i+1) == \\'a\\') {\\n                return false;\\n            }\\n            i++;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1783542,
                "title": "c-solution",
                "content": "```\\npublic class Solution\\n{\\n    public bool CheckString(string s)\\n    {\\n        bool b = false;\\n        foreach (var c in s)\\n        {\\n            if (c == \\'b\\')\\n                b = true;\\n            else\\n            {\\n                if (b)\\n                    return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution\\n{\\n    public bool CheckString(string s)\\n    {\\n        bool b = false;\\n        foreach (var c in s)\\n        {\\n            if (c == \\'b\\')\\n                b = true;\\n            else\\n            {\\n                if (b)\\n                    return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1778312,
                "title": "python-easy-solution",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return \"ba\" not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1766167,
                "title": "c-most-easy-simple-beginner-friendly-4-liner",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans = s;\\n        sort( s.begin(), s.end() );\\n        for( int i = 0 ; i < s.length() ; i++ ) if( s[i] != ans[i] ) return false;\\n        return true;\\n    }\\n};\\n```\\n**SIMPLY JUST FIND IF THE STRING IS SORTED OR NOT , INBUILT \"is_sorted\" FUNCTION CAN ALSO BE USED**",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans = s;\\n        sort( s.begin(), s.end() );\\n        for( int i = 0 ; i < s.length() ; i++ ) if( s[i] != ans[i] ) return false;\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1758516,
                "title": "java-solution-easy-and-efficient",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int bPos = s.length();\\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == \\'b\\'){\\n                bPos = i;\\n                break;\\n            }\\n        }\\n        for(int i = bPos; i < s.length(); i++){\\n            if(s.charAt(i) == \\'a\\') return false;\\n        }\\n        return true;\\n    }\\n}\\n```\\nPlease **UPVOTE** if you find this solution helpful.\\nHappy Coding : )",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int bPos = s.length();\\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == \\'b\\'){\\n                bPos = i;\\n                break;\\n            }\\n        }\\n        for(int i = bPos; i < s.length(); i++){\\n            if(s.charAt(i) == \\'a\\') return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1756742,
                "title": "java-easiest-and-fastest-solution-runtime-0ms",
                "content": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int flag=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'b\\')\\n                flag=1;\\n            if(flag==1 && s.charAt(i)==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        int flag=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'b\\')\\n                flag=1;\\n            if(flag==1 && s.charAt(i)==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1739844,
                "title": "runtime-0-ms-faster-than-100-00-of-c-online-submissions",
                "content": "PLEASE UPVOTE!\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' && i<s.size()-1){\\n                if(s[i+1]==\\'a\\'){\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n};```\\n",
                "solutionTags": [
                    "C++",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' && i<s.size()-1){\\n                if(s[i+1]==\\'a\\'){\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n};```",
                "codeTag": "Java"
            },
            {
                "id": 1733246,
                "title": "easiest-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.size();\\n        for(int i=0;i<n-1;i++)\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\') return false;\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int n=s.size();\\n        for(int i=0;i<n-1;i++)\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\') return false;\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1732504,
                "title": "python-solution",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        flag = 0\\n        for l in s:\\n            if l == \\'b\\':\\n                flag = 1\\n            if l == \\'a\\' and flag:\\n                return False\\n        return True\\n    \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        flag = 0\\n        for l in s:\\n            if l == \\'b\\':\\n                flag = 1\\n            if l == \\'a\\' and flag:\\n                return False\\n        return True\\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1728936,
                "title": "easy-c-solution-0-ms-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string s1=\"\";\\n        s1=s;\\n        sort(s1.begin(),s1.end());\\n        if(s1==s){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        string s1=\"\";\\n        s1=s;\\n        sort(s1.begin(),s1.end());\\n        if(s1==s){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1723853,
                "title": "c-one-line",
                "content": "```\\npublic bool CheckString(string s) =>\\n       s.StartsWith(string.Concat(s.Where(x => x == \\'a\\')));\\n```",
                "solutionTags": [],
                "code": "```\\npublic bool CheckString(string s) =>\\n       s.StartsWith(string.Concat(s.Where(x => x == \\'a\\')));\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1718765,
                "title": "simple-solution-beginner-friendly-using-count",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n      \\n        int m=count(s.begin(),s.end(),\\'a\\');\\n        if(m==0)\\n            return true;\\n        else\\n            \\n        for(int i=0;i<m;i++)\\n        {\\n            if(s[i]!=\\'a\\')\\n                return false;\\n        }\\n            return true;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n      \\n        int m=count(s.begin(),s.end(),\\'a\\');\\n        if(m==0)\\n            return true;\\n        else\\n            \\n        for(int i=0;i<m;i++)\\n        {\\n            if(s[i]!=\\'a\\')\\n                return false;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1714333,
                "title": "beginner-friendly-java-solution",
                "content": "**Time Complexity : O(n)**\\n```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=1; i<s.length(); i++){\\n            if(s.charAt(i-1) == \\'b\\' && s.charAt(i) == \\'a\\')  return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkString(String s) {\\n        for(int i=1; i<s.length(); i++){\\n            if(s.charAt(i-1) == \\'b\\' && s.charAt(i) == \\'a\\')  return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1700336,
                "title": "c-0ms-time-taken-100-faster-than-all-solutions-for-this-problem",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        int flag=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                flag=1;\\n            \\n            if(flag==1)\\n                if(s[i]==\\'a\\')\\n                    return false;\\n        }\\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int flag=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'b\\')\\n                flag=1;\\n            \\n            if(flag==1)\\n                if(s[i]==\\'a\\')\\n                    return false;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1697600,
                "title": "c-just-find-ba",
                "content": "We have to check if every \\'a\\' appears before every \\'b\\'.\\nif its true then there will be no \\'ba\\' appearing in string.\\nSo just find \\'ba\\' and if found return false.\\n\\n```class Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        for(int i = 0 ; i < s.length() -1 ; i++){\\n            if(s[i] == \\'b\\' && s[i+1] == \\'a\\') return false;\\n        }\\n        return true;\\n    }\\n};\\n\\n\\n\\n",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        \\n        for(int i = 0 ; i < s.length() -1 ; i++){\\n            if(s[i] == \\'b\\' && s[i+1] == \\'a\\') return false;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1695488,
                "title": "c-1-line",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return s.find(\\'a\\', s.find(\\'b\\')) == string::npos;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        return s.find(\\'a\\', s.find(\\'b\\')) == string::npos;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1689073,
                "title": "python-one-liner",
                "content": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return False if \\'ba\\' in s else True\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkString(self, s: str) -> bool:\\n        return False if \\'ba\\' in s else True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1685048,
                "title": "c-one-liner-linq-and-using-for-loop",
                "content": "**With Linq**\\nSort => Compare => Return.\\n\\n` return s.Equals(String.Concat(s.OrderBy(c => c)));`\\n\\n**Without Linq**\\n```\\nfor (int i = 0; i < s.Length-1; i++)\\n{\\n\\t\\tif (s[i] == \\'b\\' && s[i+1] == \\'a\\')\\n\\t\\t{\\n\\t\\t\\treturn false;\\n\\t\\t}\\n}\\nreturn true;\\n```",
                "solutionTags": [],
                "code": "```\\nfor (int i = 0; i < s.Length-1; i++)\\n{\\n\\t\\tif (s[i] == \\'b\\' && s[i+1] == \\'a\\')\\n\\t\\t{\\n\\t\\t\\treturn false;\\n\\t\\t}\\n}\\nreturn true;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1681576,
                "title": "python-3-easy-1-liner-solution",
                "content": "```\\nclass Solution(object):\\n    def checkString(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"        \\n        return s==\\'\\'.join(sorted(s))\\n```\\t\\ncheck whether sorted string is same with original string",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def checkString(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"        \\n        return s==\\'\\'.join(sorted(s))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1679771,
                "title": "c-100-fast-0ms",
                "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n            {return false;\\n             break;\\n            }\\n        }\\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "C",
                    "String"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.size();i++)\\n        {\\n            if(s[i]==\\'b\\' && s[i+1]==\\'a\\')\\n            {return false;\\n             break;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1679552,
                "title": "c-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n       int flag =is_sorted(s.begin(),s.end());\\n        if(flag==1){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n```\\nIf you find any issue in understanding the solution then comment below, will try to help you.\\nIf you found my solution useful.\\nSo please do upvote and encourage me to document all leetcode problems\\uD83D\\uDE03\\nHappy Coding :)",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n       int flag =is_sorted(s.begin(),s.end());\\n        if(flag==1){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1678139,
                "title": "c-easy-100-faster-optimal",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' and s[i+1]==\\'a\\')\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n\\n\\n\\nPls upvote :)",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'b\\' and s[i+1]==\\'a\\')\\n                return false;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1676263,
                "title": "one-liner-javascript-solutions-with-explanation",
                "content": "### Simple solution\\n``` js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = function (s) {\\n    ans = true\\n    lookForA = false\\n    s.split(\\'\\').forEach(character => {\\n        if (character == \\'b\\') {\\n            lookForA = true\\n        }\\n        if (lookForA && character == \\'a\\') {\\n            ans = false\\n        }\\n    })\\n    return ans\\n};\\n```\\n- Break the string using `.split` so that we can use array functions like `map, reduce, forEach`\\n- Loop until no *B* character is found, once it is true start looking for *A*\\n- If any A is found after this point then return *false* else return the default value, *true*.\\n\\n### Second approach - Complicated one-liner\\n\\n``` js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = (s) => s.split(\\'\\').reduce(\\n    (previousValue, currentValue) => (previousValue == \\'b\\' && currentValue == \\'a\\') ? false : ((previousValue == false) ? false : currentValue)\\n)\\n```\\n\\n- Break the string using `.split` so that we can use `.reduce` \\n- Check if previous value is *B* and Current element in hand is a, if this is true even once, we want to return false else we want to continue the loop\\n- The else part of first ternary operator insures that `False` if any are propagated to all elements.\\n\\n### Third approach - Easy one liner\\n\\n```js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nconst checkString = s => s.indexOf(\"ba\") == -1;\\n```\\n\\n- Search the entire string for occurence of \"ba\" and return the response.\\n\\nPlease upvote if you find this helpful.\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "``` js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = function (s) {\\n    ans = true\\n    lookForA = false\\n    s.split(\\'\\').forEach(character => {\\n        if (character == \\'b\\') {\\n            lookForA = true\\n        }\\n        if (lookForA && character == \\'a\\') {\\n            ans = false\\n        }\\n    })\\n    return ans\\n};\\n```\n``` js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkString = (s) => s.split(\\'\\').reduce(\\n    (previousValue, currentValue) => (previousValue == \\'b\\' && currentValue == \\'a\\') ? false : ((previousValue == false) ? false : currentValue)\\n)\\n```\n```js\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nconst checkString = s => s.indexOf(\"ba\") == -1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1674965,
                "title": "c-solution-o-n-solution-beginner-friendly",
                "content": "``` Easy implementation stack. Time complexity is O(n).```\\n```\\nclass Solution {\\npublic:\\n    bool checkString(string str) {\\n           stack<char>s;              // Initialising  a stack\\n        int c=0;\\n        s.push(str[0]);                // Pushing the first element of the string.\\n        for(int i=1;i<str.length();i++)\\n        {\\n            if(s.empty())\\n                s.push(str[i]);\\n            else if(s.top()==\\'b\\' && str[i]==\\'a\\')\\n            {\\n                c++;\\n                s.pop();\\n            }\\n            else\\n                s.push(str[i]);\\n                \\n        }\\n        if(c>0)                   // If there is any \\'b\\' following \\'a\\' then the count c would be greater than 0 and we should return false.\\'\\n            return false;\\n        else\\n            return true;\\n    }\\n};\\n```\\n``` If you like my approach then hit the like button.```",
                "solutionTags": [],
                "code": "``` Easy implementation stack. Time complexity is O(n).```\n```\\nclass Solution {\\npublic:\\n    bool checkString(string str) {\\n           stack<char>s;              // Initialising  a stack\\n        int c=0;\\n        s.push(str[0]);                // Pushing the first element of the string.\\n        for(int i=1;i<str.length();i++)\\n        {\\n            if(s.empty())\\n                s.push(str[i]);\\n            else if(s.top()==\\'b\\' && str[i]==\\'a\\')\\n            {\\n                c++;\\n                s.pop();\\n            }\\n            else\\n                s.push(str[i]);\\n                \\n        }\\n        if(c>0)                   // If there is any \\'b\\' following \\'a\\' then the count c would be greater than 0 and we should return false.\\'\\n            return false;\\n        else\\n            return true;\\n    }\\n};\\n```\n``` If you like my approach then hit the like button.```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1649424,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1570738,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1732998,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1991967,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1781209,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1742670,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1733013,
                "content": [
                    {
                        "username": "hackro",
                        "content": "well the description isnt clear,\\n\\nGiven a string s consisting of only the characters \\'a\\' and \\'b\\', return true if every \\'a\\' appears before every \\'b\\' in the string. Otherwise, return false.\\n\\n\\nfollowing this logic, why `aaa` or `a` is true, why is TRUE when never appear the letter b?\\n\\n\\nmaybe the description could be change to \"if the letter b appear before letter a return false, with this change this case is contemplate\""
                    },
                    {
                        "username": "akshayaamar05",
                        "content": "# **Please Upvote if you find this post helpful :)**\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n<u><strong>COMPLEXITY:</strong></u>\\n\\n* **Time: O(n)**, where **n** is the length of given **string(s)**\\n* **Space: O(1)**, i.e. in-place\\n\\n<u><strong>BASIC IDEA:</strong></u>\\n\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If there is any `\\'a\\'` **after the first occurence of `\\'b\\'`**, then `return false` else `return true`.\\n\\n<u><strong>ALGORITHM:</strong></u>\\n* Start iterating the given `string(s)` and continue the iteration **until first occurence of** `\\'b\\'`.\\n* Now, **after getting the index of very first** `\\'b\\'`, continue the remaining iteration till the length of the string\\n\\t* if there is any occurence of `\\'a\\'` in the remaining string, then `return false`\\n\\t* else `return true`\\n\\n<u>**JAVA CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/9e5020a1-a350-42bc-a739-8129d2440f5f_1641492510.694592.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/Java/CheckifAllA\\'sAppearsBeforeAllB\\'s.java\"><u>JAVA CODE</u></a> &#9756;\\n\\n<u>**C++ CODE:**</u>\\n<img src = \"https://assets.leetcode.com/users/images/cbf1297a-dd52-4edb-afc2-f10168e867f8_1641492688.6872473.png\" width = \"95%\">\\n\\n**Do you want to copy and run the code?**\\n<a href = \"https://github.com/Akshaya-Amar/LeetCodeSolutions/blob/master/C++/CheckifAllA\\'sAppearsBeforeAllB\\'s.cpp\"><u>C++ CODE </u></a> &#9756;\\n\\n\\n<u><strong>Refer to the following github repsitory for more leetcode solutions<strong></u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please Upvote if you find this post helpful :)**"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        string ans=s;\\n        sort(ans.begin(),ans.end());\\n        return ans==s;\\n    }\\n};"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "Nice problem just need to check if b is found or not"
                    },
                    {
                        "username": "mayank18091999",
                        "content": "Best Solution O(N) time and O(1) space..\\n   bool checkString(string s) {\\n         bool flag=1;\\n          for(int i=0;i<s.size();i++){\\n              if(s[i]==\\'a\\'){\\n                  if(flag==0){\\n                      return 0;\\n                  }\\n                  continue;\\n              }else{\\n                  flag=0;\\n              }\\n          }\\n    return 1;\\n    }"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "2 pointer approach \\n\\nbool checkString(string s) {\\n        int i = 0;\\n        int j = s.length() - 1;\\n        while(i < j){\\n            if(s[i] == \\'b\\' && s[j] == \\'a\\')  return false;\\n            if(s[i] == \\'a\\')   i++;\\n            if(s[j] == \\'b\\')   j--;\\n        }\\n        return true;\\n\\n }"
                    },
                    {
                        "username": "Nitish-Devarshi",
                        "content": "class Solution {\\npublic:\\n    bool checkString(string s) {\\n        int a=0,b=0;\\n        int z=s.size();\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'a\\'){\\n                a=i;\\n                z--;\\n            }\\n        }\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'b\\'){\\n                b=i;\\n                break;\\n            }\\n        }\\n        if(z==0){\\n            return true;\\n        }\\n        return a<=b;\\n    }\\n};"
                    }
                ]
            }
        ]
    }
]