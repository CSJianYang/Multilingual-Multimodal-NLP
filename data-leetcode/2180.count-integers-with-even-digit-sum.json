[
    {
        "title": "Count Integers With Even Digit Sum",
        "question_content": "Given a positive integer num, return the number of positive integers less than or equal to num whose digit sums are even.\nThe digit sum of a positive integer is the sum of all its digits.\n&nbsp;\nExample 1:\n\nInput: num = 4\nOutput: 2\nExplanation:\nThe only integers less than or equal to 4 whose digit sums are even are 2 and 4.    \n\nExample 2:\n\nInput: num = 30\nOutput: 14\nExplanation:\nThe 14 integers less than or equal to 30 whose digit sums are even are\n2, 4, 6, 8, 11, 13, 15, 17, 19, 20, 22, 24, 26, and 28.\n\n&nbsp;\nConstraints:\n\n\t1 <= num <= 1000",
        "solutions": [
            {
                "id": 1784810,
                "title": "c-easy-to-understand-using-formula-with-some-explanation",
                "content": "We calculate the sum, and then apply formula (**we just need to check if the sum is even or odd**) to calculate the final answer. \\nI got the idea while checking the given examples in the description. Just try to check what will be the ouptut for 10, 20, 30, 40 etc:\\n10 = 2, 4, 6, 8 (4)\\n20 = 2, 4, 6, 8, 11, 13, 15, 17, 19, 20 (10)\\n30 = 2, 4, 6, 8, 11, 13, 15, 17, 19, 20, 22, 24, 26, and 28. (14)\\n...\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int temp = num, sum = 0;\\n        while (num > 0) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return sum % 2 == 0 ? temp / 2 : (temp - 1) / 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int temp = num, sum = 0;\\n        while (num > 0) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return sum % 2 == 0 ? temp / 2 : (temp - 1) / 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784711,
                "title": "python3-java-c-1-liners-o-length-num",
                "content": "**Brute force**:\\nIterate through all the numbers from 1 to num inclusive and check if the sum of the digits of each number in that range is divisible by 2. \\n<iframe src=\"https://leetcode.com/playground/jnt4pAME/shared\" frameBorder=\"0\" width=\"670\" height=\"280\"></iframe>\\n\\n\\n**Observation**:\\n```\\nIntegers:             [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\\nSums:                 [1, 2, 3, 4, 5, 6, 7, 8, 9,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10,  2,  3,  4,  5,  6]\\nSum is Even? :        [0, 1, 0, 1, 0, 1, 0, 1, 0,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  1,  0,  1,  0,  1]\\nCount(Even sums):     [0, 1, 1, 2, 2, 3, 3, 4, 4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9, 10, 10, 11, 11, 12]  \\n```\\nFor a `num` with even sum of its digits, count of Integers With Even Digit Sum less than or equal to `num` is `num`/2\\nFor a `num` with odd sum of its digits, count of Integers With Even Digit Sum less than or equal to `num` is (`num`-1)/2\\n\\n**Optimized solution:**\\n<iframe src=\"https://leetcode.com/playground/RdZeyXuk/shared\" frameBorder=\"0\" width=\"830\" height=\"190\"></iframe>\\n",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "C"
                ],
                "code": "```\\nIntegers:             [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\\nSums:                 [1, 2, 3, 4, 5, 6, 7, 8, 9,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10,  2,  3,  4,  5,  6]\\nSum is Even? :        [0, 1, 0, 1, 0, 1, 0, 1, 0,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  1,  0,  1,  0,  1]\\nCount(Even sums):     [0, 1, 1, 2, 2, 3, 3, 4, 4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9, 10, 10, 11, 11, 12]  \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1784735,
                "title": "c-brute-force-o-nlgn-time-or-formula-o-lgn-time",
                "content": "See my latest update in repo [LeetCode](https://github.com/lzl124631x/LeetCode)\\n\\n\\n## Solution 1.\\n\\n```cpp\\n// OJ: https://leetcode.com/contest/weekly-contest-281/problems/count-integers-with-even-digit-sum/\\n// Author: github.com/lzl124631x\\n// Time: O(NlgN)\\n// Space: O(1)\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i = 1; i <= num; ++i) {\\n            int n = i, sum = 0;\\n            while (n) {\\n                sum += n % 10;\\n                n /= 10;\\n            }\\n            ans += sum % 2 == 0;\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n## Solution 2. Pattern Finding\\n\\n`num` | 1 |2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|\\n--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--\\ndigit sum |1|2|3|4|5|6|7|8|9|1|2|3|4|5|6|7|8|9|10|2|3|4|5|6|7\\ndigit sum is even|0|1|0|1|0|1|0|1|0|0|1|0|1|0|1|0|1|0|0|1|0|1|0|1|0\\nanswer |0|1|1|2|2|3|3|4|4|4|5|5|6|6|7|7|8|8|9|10|10|11|11|12|12|\\n\\n\\nThe answer increments when the digit sum of `num` is even.\\n\\nWe can see that the answer is somewhat related to `num / 2` and `digitSum(num) % 2`. It turns out to be `(num - digitSum(num) % 2) / 2`.\\n\\n```cpp\\n// OJ: https://leetcode.com/problems/count-integers-with-even-digit-sum/\\n// Author: github.com/lzl124631x\\n// Time: O(lgN)\\n// Space: O(1)\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int sum = 0, tmp = num;\\n        while (num) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return (tmp - sum % 2) / 2;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```cpp\\n// OJ: https://leetcode.com/contest/weekly-contest-281/problems/count-integers-with-even-digit-sum/\\n// Author: github.com/lzl124631x\\n// Time: O(NlgN)\\n// Space: O(1)\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i = 1; i <= num; ++i) {\\n            int n = i, sum = 0;\\n            while (n) {\\n                sum += n % 10;\\n                n /= 10;\\n            }\\n            ans += sum % 2 == 0;\\n        }\\n        return ans;\\n    }\\n};\\n```\n```cpp\\n// OJ: https://leetcode.com/problems/count-integers-with-even-digit-sum/\\n// Author: github.com/lzl124631x\\n// Time: O(lgN)\\n// Space: O(1)\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int sum = 0, tmp = num;\\n        while (num) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return (tmp - sum % 2) / 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784826,
                "title": "java-o-1-solution-only-check-one-number",
                "content": "1. Edit: Easier Explanation:\\n\\t// Numbers\\n    **1, 2,** 3, 4, **5, 6**, 7, 8, **9, 10**, 11, 12, **13, 14**, 15, 16, **17, 18**, 19, 20, **21, 22**...\\n\\t// Digit sums, 1 represents odd and 0 represents even\\n\\t**1, 0,**   1, 0,   **1, 0**,   1, 0,   **1, 1,**   0, 1,     **0, 1,**   0, 1,  **0, 1,**  0, 0,  **1, 0**...\\n    \\n\\tFor any two adjacent numbers, the digit sum of one of them is even, another is odd except when an number % 10 == 0 (parities flip every 10 numbers). So the answer to this question is either num / 2 or (num - 1) / 2. Looking at the squence above, for every digit sum is odd (1), the answer is always (num - 1) / 2 (e.g. 14, 21) and for every digit sum is even (0), the answer is always num / 2. So we only need to check the digit sum of the last number.\\n\\t\\n\\tOptimized answer with bit opration, based on @Eleet_6IX\\'s optimization\\n\\t```\\n\\tpublic int countEven(int num) {\\n\\t\\t// Digit sum of the last number, we can get each digit this way sicne the range is [1, 1000]\\n\\t\\tint sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n\\n\\t\\t// Check the parity of the digit sum of the last number\\n\\t\\treturn (num - (sum & 1)) / 2;\\n\\t}\\n\\t```\\n\\n\\n2.  Original explaination and answer:\\n\\tFor every number % 10 != 0, its digit sum will always be the digit sum of its previous number + 1.\\n\\tFor every number % 10 == 0, its digit sum will always has the same parity with the digit sum of its previous number. e.g. 879 and 880, 8 + 7 + 9 = 24, 8 + 8 + 0 = 16\\n\\n\\tSo the order of parity reverts every 10 numbers.\\n\\tAnd The answer to this question is either num / 2 or (num - 1) / 2.\\n\\n\\tYou only need to check if both of the last number and the digits sum of the last number are even.\\n\\n\\tI feel there\\'re better answers but this\\'s the best I can come up with during the contest.\\n\\n\\t```\\n\\tpublic int countEven(int num) {\\n\\t\\t// Digit sum of the last number, we can get each digit this way sicne the range is [1, 1000]\\n\\t\\tint sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n\\n\\t\\t// Check if the last number and its digit sum are even\\n\\t\\treturn (num - 1) / 2 + (sum % 2 == 0 && num % 2 == 0 ? 1 : 0);\\n\\t}\\n\\t```",
                "solutionTags": [],
                "code": "```\\n\\tpublic int countEven(int num) {\\n\\t\\t// Digit sum of the last number, we can get each digit this way sicne the range is [1, 1000]\\n\\t\\tint sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n\\n\\t\\t// Check the parity of the digit sum of the last number\\n\\t\\treturn (num - (sum & 1)) / 2;\\n\\t}\\n\\t```\n```\\n\\tpublic int countEven(int num) {\\n\\t\\t// Digit sum of the last number, we can get each digit this way sicne the range is [1, 1000]\\n\\t\\tint sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n\\n\\t\\t// Check if the last number and its digit sum are even\\n\\t\\treturn (num - 1) / 2 + (sum % 2 == 0 && num % 2 == 0 ? 1 : 0);\\n\\t}\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1789009,
                "title": "2-approaches-with-proper-comments-explanation-o-logn-time-c",
                "content": "Implementation\\n\\n**Brute Force Approach\\nTime Complexity: O(NLogN)\\nSpace Complexity: O(1)\\nIdea: traversing from 1 to num, and generating the sum of the digits of each num, and checking whether they are even or odd, and counting**\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    // generating the sum of the digits of the number, if the sum is even return true, otherwise return false\\n    bool numIsEven(int num){\\n        int sum = 0;\\n        while(num){\\n            sum += num%10;\\n            num /= 10;\\n        }\\n        if(sum%2) return false;\\n        return true;   \\n    }\\n    \\n    int countEven(int num) {\\n        int cnt = 0;        \\n        // traversing from 1 to num, and generating the sum of the digits of each number, and checking whether they are even or odd\\n        for(int itr = 1; itr <= num; itr++){\\n            if(numIsEven(itr)) cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```\\n\\n\\n**Optimal Approach\\nTime Complexity: O(LogN)\\nSpace Complexity: O(1)**\\n\\n**Idea: Observe this pattern** \\n```\\n1) num = 6 = [2,4,6] => 3\\n2) num = 10 = [2,4,6,8] => 4\\n3) num = 15 = [2,4,6,8,11,13,15] => 7\\n4) num = 20 = [2,4,6,8,11,13,15,17,19,20] => 10\\n5) num = 27 = [2,4,6,8,11,13,15,17,19,20,22,24,26] => 13\\n```\\n\\nFrom this pattern we can observe one thing, if we are taking the sum of the digits of the num, and if that sum is even then we can directly divide our num by 2, and return the result, but if our sum if odd then we need to do (num-1)/2 to get the desired results.\\n\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        \\n        // creating a backup of num to use it later\\n        int numBackup = num;\\n        \\n        // generating the sum of the digits of the num\\n        int sum = 0;\\n        while(num){\\n            sum += num%10;\\n            num /= 10;\\n        }\\n        \\n        // if sum is odd, return (numBackup-1)/2 as per the pattern we found\\n        if(sum%2) return (numBackup-1)/2;\\n        \\n        // if sum is even, return numBackup/2\\n        else return numBackup/2;\\n    }\\n};\\n```\\nIf you find any issue in understanding the solution then comment below, will try to help you.\\nIf you found my solution useful.\\nSo **please do upvote and encourage me** to document all leetcode problems\\uD83D\\uDE03\\nHappy Coding :)",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    // generating the sum of the digits of the number, if the sum is even return true, otherwise return false\\n    bool numIsEven(int num){\\n        int sum = 0;\\n        while(num){\\n            sum += num%10;\\n            num /= 10;\\n        }\\n        if(sum%2) return false;\\n        return true;   \\n    }\\n    \\n    int countEven(int num) {\\n        int cnt = 0;        \\n        // traversing from 1 to num, and generating the sum of the digits of each number, and checking whether they are even or odd\\n        for(int itr = 1; itr <= num; itr++){\\n            if(numIsEven(itr)) cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```\n```\\n1) num = 6 = [2,4,6] => 3\\n2) num = 10 = [2,4,6,8] => 4\\n3) num = 15 = [2,4,6,8,11,13,15] => 7\\n4) num = 20 = [2,4,6,8,11,13,15,17,19,20] => 10\\n5) num = 27 = [2,4,6,8,11,13,15,17,19,20,22,24,26] => 13\\n```\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        \\n        // creating a backup of num to use it later\\n        int numBackup = num;\\n        \\n        // generating the sum of the digits of the num\\n        int sum = 0;\\n        while(num){\\n            sum += num%10;\\n            num /= 10;\\n        }\\n        \\n        // if sum is odd, return (numBackup-1)/2 as per the pattern we found\\n        if(sum%2) return (numBackup-1)/2;\\n        \\n        // if sum is even, return numBackup/2\\n        else return numBackup/2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785049,
                "title": "python3-o-1-discrete-formula-100-faster-1-line",
                "content": "### We sum the digits of num.\\n\\n##### if the sum is **even** -> return num // 2\\n##### if the sum is **odd**  -> return (num - 1) // 2\\n\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        return num // 2 if sum([int(k) for k in str(num)]) % 2 == 0 else (num - 1) // 2\\n```\\n\\t\\t\\n\\t\\t\\n##### Since 1 <= num <= 1000 we will sum at most **4 digits**, hence the solution is **O(1)**.",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        return num // 2 if sum([int(k) for k in str(num)]) % 2 == 0 else (num - 1) // 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784816,
                "title": "o-n",
                "content": "Just for fun. We iterating through each position and track sum of digits as we go.\\n\\n**Python 3**\\n```python\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def count(n: int, sum_n: int, pos: int):\\n            if pos == 0:\\n                return sum_n % 2 == 0\\n            return sum(count(n + i * pos, sum_n + i, pos // 10) for i in range(10) if n + i * pos <= num)\\n        return count(0, 0, 100) - 1\\n```\\n",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def count(n: int, sum_n: int, pos: int):\\n            if pos == 0:\\n                return sum_n % 2 == 0\\n            return sum(count(n + i * pos, sum_n + i, pos // 10) for i in range(10) if n + i * pos <= num)\\n        return count(0, 0, 100) - 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3176256,
                "title": "easy-c-most-optimal-explanation-100-fast",
                "content": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) \\n    {\\n        /* \\n        Here we have alternate digit sum as odd and even i.e.\\n        if sum of digits sum of num -> even \\n        then sum of digit sum of num+1 -> odd \\n        \\n        and vice versa \\n        \\n        AND\\n        \\n        if sum of each digit in num is even then res -> num/2\\n        \\n        else res -> (num-1)/2\\n        \\n        */\\n        \\n        int currSum = 0;        // for storing sum of each digit in num \\n        \\n        int store = num;        // storing value of num for further checking\\n        \\n        while(num)\\n        {\\n            currSum += num % 10;    \\n            num /= 10;\\n        }\\n                \\n        if(currSum & 1)     // i.e. sum is odd\\n            return (store-1)/2;\\n        \\n        else\\n            return store/2;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) \\n    {\\n        /* \\n        Here we have alternate digit sum as odd and even i.e.\\n        if sum of digits sum of num -> even \\n        then sum of digit sum of num+1 -> odd \\n        \\n        and vice versa \\n        \\n        AND\\n        \\n        if sum of each digit in num is even then res -> num/2\\n        \\n        else res -> (num-1)/2\\n        \\n        */\\n        \\n        int currSum = 0;        // for storing sum of each digit in num \\n        \\n        int store = num;        // storing value of num for further checking\\n        \\n        while(num)\\n        {\\n            currSum += num % 10;    \\n            num /= 10;\\n        }\\n                \\n        if(currSum & 1)     // i.e. sum is odd\\n            return (store-1)/2;\\n        \\n        else\\n            return store/2;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1787363,
                "title": "python-o-1-time-and-space-easy-to-understand",
                "content": "Intuition here is that numbers have digitSum even and odd consecutively\\n\\n0      1       2      3       4        5         6        7       8        9    => 4 numbers with digit sum as even   (all even numbers)\\n10    11    12    13    14      15       16     17     18      19    => 5 numbers with digit sum as even 11, 13, 15, 17, 19  (all odd numbers)\\n20    21    22    23    24      25       26     27     28      29    => 5 numbers with digit sum as even 20, 22, 24, 26, 28  (all even numbers)\\n30    31    32    33    34      35       36     37     38      39    => 5 numbers with digit sum as even 31, 33, 35, 37, 39  (all odd numbers)\\n\\n**So the evens can be given as num//2 in all the cases except when the number itself is even but digit sum is odd**. Example:10, 12, 30\\nIn such cases the even numbers would less by 1 as that particular number is not a valid number.\\n\\n```python\\n    def countEven(self, num: int) -> int:\\n        n, dSum = num, 0\\n        while n > 0: # Calculate digit sum of numbers\\n            dSum += n%10\\n            n = n//10\\n        if num % 2 == 0 and dSum % 2 == 1:\\n            return num//2 - 1\\n        return num//2\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```python\\n    def countEven(self, num: int) -> int:\\n        n, dSum = num, 0\\n        while n > 0: # Calculate digit sum of numbers\\n            dSum += n%10\\n            n = n//10\\n        if num % 2 == 0 and dSum % 2 == 1:\\n            return num//2 - 1\\n        return num//2\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3155052,
                "title": "python-easy-solution",
                "content": "# Code\\u2705\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2,num+1):\\n            if sum(list(map(int, str(i).strip()))) % 2 == 0:\\n                count +=1\\n        return count\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2,num+1):\\n            if sum(list(map(int, str(i).strip()))) % 2 == 0:\\n                count +=1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785209,
                "title": "c-brute-force-explanation",
                "content": "```\\nclass Solution {\\npublic:\\n\\xA0\\xA0\\xA0 int countEven(int num) {\\n// cnt variable keeps a record of total sum of digits which are even \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0 int\\xA0 cnt = 0\\xA0 ;\\n// Now, using a for loop to iterate till the num\\n// We can also directly start i = 2 as it\\'s the first even number \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 for ( int i = 1 ; i<= num ;i++)\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 { \\n// s keeps the sum of digits\\n// e keeps original i \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 int\\xA0 e = i , s=0\\xA0 ;\\n// Now, finding sum of digits using a while loop till (e > 0)\\xA0\\xA0\\xA0 .\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 while (e)\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 {\\n// it gives last digits of a number\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 int r = e %10 ; \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 s=s+r ; \\n// It decreases the number so that we can find other digits as well\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 e/=10;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 }\\n\\xA0 // Now, if s is even it will be divisible by 2 and we will increment cnt\\xA0 \\n\\xA0\\xA0\\xA0\\xA0 \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 if( s%2 == 0 )\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 cnt ++;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 }\\n\\xA0\\xA0\\xA0\\xA0 return cnt ; \\n\\xA0\\xA0\\xA0 }\\n};\\n\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\xA0\\xA0\\xA0 int countEven(int num) {\\n// cnt variable keeps a record of total sum of digits which are even \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0 int\\xA0 cnt = 0\\xA0 ;\\n// Now, using a for loop to iterate till the num\\n// We can also directly start i = 2 as it\\'s the first even number \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 for ( int i = 1 ; i<= num ;i++)\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 { \\n// s keeps the sum of digits\\n// e keeps original i \\n\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 int\\xA0 e = i , s=0\\xA0 ;\\n// Now, finding sum of digits using a while loop till (e > 0)\\xA0\\xA0\\xA0 .\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 while (e)\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 {\\n// it gives last digits of a number\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 int r = e %10 ; \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 s=s+r ; \\n// It decreases the number so that we can find other digits as well\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 e/=10;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 }\\n\\xA0 // Now, if s is even it will be divisible by 2 and we will increment cnt\\xA0 \\n\\xA0\\xA0\\xA0\\xA0 \\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 if( s%2 == 0 )\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 cnt ++;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 }\\n\\xA0\\xA0\\xA0\\xA0 return cnt ; \\n\\xA0\\xA0\\xA0 }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2971118,
                "title": "java-easy-solution-short-code-100-faster",
                "content": "# Code\\n```\\nclass Solution {\\n    public int countEven(int a) {\\n        int count = 0,sum = 0,r = 0,c_num = 0;\\n        for (int i = 1; i <= a; i++) {\\n            c_num = i;// c_num = current value;\\n            while (c_num != 0) {\\n                r = c_num % 10;// r = reminder\\n                sum = sum + r;\\n                c_num = c_num / 10;\\n            }\\n            if(sum % 2 == 0) count++;\\n            sum = 0;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int a) {\\n        int count = 0,sum = 0,r = 0,c_num = 0;\\n        for (int i = 1; i <= a; i++) {\\n            c_num = i;// c_num = current value;\\n            while (c_num != 0) {\\n                r = c_num % 10;// r = reminder\\n                sum = sum + r;\\n                c_num = c_num / 10;\\n            }\\n            if(sum % 2 == 0) count++;\\n            sum = 0;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784723,
                "title": "java-easy",
                "content": "```\\nclass Solution\\n{\\n    public int countEven(int num)\\n    {\\n        int count = 0;\\n        for(int i = 1; i <= num; i++)\\n            if(sumDig(i))\\n                count++;\\n        return count;\\n    }\\n    private boolean sumDig(int n)\\n    {\\n        int sum = 0;\\n        while(n > 0)\\n        {\\n            sum += n % 10;\\n            n /= 10;\\n        }\\n\\t\\treturn (sum&1) == 0 ? true : false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution\\n{\\n    public int countEven(int num)\\n    {\\n        int count = 0;\\n        for(int i = 1; i <= num; i++)\\n            if(sumDig(i))\\n                count++;\\n        return count;\\n    }\\n    private boolean sumDig(int n)\\n    {\\n        int sum = 0;\\n        while(n > 0)\\n        {\\n            sum += n % 10;\\n            n /= 10;\\n        }\\n\\t\\treturn (sum&1) == 0 ? true : false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2774909,
                "title": "java-simple-and-best-solution",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n       int count = 0;\\n       for(int i = 1; i <= num; i ++) {\\n           if(sumOfDigit(i))\\n           count ++;\\n       } \\n       return count;\\n    }\\n    private boolean sumOfDigit(int n) {\\n        int sum = 0; \\n        while(n > 0) {\\n          sum += n % 10;\\n          n /= 10;\\n        }\\n        return (sum & 1) == 0 ? true : false;\\n    }\\n}\\n```\\n# PLEASE UPVOTE IF IT WAS HELPFULL",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n       int count = 0;\\n       for(int i = 1; i <= num; i ++) {\\n           if(sumOfDigit(i))\\n           count ++;\\n       } \\n       return count;\\n    }\\n    private boolean sumOfDigit(int n) {\\n        int sum = 0; \\n        while(n > 0) {\\n          sum += n % 10;\\n          n /= 10;\\n        }\\n        return (sum & 1) == 0 ? true : false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2673659,
                "title": "c-100-faster-easy-to-understand",
                "content": "\\'\\'\\'\\nint countEven(int num) {\\n       \\n       int x = num ;\\n       int sum = 0 ;\\n        \\n        while(x)\\n        {\\n            sum += x%10 ;\\n            x /= 10 ;\\n        }\\n        \\n     \\n       if( num%2 == 0 && sum%2 == 0 )  return num/2 ;\\n        \\n       return (num-1)/2  ;\\n    }\\n\\t\\n\\t\\'\\'\\'",
                "solutionTags": [],
                "code": "\\'\\'\\'\\nint countEven(int num) {\\n       \\n       int x = num ;\\n       int sum = 0 ;\\n        \\n        while(x)\\n        {\\n            sum += x%10 ;\\n            x /= 10 ;\\n        }\\n        \\n     \\n       if( num%2 == 0 && sum%2 == 0 )  return num/2 ;\\n        \\n       return (num-1)/2  ;\\n    }\\n\\t\\n\\t\\'\\'\\'",
                "codeTag": "Unknown"
            },
            {
                "id": 1944414,
                "title": "c-solution-easy-to-understand-100-faster-0-ms-brute-force",
                "content": "***Self Explanatory***\\n```\\nclass Solution {\\npublic:\\n    int sod(int n){\\n        int sum=0;\\n        while(n){\\n            sum+=n%10;\\n            n/=10;\\n        }\\n        return sum;\\n    }\\n    int countEven(int num) {\\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            if(sod(i)%2==0)\\n                c+=1;\\n        }\\n        return c;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sod(int n){\\n        int sum=0;\\n        while(n){\\n            sum+=n%10;\\n            n/=10;\\n        }\\n        return sum;\\n    }\\n    int countEven(int num) {\\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            if(sod(i)%2==0)\\n                c+=1;\\n        }\\n        return c;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1795851,
                "title": "java-2-approaches-optimised-solution-constant-space-solution",
                "content": "**Naive Solution:**\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        \\n        for(int i=2;i<=num;i++){\\n            if(isEven(i)) ans++;\\n        }\\n        return ans;\\n    }\\n    \\n    public boolean isEven(int n){\\n        int sum=0;\\n        \\n        while(n!=0){\\n            sum+=n%10;\\n            n=n/10;\\n        }\\n        return sum%2==0;\\n    }\\n}\\n```\\n\\n**Optimised Solution:**\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int temp=num;\\n        int sum=0;\\n        \\n        while(num!=0){\\n            sum+=num%10;\\n            num=num/10;\\n        }\\n        \\n        return sum%2==0 ? temp/2 : (temp-1)/2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        \\n        for(int i=2;i<=num;i++){\\n            if(isEven(i)) ans++;\\n        }\\n        return ans;\\n    }\\n    \\n    public boolean isEven(int n){\\n        int sum=0;\\n        \\n        while(n!=0){\\n            sum+=n%10;\\n            n=n/10;\\n        }\\n        return sum%2==0;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int temp=num;\\n        int sum=0;\\n        \\n        while(num!=0){\\n            sum+=num%10;\\n            num=num/10;\\n        }\\n        \\n        return sum%2==0 ? temp/2 : (temp-1)/2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1788958,
                "title": "o-1-1-liner",
                "content": "**time: `O(1)`; space: `O(1)`**\\n**c++:**\\n```\\nint countEven(int n) \\n{\\n\\treturn n-(n/10&1^n/100&1^n/1000)>>1;\\n}\\n```\\n**python:**\\n```\\ndef countEven(self, n) :\\n\\treturn n-(n/10&1^n/100&1^n/1000)>>1;\\n```\\n**javascript:**\\n```\\nvar countEven = function(n) \\n{\\n  \\t  return n-(n/10&1^n/100&1^n/1000)>>1;  \\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Python",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\nint countEven(int n) \\n{\\n\\treturn n-(n/10&1^n/100&1^n/1000)>>1;\\n}\\n```\n```\\ndef countEven(self, n) :\\n\\treturn n-(n/10&1^n/100&1^n/1000)>>1;\\n```\n```\\nvar countEven = function(n) \\n{\\n  \\t  return n-(n/10&1^n/100&1^n/1000)>>1;  \\n};\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1788189,
                "title": "c-with-understanable-explanation-on-math-formula",
                "content": "First, we notice that for an odd number n, the formula is always (n-1)/2. An ez way to visualize it is as following: 1, [even, odd], [even, odd].... [even, n], while each pair[even, odd] guarantee 1 even DigitSum. Since even numbers end in 0,2, 4,6,8, adding one to it will alway change the DigitSum even/odd property.\\nInterestingly, the property is not ensured for a different order [odd, even], an example would be (29,30).\\n\\nWith the first part in mind, it\\'s actually very simple to apply it to an even number n. We simply reuse above formula to (n-1), which is surely an odd number. Then just add one if n has even digitSum.\\n```\\nint countEven(int num) {\\n        if(num % 2 == 1) return (num-1)/2; // odd number\\n        int sum = num % 10 + (num / 10) % 10 + (num / 100) % 10;  // find digitSum since num <= 1000\\n        return num/2 - (sum % 2); // [(num - 1)-1] / 2 + isDigitSumEven(num)       \\n    }\\n```",
                "solutionTags": [
                    "Math"
                ],
                "code": "```\\nint countEven(int num) {\\n        if(num % 2 == 1) return (num-1)/2; // odd number\\n        int sum = num % 10 + (num / 10) % 10 + (num / 100) % 10;  // find digitSum since num <= 1000\\n        return num/2 - (sum % 2); // [(num - 1)-1] / 2 + isDigitSumEven(num)       \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1786086,
                "title": "javascript-2180-count-integers-with-even-digit-sum",
                "content": "---\\n\\n**Weekly Contest 281** answers:\\n\\n- **Q1**\\n  - https://leetcode.com/problems/count-integers-with-even-digit-sum/discuss/1786086/JavaScript-2180.-Count-Integers-With-Even-Digit-Sum\\n  - **below**\\n- **Q2**\\n  - https://leetcode.com/problems/merge-nodes-in-between-zeros/discuss/1786116/JavaScript-2181.-Merge-Nodes-in-Between-Zeros\\n- **Q3**\\n  - https://leetcode.com/problems/construct-string-with-repeat-limit/discuss/1786262/JavaScript-2182.-Construct-String-With-Repeat-Limit\\n\\n---\\n\\nHope it is simple to understand.\\n\\n---\\n\\n```\\nfunction digitSum(num) {\\n    let sum = 0;\\n    while (num) {\\n        sum += num % 10;\\n        num = Math.trunc(num / 10);\\n    }\\n    return sum;\\n}\\n\\nvar countEven = function (num) {\\n    let count = 0;\\n    for (let n = 1; n <= num; n++) {\\n        count += digitSum(n) % 2 === 0;\\n    }\\n    return count;\\n};\\n```\\n\\n---\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction digitSum(num) {\\n    let sum = 0;\\n    while (num) {\\n        sum += num % 10;\\n        num = Math.trunc(num / 10);\\n    }\\n    return sum;\\n}\\n\\nvar countEven = function (num) {\\n    let count = 0;\\n    for (let n = 1; n <= num; n++) {\\n        count += digitSum(n) % 2 === 0;\\n    }\\n    return count;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1785599,
                "title": "python-faster-than-100-easy-solution",
                "content": "![image](https://assets.leetcode.com/users/images/991e5817-9bb3-4e8d-90e3-709b7d69933f_1645341053.835051.png)\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(num+1):\\n            sum_of_digits = sum(int(digit) for digit in str(i)) \\n            if sum_of_digits % 2 == 0 and sum_of_digits != 0:\\n                count += 1\\n        return count\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(num+1):\\n            sum_of_digits = sum(int(digit) for digit in str(i)) \\n            if sum_of_digits % 2 == 0 and sum_of_digits != 0:\\n                count += 1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785119,
                "title": "simple-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool evensum(int n){\\n        int sum=0;\\n        while(n){\\n            int t=n%10;\\n            sum+=t;\\n            n/=10;\\n        }\\n        return sum%2==0;\\n    }\\n    int countEven(int num) {\\n        int ans=0;\\n        for(int i=1;i<=num;i++){\\n            if(evensum(i))ans++;\\n        }\\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool evensum(int n){\\n        int sum=0;\\n        while(n){\\n            int t=n%10;\\n            sum+=t;\\n            n/=10;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1784841,
                "title": "python-3-30ms-simple-maths-formula-even-odd-solution",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        if num%2!=0:\\n            return (num//2)\\n        s=0\\n        t=num\\n        while t:\\n            s=s+(t%10)\\n            t=t//10\\n        if s%2==0:\\n            return num//2\\n        else:\\n            return (num//2)-1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        if num%2!=0:\\n            return (num//2)\\n        s=0\\n        t=num\\n        while t:\\n            s=s+(t%10)\\n            t=t//10\\n        if s%2==0:\\n            return num//2\\n        else:\\n            return (num//2)-1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784774,
                "title": "python3-brute-force",
                "content": "Please pull this [commit](https://github.com/gaosanyong/leetcode/commit/793daa0aab0733bfadd4041fdaa6f8bdd38fe229) for solutions of weekly 281. \\n\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        ans = 0 \\n        for x in range(1, num+1): \\n            sm = sum(map(int, str(x)))\\n            if not sm&1: ans += 1\\n        return ans \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        ans = 0 \\n        for x in range(1, num+1): \\n            sm = sum(map(int, str(x)))\\n            if not sm&1: ans += 1\\n        return ans \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3522354,
                "title": "beginners-friendly-solution",
                "content": "\\n# Complexity\\n- Time complexity: O(m*k)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            int currentNumber= i;\\n            int sum=0;\\n            while(currentNumber>0){\\n                sum+=currentNumber%10;\\n                currentNumber/=10;\\n            }\\n            if(sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            int currentNumber= i;\\n            int sum=0;\\n            while(currentNumber>0){\\n                sum+=currentNumber%10;\\n                currentNumber/=10;\\n            }\\n            if(sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3360485,
                "title": "very-easy-c-solution-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n   int calculate(int n){\\n       int ans=0;\\n       while(n){\\n           int r=n%10;\\n           ans+=r;\\n           n=n/10;\\n       }\\n       return ans;\\n   }\\n    int countEven(int num) {\\n        if(num<=1)\\n        return 0;\\n       int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(calculate(i)%2==0)\\n            count++;\\n        }\\n        return count;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n   int calculate(int n){\\n       int ans=0;\\n       while(n){\\n           int r=n%10;\\n           ans+=r;\\n           n=n/10;\\n       }\\n       return ans;\\n   }\\n    int countEven(int num) {\\n        if(num<=1)\\n        return 0;\\n       int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(calculate(i)%2==0)\\n            count++;\\n        }\\n        return count;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3331857,
                "title": "o-1-bit-manipulation",
                "content": "\\n```python []\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        i, xor, n, last_digit = 1, 0, num, 0\\n\\n        while i<5 and n!=0 :\\n            last_digit = (n % 10) & 1\\n            xor = xor ^ last_digit\\n            n //= 10\\n            i += 1\\n        \\n        return (num-xor)>>1\\n```\\n```C++ []\\nclass Solution \\n{\\npublic:\\n    int countEven(int num) \\n    {\\n        int i=1, Xor = 0, n = num, last_digit;\\n        while(i<5 && n!=0)\\n        {\\n            last_digit = (n % 10) & 1;\\n            Xor = Xor ^ last_digit;\\n            n /= 10, i++;\\n        } \\n        return (num - Xor) >> 1;\\n    }\\n};\\n```\\n## Approach\\n```\\n     The Number    How many digits has even sum including The Number\\n\\n          1     -       0\\n         \"2     -       1\"  \\n          3     -       1\\n         \"4     -       2\"\\n          5     -       2\\n         \"6     -       3\"\\n          7     -       3\\n         \"8     -       4\"\\n          9     -       4\\n          10    -       4\\n         \"11    -       5\"\\n          12    -       5\\n         \"13    -       6\"\\n          14    -       6\\n          ...............\\n\\n    For 13 : 1 + 3 = 4 which is EVEN, so we return 13/2 = 6\\n    For 14 : 1 + 4 = 5 which is  ODD, so we return (14-1)/2 = 6\\n\\n    [ IF the sum of digits is ODD, return it\\'s PREVIOUS NUMBER\\'S half]\\n\\n    One way : calculate sum of all the digits of num and\\n                    if sum is even \\n                        return num/2\\n                    else\\n                        return (num-1)/2\\n    Second way : Check how many digits is odd. Why? \\n```\\n```\\n\\n    suppose num = 123\\n\\n           1   2   3\\n           |   |   |\\n           1   0   1 ( 1 means that digit is odd, 0 means even )\\n    \\n     \\'2 ODD\\' number makes an \\'EVEN\\' number, ex : 1 + 3 = 4\\n     \\'4 ODD\\' number makes an \\'EVEN\\' number, ex : 1 + 3 + 5 + 9 = 18\\n     ..........................................................\\n     \\'3 ODD\\' number makes an \\'ODD\\' number, ex : 1 + 3 + 5 = 9\\n     \\'5 ODD\\' number makes an \\'ODD\\' number, ex : 1 + 3 + 5 + 7 + 9 = 27\\n\\n     means if we have EVEN NUMBER ODD DIGITS we return num/2\\n           else we return (num-1)/2 \\n    \\n    1 ^ 1 ^ 1 ^ 1 = 0     (Even number odd digits)\\n    1 ^ 1 ^ 1 ^ 1 ^ 1 = 1 (Odd  number odd digits)\\n\\n    This xor opeartion returning IF THE SUM OF ALL THE DIGITS OF A NUMBER \\n    IS ODD OR EVEN  \\n     \\n```\\n\\n- Time complexity : O(1) cause the loop will run maximum 4 times\\n\\n- Space complexity : O(1)\\n\\n## If this post was helpful, an upvote will really make me happy \\uD83D\\uDE07\\n",
                "solutionTags": [
                    "C++",
                    "Python3"
                ],
                "code": "```python []\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        i, xor, n, last_digit = 1, 0, num, 0\\n\\n        while i<5 and n!=0 :\\n            last_digit = (n % 10) & 1\\n            xor = xor ^ last_digit\\n            n //= 10\\n            i += 1\\n        \\n        return (num-xor)>>1\\n```\n```C++ []\\nclass Solution \\n{\\npublic:\\n    int countEven(int num) \\n    {\\n        int i=1, Xor = 0, n = num, last_digit;\\n        while(i<5 && n!=0)\\n        {\\n            last_digit = (n % 10) & 1;\\n            Xor = Xor ^ last_digit;\\n            n /= 10, i++;\\n        } \\n        return (num - Xor) >> 1;\\n    }\\n};\\n```\n```\\n     The Number    How many digits has even sum including The Number\\n\\n          1     -       0\\n         \"2     -       1\"  \\n          3     -       1\\n         \"4     -       2\"\\n          5     -       2\\n         \"6     -       3\"\\n          7     -       3\\n         \"8     -       4\"\\n          9     -       4\\n          10    -       4\\n         \"11    -       5\"\\n          12    -       5\\n         \"13    -       6\"\\n          14    -       6\\n          ...............\\n\\n    For 13 : 1 + 3 = 4 which is EVEN, so we return 13/2 = 6\\n    For 14 : 1 + 4 = 5 which is  ODD, so we return (14-1)/2 = 6\\n\\n    [ IF the sum of digits is ODD, return it\\'s PREVIOUS NUMBER\\'S half]\\n\\n    One way : calculate sum of all the digits of num and\\n                    if sum is even \\n                        return num/2\\n                    else\\n                        return (num-1)/2\\n    Second way : Check how many digits is odd. Why? \\n```\n```\\n\\n    suppose num = 123\\n\\n           1   2   3\\n           |   |   |\\n           1   0   1 ( 1 means that digit is odd, 0 means even )\\n    \\n     \\'2 ODD\\' number makes an \\'EVEN\\' number, ex : 1 + 3 = 4\\n     \\'4 ODD\\' number makes an \\'EVEN\\' number, ex : 1 + 3 + 5 + 9 = 18\\n     ..........................................................\\n     \\'3 ODD\\' number makes an \\'ODD\\' number, ex : 1 + 3 + 5 = 9\\n     \\'5 ODD\\' number makes an \\'ODD\\' number, ex : 1 + 3 + 5 + 7 + 9 = 27\\n\\n     means if we have EVEN NUMBER ODD DIGITS we return num/2\\n           else we return (num-1)/2 \\n    \\n    1 ^ 1 ^ 1 ^ 1 = 0     (Even number odd digits)\\n    1 ^ 1 ^ 1 ^ 1 ^ 1 = 1 (Odd  number odd digits)\\n\\n    This xor opeartion returning IF THE SUM OF ALL THE DIGITS OF A NUMBER \\n    IS ODD OR EVEN  \\n     \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3039132,
                "title": "count-integer-with-even-digit-sum",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        countf = 0\\n\\n        for i in range(1,num+1):\\n            s = str(i)\\n            count = 0\\n            for j in range(len(s)):\\n                a = int(s[j])\\n                # print(a)\\n                count = count+a\\n            if count%2==0:\\n                countf+=1\\n        return(countf)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        countf = 0\\n\\n        for i in range(1,num+1):\\n            s = str(i)\\n            count = 0\\n            for j in range(len(s)):\\n                a = int(s[j])\\n                # print(a)\\n                count = count+a\\n            if count%2==0:\\n                countf+=1\\n        return(countf)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2870267,
                "title": "fast-and-easy-python-solution",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2, num + 1):\\n            if sum([int(digit) for digit in str(i)]) % 2 == 0:\\n                count += 1\\n        return count\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2, num + 1):\\n            if sum([int(digit) for digit in str(i)]) % 2 == 0:\\n                count += 1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2805376,
                "title": "java-100-faster-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    static int[] results = new int[1000];\\n    public int countEven(int num) {\\n        if (results[1] == 0) {\\n            fillResults();\\n        }\\n        return results[num - 1];\\n    }\\n\\n    private static void fillResults() {\\n        int count = 0;\\n        for (int i = 1; i <= 1000; i++) {\\n            int num = i, sum = 0;\\n            while (num > 9) {\\n                sum += num % 10;\\n                num /= 10;\\n            }\\n            if (num > 0) sum += num;\\n            if (sum == 0) sum = i;\\n            if (sum % 2 == 0) {\\n                count++;\\n            }\\n            results[i - 1] = count;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    static int[] results = new int[1000];\\n    public int countEven(int num) {\\n        if (results[1] == 0) {\\n            fillResults();\\n        }\\n        return results[num - 1];\\n    }\\n\\n    private static void fillResults() {\\n        int count = 0;\\n        for (int i = 1; i <= 1000; i++) {\\n            int num = i, sum = 0;\\n            while (num > 9) {\\n                sum += num % 10;\\n                num /= 10;\\n            }\\n            if (num > 0) sum += num;\\n            if (sum == 0) sum = i;\\n            if (sum % 2 == 0) {\\n                count++;\\n            }\\n            results[i - 1] = count;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2501853,
                "title": "beginner-friendly-simple-java-code",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(even(i))count++;\\n        }\\n        return count;\\n    }\\n    boolean even(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=n%10;\\n            n/=10;\\n            \\n        }\\n        return sum%2==0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(even(i))count++;\\n        }\\n        return count;\\n    }\\n    boolean even(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=n%10;\\n            n/=10;\\n            \\n        }\\n        return sum%2==0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2501614,
                "title": "memory-usage-5-7-mb-less-than-95-97-of-c-online-submissions",
                "content": "```\\n\\n/***  2180. Count Integers With Even Digit Sum ***/\\n\\nclass Solution {\\npublic:\\n    int sum(int n){\\n        //base case\\n        if(n<10){\\n            return n;\\n        }\\n        int smallSum=sum(n/10);\\n        return smallSum+n%10;\\n    }\\n    \\n    \\n    int countEven(int num) {\\n       long long count=0;\\n        for(int i=1;i<=num;++i){\\n            long long temp=sum(i);\\n            if(temp%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\n\\n/***  2180. Count Integers With Even Digit Sum ***/\\n\\nclass Solution {\\npublic:\\n    int sum(int n){\\n        //base case\\n        if(n<10){\\n            return n;\\n        }\\n        int smallSum=sum(n/10);\\n        return smallSum+n%10;\\n    }\\n    \\n    \\n    int countEven(int num) {\\n       long long count=0;\\n        for(int i=1;i<=num;++i){\\n            long long temp=sum(i);\\n            if(temp%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2468507,
                "title": "python-observational",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        \\n        if num%2:\\n            return num//2      \\n        return num//2 - sum(map(int , str(num)))%2\\n```",
                "solutionTags": [
                    "Python",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        \\n        if num%2:\\n            return num//2      \\n        return num//2 - sum(map(int , str(num)))%2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1877275,
                "title": "python-easy-solution-full-explanation-99-23-success-rate",
                "content": "**faster than 99.23% of Python3 online submissions**\\n\\n![image](https://assets.leetcode.com/users/images/686bc57c-9c3c-4deb-8e44-3d538dca0b47_1648060087.407995.png)\\n\\n##################################################################################################\\n\\nnum = 30 -->3+0 = 3 which is odd \\n30--> 2, 4, 6, 8, 11, 13, 15, 17, 19, 20, 22, 24, 26, and 28 --> output = 14 \\nobserve something when addition of num is odd then (num-1)//2 ==> num-1-->30-1 = 29 --> 29//2 = 14\\n\\n##################################################################################################\\n\\nnum = 20-->2+0 = 2 which is even\\n20 -->  2, 4, 6, 8, 11, 13, 15, 17, 19 and 20 --> output = 10\\nobserve something when addition of num is even then num//2 ==> num//2--> 20//2 = 10\\n\\n##################################################################################################\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        if sum(map(int,str(num))) % 2 == 0:\\n            return num//2\\n        return (num-1)//2\\n```\\n\\nIf there is any mistake/suggestion please let me know below...\\uD83D\\uDC47\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        if sum(map(int,str(num))) % 2 == 0:\\n            return num//2\\n        return (num-1)//2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1800135,
                "title": "javascript-easy-solution-explain",
                "content": "Sum the number\\nIf the sum is even => `number / 2 `else `(number - 1) / 2`\\n```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    let sum = 0;\\n    let temp = num;\\n    \\n    while(num > 0){\\n        sum += num % 10;\\n        num = Math.floor(num / 10)\\n    }\\n\\n    return sum % 2 ? Math.floor((temp - 1) / 2) : Math.floor(temp / 2)\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    let sum = 0;\\n    let temp = num;\\n    \\n    while(num > 0){\\n        sum += num % 10;\\n        num = Math.floor(num / 10)\\n    }\\n\\n    return sum % 2 ? Math.floor((temp - 1) / 2) : Math.floor(temp / 2)\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1796839,
                "title": "faster-then-100",
                "content": "class Solution {\\n  \\n    public int countEven(int n) {\\n       if(n<100){\\n           if(((n/10)+(n%10))%2==0)\\n               return n/2;\\n           else return (n-1)/2;\\n         }\\n        if(n>100&&n<1000){\\n            if(((n/10)+(n%10)+(n/100))%2==0)\\n                  return n/2;\\n           else return (n-1)/2;\\n        }\\n        else return (n/2)-1;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n  \\n    public int countEven(int n) {\\n       if(n<100){\\n           if(((n/10)+(n%10))%2==0)\\n               return n/2;\\n           else return (n-1)/2;\\n         }",
                "codeTag": "Java"
            },
            {
                "id": 1794052,
                "title": "a-few-solutions",
                "content": "Consider each candidate `x` from `2..T` inclusive, where `T` is the input target value.\\n\\n---\\n\\n**1-Liners:**\\n\\n*Kotlin*\\n```\\nclass Solution {\\n    var countEven = { T: Int -> (2..T).filter{ x: Int -> \"$x\".toCharArray().map{ it.toInt() - \\'0\\'.toInt() }.sum() % 2 == 0 }.size }\\n}\\n```\\n\\n*Javascript*\\n```\\nlet countEven = T => [...Array(T - 1).keys()].map(x => 2 + x).filter(x => _.sum(`${x}`.split(\\'\\').map(c => c.charCodeAt(0) - \\'0\\'.charCodeAt(0))) % 2 == 0).length;\\n```\\n\\n*Python3*\\n```\\nclass Solution:\\n    countEven = lambda self, T: len([x for x in range(2, T + 1) if sum(int(c) for c in list(str(x))) % 2 == 0])\\n```\\n\\n---\\n\\n**Verbose Solutions:**\\n\\n*Kotlin*\\n```\\nclass Solution {\\n    fun countEven(T: Int): Int {\\n        var cnt = 0\\n        var ok = { x: Int -> \"$x\".toCharArray().map{ it.toInt() - \\'0\\'.toInt() }.sum() % 2 == 0 }\\n        for (x in 2..T)\\n            if (ok(x))\\n                ++cnt\\n        return cnt\\n    }\\n}\\n```\\n\\n*Javascript*\\n```\\nlet countEven = (T, cnt = 0) => {\\n    let ok = x => _.sum(x.toString().split(\\'\\').map(c => c.charCodeAt(0) - \\'0\\'.charCodeAt(0))) % 2 == 0;\\n    for (let x = 2; x <= T; ++x)\\n        if (ok(x))\\n            ++cnt;\\n    return cnt;\\n};\\n```\\n\\n*Python3*\\n```\\nclass Solution:\\n    def countEven(self, T: int, cnt = 0) -> int:\\n        ok = lambda x: sum(int(c) for c in list(str(x))) % 2 == 0\\n        for x in range(2, T + 1):\\n            cnt += int(ok(x))\\n        return cnt\\n```\\n\\n*Rust*\\n```\\nimpl Solution {\\n    pub fn count_even(T: i32) -> i32 {\\n        let mut cnt = 0;\\n        fn ok(x_: i32) -> bool {\\n            let (mut t, mut x) = (0, x_);\\n            while 0 < x {\\n                t += x % 10;\\n                x /= 10;\\n            }\\n            return t % 2 == 0;\\n        }\\n        for x in 2..=T {\\n            if ok(x) {\\n                cnt += 1;\\n            }\\n        }\\n        return cnt;\\n    }\\n}\\n```\\n\\n*C++*\\n```\\nclass Solution {\\npublic:\\n    int countEven(int T, int cnt = 0) {\\n        auto ok = [](auto x) {\\n            auto t = 0;\\n            while (x) {\\n                t += x % 10;\\n                x /= 10;\\n            }\\n            return !(t & 1);\\n        };\\n        for (auto x{ 2 }; x <= T; ++x)\\n            if (ok(x))\\n                ++cnt;\\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    var countEven = { T: Int -> (2..T).filter{ x: Int -> \"$x\".toCharArray().map{ it.toInt() - \\'0\\'.toInt() }.sum() % 2 == 0 }.size }\\n}\\n```\n```\\nlet countEven = T => [...Array(T - 1).keys()].map(x => 2 + x).filter(x => _.sum(`${x}`.split(\\'\\').map(c => c.charCodeAt(0) - \\'0\\'.charCodeAt(0))) % 2 == 0).length;\\n```\n```\\nclass Solution:\\n    countEven = lambda self, T: len([x for x in range(2, T + 1) if sum(int(c) for c in list(str(x))) % 2 == 0])\\n```\n```\\nclass Solution {\\n    fun countEven(T: Int): Int {\\n        var cnt = 0\\n        var ok = { x: Int -> \"$x\".toCharArray().map{ it.toInt() - \\'0\\'.toInt() }.sum() % 2 == 0 }\\n        for (x in 2..T)\\n            if (ok(x))\\n                ++cnt\\n        return cnt\\n    }\\n}\\n```\n```\\nlet countEven = (T, cnt = 0) => {\\n    let ok = x => _.sum(x.toString().split(\\'\\').map(c => c.charCodeAt(0) - \\'0\\'.charCodeAt(0))) % 2 == 0;\\n    for (let x = 2; x <= T; ++x)\\n        if (ok(x))\\n            ++cnt;\\n    return cnt;\\n};\\n```\n```\\nclass Solution:\\n    def countEven(self, T: int, cnt = 0) -> int:\\n        ok = lambda x: sum(int(c) for c in list(str(x))) % 2 == 0\\n        for x in range(2, T + 1):\\n            cnt += int(ok(x))\\n        return cnt\\n```\n```\\nimpl Solution {\\n    pub fn count_even(T: i32) -> i32 {\\n        let mut cnt = 0;\\n        fn ok(x_: i32) -> bool {\\n            let (mut t, mut x) = (0, x_);\\n            while 0 < x {\\n                t += x % 10;\\n                x /= 10;\\n            }\\n            return t % 2 == 0;\\n        }\\n        for x in 2..=T {\\n            if ok(x) {\\n                cnt += 1;\\n            }\\n        }\\n        return cnt;\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int countEven(int T, int cnt = 0) {\\n        auto ok = [](auto x) {\\n            auto t = 0;\\n            while (x) {\\n                t += x % 10;\\n                x /= 10;\\n            }\\n            return !(t & 1);\\n        };\\n        for (auto x{ 2 }; x <= T; ++x)\\n            if (ok(x))\\n                ++cnt;\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1787257,
                "title": "c-o-1-solution-for-count-integers-with-even-digit-sum",
                "content": "**Observation**\\nSo this was my solution for Count Integers With Even Digit Sum which is O(1) solution. The basic intuition is how many numbers do we get in between 10-20,20-30,30-40 .... where the sum of the digits is even.\\n\\nBy observation we can see\\n\\t[0 - 10)    -> 2, 4, 6, 8                      (4 numbers)\\n\\t[10 - 20)  -> 11, 13, 15, 17, 19      (5 numbers)\\n\\t[20 - 30)  -> 20, 22, 24, 26, 28      (5 numbers)\\n\\t\\t:\\n\\t\\t:\\n\\t[120 - 130] -> 121, 123,125, 127, 129    (5 numbers)\\n\\t\\nSo as we can see from above in all the inetervals of size 10 we get 5 such results which follow the condition of the given PS. The only exception is in the range [0,10) because we cannot consider 0 as even here.\\n\\nSo my approach is to find out how many such numbers exist before the tenth place of the given number. For example if given number is 133 I will first check how many suitable number exists till 130 or `(int(x/10))*10`  or in the range [0,130) in this case.\\n\\nNow my final step is to check how many such numbers exist in the range [130-133] or technically in the range `[(int(x/10))*10,x]` \\n\\nFor this I am just checking if the sum of all the digit except the last digit is even or odd. For this case I am checking if in 133 , 1+3 is even or odd.\\n\\nIf the sum is even then the possible last digit can only be even. Else it can only be odd. \\n\\nI have just followed this approach and iterated all the cases. \\n\\n**Regarding the Time Complexity :**\\n\\nTo find the sum of all the digits of x (which was 133 in the example I explained above) except the last digit it will maximum take 3 iterations as given `n<=1000`\\n\\nTo find all the suitable solutions in the range `[(int(x/10))*10,x]`  { [130,133] as per the example } a maximum of 5 iterations will be required as explained above.\\n\\nSo total time complexity becomes `O(3) + O(5)  => O(constant)  => O(1)`\\n\\n\\n**My code for C++  :**\\n\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        if(num<10) return num/2;\\n        int sum = 0,copy = num/10,ans=((num/10)*5)-1;\\n        while(copy){\\n            sum+=copy%10;\\n            copy/=10;\\n        }\\n        int i;\\n        if(sum%2 == 0)i = 0;\\n        else i = 1;\\n        while((int(num/10))*10 + i <= num){\\n            i=i+2;\\n            ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        if(num<10) return num/2;\\n        int sum = 0,copy = num/10,ans=((num/10)*5)-1;\\n        while(copy){\\n            sum+=copy%10;\\n            copy/=10;\\n        }\\n        int i;\\n        if(sum%2 == 0)i = 0;\\n        else i = 1;\\n        while((int(num/10))*10 + i <= num){\\n            i=i+2;\\n            ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785579,
                "title": "java-faster-than-100-easiest-to-understand-beginner-friendly",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n        if(sum%2==0 && num%2 == 0){\\n            return (num-1)/2 +1;\\n        }\\n        else{\\n            return (num-1)/2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int sum = num % 10 + (num / 10) % 10 + (num / 100) % 10 + (num / 1000) % 10;\\n        if(sum%2==0 && num%2 == 0){\\n            return (num-1)/2 +1;\\n        }\\n        else{\\n            return (num-1)/2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785096,
                "title": "very-fast-python-3-o-1-solution-with-explanation",
                "content": "**Intuition**\\nWe noticed that for every increase of 10 in the `num`, there will be 5 numbers with even digit sum.\\n\\n**Example:**\\n10 -> 0, 2, 4, 6, 8\\n20 -> 11, 13, 15, 17, 19\\n30 -> 20, 22, 24, 26, 28\\n130 -> 121, 123, 125, 127, 129\\nSo we initial count as `num // 10 * 5`. And now the question becomes how we tackle with the final digit.\\n\\nWe need a odd last digit if digits before it sum up to odd, and vice versa.\\n\\n**Example:**\\n146 -> `14*5` + (141, 143, 145)\\n136 -> `13*5` + (130, 132, 134, 136)\\nSo we determine if we need a odd digit with a while loop, counting how many odd digits in the tens.\\n\\nThen, we can count the digit we want from 0 to our last digit.\\n\\nAt last, we noticed that 0 is not accepted as an integer with even digit sum, so we deduct 1 from our total count.\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        # for every tens, count numbers which have even digit sum \\n        div, mod = divmod(num, 10)\\n        count = div * 5\\n\\t\\t\\n        # determine we need a odd last digit or even last digit\\n        odd = False\\n        while div:\\n            if div & 1:\\n                odd = not odd\\n            div //= 10\\n\\t\\t\\t\\n        # Adding suitable last digit   \\n        if odd:\\n            count += sum(1 for i in range(1,mod+1,2))\\n        else:\\n            count += sum(1 for i in range(0,mod+1,2))\\n\\t\\t\\n\\t\\t# remove 0 in our answer\\n        return count - 1\\n\\t\\t\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        # for every tens, count numbers which have even digit sum \\n        div, mod = divmod(num, 10)\\n        count = div * 5\\n\\t\\t\\n        # determine we need a odd last digit or even last digit\\n        odd = False\\n        while div:\\n            if div & 1:\\n                odd = not odd\\n            div //= 10\\n\\t\\t\\t\\n        # Adding suitable last digit   \\n        if odd:\\n            count += sum(1 for i in range(1,mod+1,2))\\n        else:\\n            count += sum(1 for i in range(0,mod+1,2))\\n\\t\\t\\n\\t\\t# remove 0 in our answer\\n        return count - 1\\n\\t\\t\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784892,
                "title": "shortes-and-easiest-c-solution-easy-to-understand",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\tint countEven(int num){\\n\\t\\t\\tint temp = num;\\n\\t\\t\\tint sum = 0;\\n\\t\\t\\t\\twhile(num){\\n\\t\\t\\t\\t\\tint rem = num % 10;\\n\\t\\t\\t\\t\\tnum /= 10;\\n\\t\\t\\t\\t\\tsum += rem;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(sum%2==0){\\n\\t\\t\\t\\t\\treturn temp/2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn (temp+1)/2-1;\\n\\t\\t\\t}\\n\\n\\t};\\n\\n\\n\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint countEven(int num){\\n\\t\\t\\tint temp = num;\\n\\t\\t\\tint sum = 0;\\n\\t\\t\\t\\twhile(num){\\n\\t\\t\\t\\t\\tint rem = num % 10;\\n\\t\\t\\t\\t\\tnum /= 10;\\n\\t\\t\\t\\t\\tsum += rem;\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1784871,
                "title": "c-easy-to-understand",
                "content": "We will iterate ```i``` from ```2 to num (inclusive)``` and will find sum of digit of each number and check if it\\'s divisible by 2, then we will increment ans by 1.\\nAnd at the end, we will ```return ans;```\\n```\\nclass Solution {\\n    int sumDigit(int n){\\n        int sm = 0;\\n        while(n){\\n            sm += n%10;\\n            n /= 10;\\n        }\\n        return sm;\\n    }\\npublic:\\n    int countEven(int num) {\\n        int cnt = 0;\\n        for(int i=2; i<=num; i++){\\n            if(sumDigit(i)%2==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```i```\n```2 to num (inclusive)```\n```return ans;```\n```\\nclass Solution {\\n    int sumDigit(int n){\\n        int sm = 0;\\n        while(n){\\n            sm += n%10;\\n            n /= 10;\\n        }\\n        return sm;\\n    }\\npublic:\\n    int countEven(int num) {\\n        int cnt = 0;\\n        for(int i=2; i<=num; i++){\\n            if(sumDigit(i)%2==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3692875,
                "title": "easy-solution-c-0ms-runtime-optimised",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for (int i=1; i<=num; i++)\\n        {\\n            int sum=0;\\n            int temp=i;\\n            while(temp>0)\\n            {\\n                int dig=temp%10;\\n                sum+=dig;\\n                temp/=10;\\n            }\\n            if (sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for (int i=1; i<=num; i++)\\n        {\\n            int sum=0;\\n            int temp=i;\\n            while(temp>0)\\n            {\\n                int dig=temp%10;\\n                sum+=dig;\\n                temp/=10;\\n            }\\n            if (sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3553008,
                "title": "simplest-efficient-c-code-time-o-nlogn-space-o-1",
                "content": "# Intuition\\nIn this code, we define two functions: digsum and countEven. The digsum function calculates the sum of the digits of a given number, while the countEven function counts the number of integers from 1 to a given number that have an even sum of digits.\\n\\n# Approach\\nThe digsum function takes an integer n as input and initializes a variable sum to 0. It then enters a while loop that continues as long as n is greater than 0. In each iteration, the last digit of n is obtained using the modulus operator % and added to the sum variable. Then, n is divided by 10 to remove the last digit. This process continues until all digits of n have been processed. Finally, the function returns the calculated sum.\\n\\nThe countEven function takes an integer num as input and initializes a variable count to 0. It then enters a for loop that iterates from 1 to num inclusive. In each iteration, it calls the digsum function with the current value of i and checks if the sum is even by taking the modulus % of the sum with 2. If the sum is even, it increments the count variable. After the loop completes, the function returns the final value of count.\\n\\n# Complexity\\n- Time complexity: The digsum function has a time complexity of O(log n), where n is the value of the input number. This is because in each iteration of the while loop, the number n is divided by 10, reducing its size by a factor of 10. The countEven function has a time complexity of O(num * log num), as it calls the digsum function for each value from 1 to num. Therefore, the overall time complexity is $O(num * log num)$.\\n\\n- Space complexity: The space complexity of both functions is $O(1)$ because they only use a fixed amount of memory to store the variables sum and count.\\n\\n# Code\\n```\\nint digsum(int n)\\n{\\n    int sum = 0;\\n    while(n>0)\\n    {\\n        sum += n%10;\\n        n/=10;\\n    }\\n    return sum;\\n}\\nint countEven(int num)\\n{\\n    int count = 0;\\n    for(int i = 1;i<=num;i++)\\n    {\\n        if(digsum(i)%2==0)\\n        count++;\\n    }\\n    return count;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint digsum(int n)\\n{\\n    int sum = 0;\\n    while(n>0)\\n    {\\n        sum += n%10;\\n        n/=10;\\n    }\\n    return sum;\\n}\\nint countEven(int num)\\n{\\n    int count = 0;\\n    for(int i = 1;i<=num;i++)\\n    {\\n        if(digsum(i)%2==0)\\n        count++;\\n    }\\n    return count;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3452768,
                "title": "beats-97-62-js-sol-with-comments-to-understand",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nHere we\\'ll loop through num and then break the number into digits individually and get the sum.\\nThen we\\'ll assign the added digits to temp and check if the temp value is even, if it is even then we\\'ll increment the count value and later return it.\\n\\n# Code\\n```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n  let count = 0;\\n\\n  for(let i=2; i<=num; i++) {\\n    let temp = 0;\\n    let number = i\\n\\n    // here we\\'ll break the number into single digit and add it\\n    // temp value\\n    while(number !== 0) {\\n      temp += number%10;\\n      number = Math.trunc(number/10);\\n    }\\n    // we\\'ll check if the added digits value is even then we\\'ll\\n    // increment the count value by 1 and then temp is set to zero\\n    if(temp % 2 === 0) {\\n      count++;\\n    }\\n    temp = 0;\\n  }\\n  return count;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n  let count = 0;\\n\\n  for(let i=2; i<=num; i++) {\\n    let temp = 0;\\n    let number = i\\n\\n    // here we\\'ll break the number into single digit and add it\\n    // temp value\\n    while(number !== 0) {\\n      temp += number%10;\\n      number = Math.trunc(number/10);\\n    }\\n    // we\\'ll check if the added digits value is even then we\\'ll\\n    // increment the count value by 1 and then temp is set to zero\\n    if(temp % 2 === 0) {\\n      count++;\\n    }\\n    temp = 0;\\n  }\\n  return count;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3345513,
                "title": "easy-python-solution-counteven-beats-97",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        c=0\\n        for i in range(2,num+1):\\n            sum,j = 0,i\\n            while j != 0:\\n                d = j % 10\\n                sum = sum + d\\n                j = j // 10\\n            if sum % 2 == 0:\\n                c += 1\\n        return c\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        c=0\\n        for i in range(2,num+1):\\n            sum,j = 0,i\\n            while j != 0:\\n                d = j % 10\\n                sum = sum + d\\n                j = j // 10\\n            if sum % 2 == 0:\\n                c += 1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3275817,
                "title": "c-100-faster-solution-digit-sum",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool digitSum(int n) {\\n        int sum = 0;\\n        while(n > 0) {\\n            sum += n % 10;\\n            n /= 10;\\n        }\\n        return sum % 2 == 0;\\n    }\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i=1; i<=num; i++) ans += digitSum(i);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool digitSum(int n) {\\n        int sum = 0;\\n        while(n > 0) {\\n            sum += n % 10;\\n            n /= 10;\\n        }\\n        return sum % 2 == 0;\\n    }\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i=1; i<=num; i++) ans += digitSum(i);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3202787,
                "title": "count-integers-with-even-digit-sum-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(nm)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int i, j, count=0, sum=0;\\n        for(i=1 ; i<=num ; i++)\\n        {\\n            j = i;\\n            sum=0;\\n            while(j>0)\\n            {\\n                sum += j%10;\\n                j = j/10;\\n            }\\n            if(sum%2==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int i, j, count=0, sum=0;\\n        for(i=1 ; i<=num ; i++)\\n        {\\n            j = i;\\n            sum=0;\\n            while(j>0)\\n            {\\n                sum += j%10;\\n                j = j/10;\\n            }\\n            if(sum%2==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3174876,
                "title": "faster-than-100-of-solutions-c",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count = 0 ;\\n        for(int i=1 ; i<=num ; i++){\\n            int sum = 0 ;\\n            int x = i ;\\n            while(x){\\n                int digit = x%10 ;\\n                sum += digit ;\\n                x /= 10 ;\\n            }        \\n            if(sum % 2 == 0){\\n                count++ ;\\n            }\\n        }\\n        return count ;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count = 0 ;\\n        for(int i=1 ; i<=num ; i++){\\n            int sum = 0 ;\\n            int x = i ;\\n            while(x){\\n                int digit = x%10 ;\\n                sum += digit ;\\n                x /= 10 ;\\n            }        \\n            if(sum % 2 == 0){\\n                count++ ;\\n            }\\n        }\\n        return count ;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3158640,
                "title": "easiest-python-solution",
                "content": "\\n# Code\\n```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        c=0\\n        for i in range(2,num+1):\\n            s=sum([int(a) for a in str(i)])\\n            if s%2==0:\\n                c+=1\\n        return c\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        c=0\\n        for i in range(2,num+1):\\n            s=sum([int(a) for a in str(i)])\\n            if s%2==0:\\n                c+=1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3147060,
                "title": "beats-90-58-count-integers-with-even-digit-sum",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count=0\\n        for i in range(2,num+1):\\n            sum=0\\n            while i!=0:\\n                sum+=i%10\\n                i=i//10\\n            if sum%2==0:\\n                count+=1\\n        return count\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count=0\\n        for i in range(2,num+1):\\n            sum=0\\n            while i!=0:\\n                sum+=i%10\\n                i=i//10\\n            if sum%2==0:\\n                count+=1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3144188,
                "title": "simple-c-code-easy-beats-100",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nfirst checked if num is less than 10 and returned count of even numbers if it is, then after checked digit sum of numbers and returned count, \\n\\ndry run the code you will understand it better, \\u270C\\n\\n# Complexity\\nRuntime : Beats 100%\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int c=0;\\n        if(num<10){\\n            for(int i=1;i<=num;i++){\\n                if(i%2==0){\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }else{\\n            for(int i=1;i<=num;i++){\\n                int z=i;\\n                int x=0;\\n                while(z){\\n                    x=x+(z%10);\\n                    z/=10;\\n                }\\n                if(x%2==0){\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n        return -1;\\n    }\\n};\\n```\\n\\nHope you liked the implementation of the code, if you like it feel free to upvote \\uD83D\\uDC4D",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int c=0;\\n        if(num<10){\\n            for(int i=1;i<=num;i++){\\n                if(i%2==0){\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }else{\\n            for(int i=1;i<=num;i++){\\n                int z=i;\\n                int x=0;\\n                while(z){\\n                    x=x+(z%10);\\n                    z/=10;\\n                }\\n                if(x%2==0){\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n        return -1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2976280,
                "title": "accepted-swift",
                "content": "```\\nclass Solution {\\n    func countEven(_ num: Int) -> Int {\\n        (1...num)\\n            .filter { String($0).map({ Int(String($0))! }).reduce(0, +) % 2 == 0 }\\n            .count\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func countEven(_ num: Int) -> Int {\\n        (1...num)\\n            .filter { String($0).map({ Int(String($0))! }).reduce(0, +) % 2 == 0 }\\n            .count\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2948349,
                "title": "easy-to-understand-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n    long long int c=0;\\n        for(int i=1; i<=num ; i++)\\n        {\\n            long long int j=i, ans=0;\\n            while(j>0)\\n            {\\n                ans += j%10;\\n                j=j/10;\\n            }\\n            if(ans%2==0)\\n            {\\n                c++;\\n            }\\n        }\\n        return c;\\n       }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n    long long int c=0;\\n        for(int i=1; i<=num ; i++)\\n        {\\n            long long int j=i, ans=0;\\n            while(j>0)\\n            {\\n                ans += j%10;\\n                j=j/10;\\n            }\\n            if(ans%2==0)\\n            {\\n                c++;\\n            }\\n        }\\n        return c;\\n       }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2906906,
                "title": "cpp-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(n2)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int n) {\\n        int c=0;\\n        for(int i=1;i<=n;i++){\\n            if(n<10){\\n                if(i%2==0){\\n                    c++;\\n\\n                }\\n            }\\n            else{\\n                int nn=i;\\n                int sum=0;\\n                while(nn!=0){\\n                    sum+=nn%10;\\n                    nn=nn/10;\\n\\n                }\\n                if(sum%2==0){\\n                    c++;\\n                }\\n            }\\n        }\\n   return c; }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int n) {\\n        int c=0;\\n        for(int i=1;i<=n;i++){\\n            if(n<10){\\n                if(i%2==0){\\n                    c++;\\n\\n                }\\n            }\\n            else{\\n                int nn=i;\\n                int sum=0;\\n                while(nn!=0){\\n                    sum+=nn%10;\\n                    nn=nn/10;\\n\\n                }\\n                if(sum%2==0){\\n                    c++;\\n                }\\n            }\\n        }\\n   return c; }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2867147,
                "title": "easiest-c-100-beats",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int k=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n        int sum=0;\\n        int x=i;\\n        while(x!=0)\\n        {\\n        int a=x%10;\\n        sum+=a;\\n        x=x/10;}\\n        if(sum%2==0){\\n            k++;\\n        }\\n        } return k;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int k=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n        int sum=0;\\n        int x=i;\\n        while(x!=0)\\n        {\\n        int a=x%10;\\n        sum+=a;\\n        x=x/10;}\\n        if(sum%2==0){\\n            k++;\\n        }\\n        } return k;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2856242,
                "title": "c-runtime-0-ms-100-faster-easy-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            int sum=0;\\n            int num=i;\\n            while(num!=0){\\n                int rem=num%10;\\n                sum+=rem;\\n                num=num/10;\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            int sum=0;\\n            int num=i;\\n            while(num!=0){\\n                int rem=num%10;\\n                sum+=rem;\\n                num=num/10;\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2849700,
                "title": "python-one-liner",
                "content": "def countEven(self, num: int) -> int:\\n        return sum([1 for i in range(1,num+1) if (sum(map(int,str(i))))%2==0])",
                "solutionTags": [],
                "code": "def countEven(self, num: int) -> int:\\n        return sum([1 for i in range(1,num+1) if (sum(map(int,str(i))))%2==0])",
                "codeTag": "Python3"
            },
            {
                "id": 2816437,
                "title": "swift-2-different-approach",
                "content": "# Bruteforce\\n```\\n    func countEven(_ num: Int) -> Int {\\n            func sumOfNUmbers(_ v: Int) -> Int {\\n                var v = v\\n                var sum = 0\\n                while v > 0 {\\n                    sum += v % 10\\n                    v = v / 10\\n                }\\n                return sum\\n            }\\n            var res = 0\\n            for i in 1...num {\\n                if sumOfNUmbers(i) % 2 == 0 {\\n                    res += 1\\n                }\\n            }\\n            return res\\n    }\\n```\\n# Math approach\\n```\\n\\n    func countEven(_ num: Int) -> Int {\\n        var x = num\\n        var sum = 0\\n            \\n        while x > 0 {\\n            sum += x % 10\\n            x = x / 10\\n        }\\n        \\n            \\n        if( num % 2 == 0 && sum % 2 == 0 )  {\\n            return num/2\\n        }\\n        \\n        return (num-1)/2\\n    }\\n\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\n    func countEven(_ num: Int) -> Int {\\n            func sumOfNUmbers(_ v: Int) -> Int {\\n                var v = v\\n                var sum = 0\\n                while v > 0 {\\n                    sum += v % 10\\n                    v = v / 10\\n                }\\n                return sum\\n            }\\n            var res = 0\\n            for i in 1...num {\\n                if sumOfNUmbers(i) % 2 == 0 {\\n                    res += 1\\n                }\\n            }\\n            return res\\n    }\\n```\n```\\n\\n    func countEven(_ num: Int) -> Int {\\n        var x = num\\n        var sum = 0\\n            \\n        while x > 0 {\\n            sum += x % 10\\n            x = x / 10\\n        }\\n        \\n            \\n        if( num % 2 == 0 && sum % 2 == 0 )  {\\n            return num/2\\n        }\\n        \\n        return (num-1)/2\\n    }\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2780166,
                "title": "java-easy-solution-o-n-log10-n",
                "content": "# Intuition\\nPlease upvote if you find it useful\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n*log10(n))\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean sumDigits(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=n%10;\\n            n/=10;\\n        }\\n        return (sum&1)==0;\\n    }\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(sumDigits(i)){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean sumDigits(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=n%10;\\n            n/=10;\\n        }\\n        return (sum&1)==0;\\n    }\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++){\\n            if(sumDigits(i)){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2746746,
                "title": "java-easy-to-understand-easy-solution",
                "content": "```\\nclass Solution {\\n    public int sumOfDigit(int number){\\n        int digit , sum = 0;\\n        while(number > 0)\\n        {\\n            digit = number % 10;\\n            sum = sum + digit;\\n            number = number / 10;\\n        }\\n        return sum;\\n    }\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <=num; i++) {\\n            if(sumOfDigit(i)%2==0) count++; \\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfDigit(int number){\\n        int digit , sum = 0;\\n        while(number > 0)\\n        {\\n            digit = number % 10;\\n            sum = sum + digit;\\n            number = number / 10;\\n        }\\n        return sum;\\n    }\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <=num; i++) {\\n            if(sumOfDigit(i)%2==0) count++; \\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2640435,
                "title": "with-explanation-comments-time-0-ms-100-00-space-5-9-mb-70-80",
                "content": "**Like it? ->Upvote please!** \\u30C4\\n\\n**Solution 1: **\\n\\nTC: O(n*log(n))\\nSC: O(1)\\nTime: 0 ms (100.00%), Space: 5.9 MB (70.80%)\\n\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n     \\n        //initialize a counter\\n        int counter=0;\\n        \\n        //loop over the whole numbers from 1 to the given number\\n        for(int i=1;i<=num;i++){\\n\\n            //initialize a temporary sum \\n            int sum=0, val=i;\\n            \\n            //loop until the current number value gets 0\\n            while(val!=0){\\n                //add the first digit value to the counter\\n                sum+=(val%10);\\n                //update the num by removing the first digit\\n                val/=10;\\n            }\\n            \\n            //check if the final sum of each loop is even\\n            if(sum%2==0)\\n                //if yes-> add the coutner by one\\n                counter++;\\n        }\\n        \\n        //return the final counter value\\n        return counter;\\n    }\\n};\\n\\'\\'\\'\\n\\n**Solution 2**\\n\\nTC: O(log(n))\\nSC: O(1)\\nTime: 0 ms (100.00%), Space: 5.9 MB (70.80%)\\n\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n     \\n        int val=num, sum=0;\\n        \\n        //loop until the current number value gets 0\\n        while(num!=0){\\n            //add the first digit value to the counter\\n            sum+=(num%10);\\n            //update the num by removing the first digit\\n            num/=10;\\n        }\\n\\n        //following the sum of the numbers pattern & getting this formula\\n        return (val-sum%2)/2;\\n        //return sum%2==0 ? val/2 : (val-1)/2;\\n    }\\n};\\n\\'\\'\\'\\n\\n**Like it? ->Upvote please!** \\u30C4\\n**If still not understood, feel free to comment. I will help you out**\\n**Happy Coding :)**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math",
                    "Simulation",
                    "Iterator"
                ],
                "code": "class Solution {\\npublic:\\n    int countEven(int num) {\\n     \\n        //initialize a counter\\n        int counter=0;\\n        \\n        //loop over the whole numbers from 1 to the given number\\n        for(int i=1;i<=num;i++){\\n\\n            //initialize a temporary sum \\n            int sum=0, val=i;\\n            \\n            //loop until the current number value gets 0\\n            while(val!=0){\\n                //add the first digit value to the counter\\n                sum+=(val%10);\\n                //update the num by removing the first digit\\n                val/=10;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2500831,
                "title": "ruby-one-line-simple-solution",
                "content": "```\\ndef count_even(num)\\n    (2..num).select{|i| i.digits.sum.even?}.size\\nend\\n```",
                "solutionTags": [
                    "Ruby"
                ],
                "code": "```\\ndef count_even(num)\\n    (2..num).select{|i| i.digits.sum.even?}.size\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2428935,
                "title": "easy-java-solution-just-created-a-function-to-check-even-sum-clean-code",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int res = 0;\\n        for(int i=2; i<=num; i++){\\n            if(evenDigitSum(i)) res++;\\n        }\\n        return res;\\n    }\\n    \\n    static boolean evenDigitSum(int n){\\n        int sum = 0;\\n        while(n > 0){\\n            int temp = n%10;\\n            sum += temp;\\n            n /= 10;\\n        }\\n        return sum%2 == 0;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int res = 0;\\n        for(int i=2; i<=num; i++){\\n            if(evenDigitSum(i)) res++;\\n        }\\n        return res;\\n    }\\n    \\n    static boolean evenDigitSum(int n){\\n        int sum = 0;\\n        while(n > 0){\\n            int temp = n%10;\\n            sum += temp;\\n            n /= 10;\\n        }\\n        return sum%2 == 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2411527,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\n    public boolean iseve(int num){\\n        int sum=0;\\n        while(num!=0){\\n            sum+=(num%10);\\n            num/=10;\\n        }\\n        return sum%2==0;\\n    }\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++){\\n            if(iseve(i)){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public boolean iseve(int num){\\n        int sum=0;\\n        while(num!=0){\\n            sum+=(num%10);\\n            num/=10;\\n        }\\n        return sum%2==0;\\n    }\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++){\\n            if(iseve(i)){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2411172,
                "title": "c-0ms-and-java-2ms-solution-easy-understanding",
                "content": "**C++ Solution**\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ret=0, tmp, i;\\n        num++;\\n        for(int j=2; j<num; j++){\\n            i=j;\\n            tmp=0;\\n            while(i>9){\\n                tmp += i%10;\\n                i/=10;\\n            }\\n            tmp+=i;\\n            if(tmp%2==0)\\n                ret++;\\n        }\\n        return ret;\\n    }\\n};\\n```\\n**Java Solution**\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ret=0, tmp, i;\\n        num++;\\n        for(int j=2; j<num; j++) {\\n            i=j;\\n            tmp=0;\\n            while(i>9){\\n                tmp += i%10;\\n                i/=10;\\n            }\\n            tmp+=i;\\n            if(tmp%2==0)\\n                ret++;\\n        }\\n        return ret;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ret=0, tmp, i;\\n        num++;\\n        for(int j=2; j<num; j++){\\n            i=j;\\n            tmp=0;\\n            while(i>9){\\n                tmp += i%10;\\n                i/=10;\\n            }\\n            tmp+=i;\\n            if(tmp%2==0)\\n                ret++;\\n        }\\n        return ret;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ret=0, tmp, i;\\n        num++;\\n        for(int j=2; j<num; j++) {\\n            i=j;\\n            tmp=0;\\n            while(i>9){\\n                tmp += i%10;\\n                i/=10;\\n            }\\n            tmp+=i;\\n            if(tmp%2==0)\\n                ret++;\\n        }\\n        return ret;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2351660,
                "title": "java-easy-solution",
                "content": "```class Solution {\\n    public int countEven(int num) {\\n        int ans = 0;\\n        for(int i =1;i<=num;i++){\\n            ans += gibe(i);\\n        }\\n        return ans;\\n    }\\n    public int gibe(int i){\\n        int total = 0;\\n        while(i>0){\\n            total += i%10;\\n            i /= 10;\\n        }\\n        if(total%2==1){\\n            return 0;\\n        }else{\\n            return 1;\\n        }\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int countEven(int num) {\\n        int ans = 0;\\n        for(int i =1;i<=num;i++){\\n            ans += gibe(i);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2346511,
                "title": "c-simple-solution",
                "content": "```\\n\\tint countEven(int num) {\\n        int res = 0;\\n        for(int i = 2; i <= num; i++){\\n            int cur = i, sum = 0;\\n            while(cur > 0){\\n                sum += (cur % 10);\\n                cur /= 10;\\n            }\\n            if(sum % 2 == 0) res++;\\n        }\\n        return res;\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\tint countEven(int num) {\\n        int res = 0;\\n        for(int i = 2; i <= num; i++){\\n            int cur = i, sum = 0;\\n            while(cur > 0){\\n                sum += (cur % 10);\\n                cur /= 10;\\n            }\\n            if(sum % 2 == 0) res++;\\n        }\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2320209,
                "title": "easy-cpp-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count = 0;\\n        for(int i = 1 ; i <= num ; i++){\\n            if(check(i))\\n                count++;\\n        }\\n        return count;\\n    }\\n      bool check(int n){\\n          int sum = 0 ; \\n          while(n!=0){\\n              int d = n%10;\\n              n = n/10;\\n              sum += d;\\n          }\\n         if(sum%2==0)\\n             return 1;\\n          return 0;\\n      }\\n};\\n```\\n##### Please upvote if you find this helpful\\n[https://github.com/Reehan9/Leetcode-Solutions](http://)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count = 0;\\n        for(int i = 1 ; i <= num ; i++){\\n            if(check(i))\\n                count++;\\n        }\\n        return count;\\n    }\\n      bool check(int n){\\n          int sum = 0 ; \\n          while(n!=0){\\n              int d = n%10;\\n              n = n/10;\\n              sum += d;\\n          }\\n         if(sum%2==0)\\n             return 1;\\n          return 0;\\n      }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2283121,
                "title": "javascript-solution-faster-than-80",
                "content": "```\\nvar countEven = function(num) {\\n    let count=0;\\n    for(let i=2;i<=num;i++){\\n        if(isEven(i)%2==0){\\n            count++;\\n        }\\n    }\\n    return count\\n};\\n\\nconst isEven = (c) =>{\\n    let sum=0;\\n    while(c>0){\\n        sum+=(c%10)\\n        c=Math.floor(c/10)\\n    }\\n    return sum\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countEven = function(num) {\\n    let count=0;\\n    for(let i=2;i<=num;i++){\\n        if(isEven(i)%2==0){\\n            count++;\\n        }\\n    }\\n    return count\\n};\\n\\nconst isEven = (c) =>{\\n    let sum=0;\\n    while(c>0){\\n        sum+=(c%10)\\n        c=Math.floor(c/10)\\n    }\\n    return sum\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2279730,
                "title": "java-easy-0ms-100-beat",
                "content": "![image](https://assets.leetcode.com/users/images/cd7f9106-31b4-4c93-9b1e-3fda19f645e7_1657773618.2788303.png)\\n\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        return sumOfDigits(num) % 2 == 0 ? num / 2 : (num - 1) / 2;\\n    }\\n    \\n    private int sumOfDigits(int num) {\\n        int sum = 0;\\n        while(num > 0) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        return sumOfDigits(num) % 2 == 0 ? num / 2 : (num - 1) / 2;\\n    }\\n    \\n    private int sumOfDigits(int num) {\\n        int sum = 0;\\n        while(num > 0) {\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2262535,
                "title": "o-1-formula-based-c",
                "content": "```\\n    public int CountEven(int num) {\\n        var res = 0;\\n\\t\\t\\n\\t\\t//Formula to calculate number of even digit sum for the last num - num%10 number\\n\\t\\t//Example: For 123 res = 5*(123/10)-1 = 5*12 -1 = 59 \\n\\t\\t//for remaining 4 numbers we can check and calculate\\n\\t\\t//-1 in formula because 0 isn\\'t considered\\n        if(num>10) res = 5*(num/10) - 1;\\n\\t\\t\\n\\t\\t\\n        //This loop runs atmost 9 times \\n        for(int i = num%10; i>=0; i--)\\n        {\\n            var test = num - i;\\n            var sum = 0;\\n            \\n\\t\\t\\t//0 is not included in the solution \\n            if(test == 0) continue;\\n            \\n\\t\\t\\t//This can grow to O(log10(n)) if the number of digits are high and not just 3 as mentioned in the constraint\\n            while(test>0)\\n            {\\n                sum+= test%10;\\n                test = test/10;\\n            }\\n            \\n            if((sum&1)==0) res++;\\n            \\n        }\\n        \\n        return res;\\n        \\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int CountEven(int num) {\\n        var res = 0;\\n\\t\\t\\n\\t\\t//Formula to calculate number of even digit sum for the last num - num%10 number\\n\\t\\t//Example: For 123 res = 5*(123/10)-1 = 5*12 -1 = 59 \\n\\t\\t//for remaining 4 numbers we can check and calculate\\n\\t\\t//-1 in formula because 0 isn\\'t considered\\n        if(num>10) res = 5*(num/10) - 1;\\n\\t\\t\\n\\t\\t\\n        //This loop runs atmost 9 times \\n        for(int i = num%10; i>=0; i--)\\n        {\\n            var test = num - i;\\n            var sum = 0;\\n            \\n\\t\\t\\t//0 is not included in the solution \\n            if(test == 0) continue;\\n            \\n\\t\\t\\t//This can grow to O(log10(n)) if the number of digits are high and not just 3 as mentioned in the constraint\\n            while(test>0)\\n            {\\n                sum+= test%10;\\n                test = test/10;\\n            }\\n            \\n            if((sum&1)==0) res++;\\n            \\n        }\\n        \\n        return res;\\n        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2132158,
                "title": "easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        for(int i=1;i<=num;i++)\\n        {\\n            int n = i;\\n            int count=0;\\n            while(n!=0)\\n            {\\n                count += n%10;\\n                n/=10;\\n            }\\n            if(count%2==0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        for(int i=1;i<=num;i++)\\n        {\\n            int n = i;\\n            int count=0;\\n            while(n!=0)\\n            {\\n                count += n%10;\\n                n/=10;\\n            }\\n            if(count%2==0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2095706,
                "title": "c-code-easy-to-understand-with-all-explanation-and-comments-runtime-0-ms",
                "content": "The traditional solution which you can find everywhere is the brute force one which will iterate through all the numbers in the range [1,n] and count one by one if sum of digits is even or not.\\nAccording to question contraint this brute force approch will also work very fine.\\n\\nI have another mathematical solution which is not hard to understand but is just slight tricky and based on simple observation\\n\\n\\nexplanation - \\n\\n 1.> what we observe is suppose a number x has sum of digit as even then x+1 will have sum of digit as odd and if x has sum of digit as odd then x+1 will have sum of digit as even\\n 2.> so for a sequence of numbers in between [1,n] both inclusive , alternatively we have odd sum of digits and even sum of digits.\\n 3.>so we can say for a number n , if sum of digit of n is even then our answer is n/2 otherwise it is (n-1)/2 \\n \\n **Please upvote**\\n\\n```\\nclass Solution {\\npublic:\\n     \\n    int countEven(int num) \\n    {\\n        int temp=num;\\n\\t\\t\\n\\t\\t// This do while loop calculates the sum of digit of number **num** which is stored in \\n\\t\\t//temp variable beacuse we need original number **num** for our final answer so we \\n\\t\\t//have created a duplicate\\n        int sum=0;\\n        do\\n        sum+=temp%10;\\n        while(temp/=10);\\n        \\n\\t\\t// Now we have value of sum just check if its even or not and then apply the formula for getting the answer as explained\\n\\t\\t\\n        return (sum%2)? ((num-1)/2) :(num/2) ;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n     \\n    int countEven(int num) \\n    {\\n        int temp=num;\\n\\t\\t\\n\\t\\t// This do while loop calculates the sum of digit of number **num** which is stored in \\n\\t\\t//temp variable beacuse we need original number **num** for our final answer so we \\n\\t\\t//have created a duplicate\\n        int sum=0;\\n        do\\n        sum+=temp%10;\\n        while(temp/=10);\\n        \\n\\t\\t// Now we have value of sum just check if its even or not and then apply the formula for getting the answer as explained\\n\\t\\t\\n        return (sum%2)? ((num-1)/2) :(num/2) ;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1999028,
                "title": "few-lines-of-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int digitsum(int num){\\n      if(num==0){\\n        return 0;\\n      }\\n      return num%10 + digitsum(num/10);\\n    }\\n  \\n    int countEven(int num) {\\n//       if the the number is even\\n      if(digitsum(num)%2==0){return num/2;}\\n//  if the the number is odd\\n      return (num+1)/2 -1;\\n    }\\n};\\n```\\n**Please upvote! Happy coding**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int digitsum(int num){\\n      if(num==0){\\n        return 0;\\n      }\\n      return num%10 + digitsum(num/10);\\n    }\\n  \\n    int countEven(int num) {\\n//       if the the number is even\\n      if(digitsum(num)%2==0){return num/2;}\\n//  if the the number is odd\\n      return (num+1)/2 -1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1973690,
                "title": "python-1-liner-beats-97",
                "content": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        return (num-1)//2 if sum(int(n) for n in str(num))%2 else num//2\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        return (num-1)//2 if sum(int(n) for n in str(num))%2 else num//2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1946068,
                "title": "python3-o-1-time-no-math-trick-2-line-for-fun",
                "content": "Brute force doesn\\'t work if number is huge, like 10,000,000,000,000,000. To handle huge number, this quiestion is not easy.\\n\\nTaking \"3567\" for example, if first digit is <3, then 0000~1000, 1000~2000, 2000~3000, each has 1000/2 results.\\nIf first digit equals 3, then 3000 ~ 3100, 3100~3200, 3200~3300, 3300~3400, 3400~3500, each has 100/2 results.\\nDo the same thing for numbers starting with \"35\", \"356\".\\nThe last digit \"356**x**\" need to be specially handled, we only choose from 0~7 to make 3+5+6+**x** an even number.\\n\\nTime complexity: O(log(num)), O(1) if num is the size of int.\\n```\\n    def countEven(self, num: int) -> int:\\n        nums = [int(c) for c in str(num)[::-1]]\\n        # 3567 for example\\n        a = sum(nums[i]*(10**i)//2 for i in range(1,len(nums))) # 0~3559\\n        b = (nums[0]+2-sum(nums[1:])%2)//2 # result for 3560~3567\\n        return a + b - 1 # -1 to exclude \\'0\\'\\n```\\nRemoving comments, the above solution is actually only 2 lines:\\n```\\n    def countEven(self, num: int) -> int:\\n        nums = [int(c) for c in str(num)[::-1]]\\n        return sum(nums[i]*(10**i)//2 for i in range(1,len(nums))) + (nums[0]+2-sum(nums[1:])%2)//2 -1\\n```\\n\\nActually, we can find out that if sum of digits is even, the result is num/2, if odd, the result is (num-1)/2, but this is hard to think of and proof. \\n",
                "solutionTags": [],
                "code": "```\\n    def countEven(self, num: int) -> int:\\n        nums = [int(c) for c in str(num)[::-1]]\\n        # 3567 for example\\n        a = sum(nums[i]*(10**i)//2 for i in range(1,len(nums))) # 0~3559\\n        b = (nums[0]+2-sum(nums[1:])%2)//2 # result for 3560~3567\\n        return a + b - 1 # -1 to exclude \\'0\\'\\n```\n```\\n    def countEven(self, num: int) -> int:\\n        nums = [int(c) for c in str(num)[::-1]]\\n        return sum(nums[i]*(10**i)//2 for i in range(1,len(nums))) + (nums[0]+2-sum(nums[1:])%2)//2 -1\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1944525,
                "title": "c-simple-solution-brute-force-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int j=2;j<=num;j++){\\n            int i=j,sum=0;\\n            while(i>0){\\n                int temp = i%10;\\n                sum += temp;\\n                i = i/10;\\n            }\\n            if(sum%2==0){\\n                count+=1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int j=2;j<=num;j++){\\n            int i=j,sum=0;\\n            while(i>0){\\n                int temp = i%10;\\n                sum += temp;\\n                i = i/10;\\n            }\\n            if(sum%2==0){\\n                count+=1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1847818,
                "title": "java-solution-easy-to-understand",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        while(num>0){\\n            if(digitSum(num)){\\n                count++;\\n            }\\n            num--;\\n        }\\n        return count;\\n    }\\n    public boolean digitSum(int val){\\n        int sum = 0;\\n        while(val > 0){\\n            int temp = val%10;\\n            sum += temp;\\n            val /= 10;\\n        }\\n        return (sum&1)==0 ? true : false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        while(num>0){\\n            if(digitSum(num)){\\n                count++;\\n            }\\n            num--;\\n        }\\n        return count;\\n    }\\n    public boolean digitSum(int val){\\n        int sum = 0;\\n        while(val > 0){\\n            int temp = val%10;\\n            sum += temp;\\n            val /= 10;\\n        }\\n        return (sum&1)==0 ? true : false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1835273,
                "title": "java-easy-2ms-simple",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int c=0;\\n        for(int i=1;i<=num;i++){\\n            if(sum(i)){\\n                c++;\\n            }\\n        }\\n        return c;\\n    }\\n    public boolean sum(int n){\\n        int digit=0;\\n        int sum=0;\\n        while(n > 0)  \\n        {     \\n        digit = n % 10;  \\n        sum = sum + digit;  \\n        n = n / 10;  \\n        }\\n        return sum%2==0?true:false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int c=0;\\n        for(int i=1;i<=num;i++){\\n            if(sum(i)){\\n                c++;\\n            }\\n        }\\n        return c;\\n    }\\n    public boolean sum(int n){\\n        int digit=0;\\n        int sum=0;\\n        while(n > 0)  \\n        {     \\n        digit = n % 10;  \\n        sum = sum + digit;  \\n        n = n / 10;  \\n        }\\n        return sum%2==0?true:false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1821515,
                "title": "python-1-liner",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        return sum(sum(int(digit) for digit in str(x)) % 2 == 0 for x in range(1,num+1))\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        return sum(sum(int(digit) for digit in str(x)) % 2 == 0 for x in range(1,num+1))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1795982,
                "title": "brute-force",
                "content": "int even(int num)\\n    {\\n        int tmp = 0;\\n        while(num > 0)\\n        {\\n            tmp += num%10;\\n            num /= 10;\\n        }\\n        return tmp;\\n    }\\n    \\n    int countEven(int num) {\\n        \\n        int count = 0;\\n        for(int i=1;i<num + 1;i++)  //For checking the Nth Number also\\n            if(even(i)%2 == 0)\\n                count++;\\n        \\n        return count;\\n    }",
                "solutionTags": [],
                "code": "int even(int num)\\n    {\\n        int tmp = 0;\\n        while(num > 0)\\n        {\\n            tmp += num%10;\\n            num /= 10;\\n        }\\n        return tmp;\\n    }\\n    \\n    int countEven(int num) {\\n        \\n        int count = 0;\\n        for(int i=1;i<num + 1;i++)  //For checking the Nth Number also\\n            if(even(i)%2 == 0)\\n                count++;\\n        \\n        return count;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1795539,
                "title": "c-easy-to-understand",
                "content": "int countEven(int num) {\\n        int temp  = num;     //store in temp value(imp).\\n        int sum =0;\\n         while(num>0){\\n           sum  = sum + num%10;\\n           num =  num / 10;\\n }\\n        if(sum%2 == 0){\\n            return temp/2;\\n        }\\n        else{\\n            return (int)(temp-1)/2;\\n        }\\n        return 0;\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "int countEven(int num) {\\n        int temp  = num;     //store in temp value(imp).\\n        int sum =0;\\n         while(num>0){\\n           sum  = sum + num%10;\\n           num =  num / 10;\\n }\\n        if(sum%2 == 0){\\n            return temp/2;\\n        }\\n        else{\\n            return (int)(temp-1)/2;\\n        }\\n        return 0;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1793315,
                "title": "python-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef countEven(self, num: int) -> int:\\n\\t\\t\\tt = num\\n\\t\\t\\ts = 0\\n\\t\\t\\twhile num > 0:\\n\\t\\t\\t\\ts = s + num%10\\n\\t\\t\\t\\tnum = num//10\\n\\t\\t\\treturn t//2 if s%2 == 0 else (t-1)//2\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "\\tclass Solution:\\n\\t\\tdef countEven(self, num: int) -> int:\\n\\t\\t\\tt = num\\n\\t\\t\\ts = 0\\n\\t\\t\\twhile num > 0:\\n\\t\\t\\t\\ts = s + num%10\\n\\t\\t\\t\\tnum = num//10\\n\\t\\t\\treturn t//2 if s%2 == 0 else (t-1)//2\\n",
                "codeTag": "Java"
            },
            {
                "id": 1792573,
                "title": "javascript-js",
                "content": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function (num) {\\n  let result = 0;\\n\\n  for (let i = 1; i <= num; i++) {\\n    let sum = i\\n      .toString()\\n      .split(\"\")\\n      .reduce((a, b) => +a + +b);\\n    if (sum % 2 === 0) {\\n      result++;\\n    }\\n  }\\n\\n  return result;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function (num) {\\n  let result = 0;\\n\\n  for (let i = 1; i <= num; i++) {\\n    let sum = i\\n      .toString()\\n      .split(\"\")\\n      .reduce((a, b) => +a + +b);\\n    if (sum % 2 === 0) {\\n      result++;\\n    }\\n  }\\n\\n  return result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1789773,
                "title": "rust-solution",
                "content": "```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        let sum_dig_is_even = |mut x: i32| -> bool {\\n            let mut s = 0;\\n            while x > 0 {\\n                s += x % 10;\\n                x /= 10;\\n            }\\n            s % 2 == 0\\n        };\\n        (1..=num).filter(|&x| sum_dig_is_even(x)).count() as _\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        let sum_dig_is_even = |mut x: i32| -> bool {\\n            let mut s = 0;\\n            while x > 0 {\\n                s += x % 10;\\n                x /= 10;\\n            }\\n            s % 2 == 0\\n        };\\n        (1..=num).filter(|&x| sum_dig_is_even(x)).count() as _\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1786167,
                "title": "python-o-logn-100-faster",
                "content": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        k=num\\n        num=num-num%10\\n        a=0\\n        while(num):\\n            a+=num%10\\n            num=num//10\\n        if (a)%2==0:\\n            return k//2\\n        if (a)%2!=0:\\n            return (k+1)//2-1\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        k=num\\n        num=num-num%10\\n        a=0\\n        while(num):\\n            a+=num%10\\n            num=num//10\\n        if (a)%2==0:\\n            return k//2\\n        if (a)%2!=0:\\n            return (k+1)//2-1\\n",
                "codeTag": "Java"
            },
            {
                "id": 1785971,
                "title": "time-complexity-o-1-100-faster-0ms-runtime-c",
                "content": "![Uploading file...]()\\nThere is  pattern in every row of ten digits.\\n0,1,2,3,4,5,6,7,8,9 *[4]*\\n10,11,12,13,14,15,16,17,18,19 *[5]*\\n20,21,22,23,24,25,26,27,28,29 *[5]*\\n\\nAlgorithm:\\n1. Every row has 5 numbers whose digit sum are even exept 0th row(because 0 is not included)\\n2. So we need to find in which row  and coloumn is your number: *We will divide num by 10  to find row and num % 10 to find row *\\n3. As every row has 5 such digits (whose digit sum are even) we will multiply number_of_row * 5 and subtract 1 because 0 is not included.\\n4. Next step  for coloumn : *Check the direction is it left to right or right to left* and use even or odd aray accordingly\\n\\n\\n\\nclass Solution {\\npublic:\\nint countEven(int num) {\\n\\t\\t\\n\\t\\t//even[i] is the prefix sum numbers  whose digit sum is even.\\n\\t\\t\\n        int even[10] = {1, 1, 2, 2, 3, 3, 4, 4, 5, 5};\\n\\t\\tint odd[10] = {0, 1, 1, 2, 2, 3, 3, 4, 4, 5};\\n    \\n        bool direction = 0;\\n        \\n        if((num / 100) % 2 != 0)direction = 1;\\n        if(num >= 1000 && num <= 10000)direction = !direction;\\n        int count = 0;\\n        int inCol = num % 10;   \\n        int inRow = num / 10;\\n        \\n        count += inRow * 5 - 1;\\n        \\n    if(direction)swap(even, odd);\\n    \\n    if(inRow % 2 == 0)count += even[inCol]; \\n        else count += odd[inCol];\\n        \\n        \\n    return count;\\n        \\n    }\\n};\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\nint countEven(int num) {\\n\\t\\t\\n\\t\\t//even[i] is the prefix sum numbers  whose digit sum is even.\\n\\t\\t\\n        int even[10] = {1, 1, 2, 2, 3, 3, 4, 4, 5, 5}",
                "codeTag": "Java"
            },
            {
                "id": 1785964,
                "title": "easy-solution-o-n-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int a=num%10;\\n        int b=(num/10)%10;\\n        int c=num/100;\\n        if(num==1000){\\n            return 499;\\n        }\\n        int sum=0;\\n        sum+=(c*50);\\n        if((b+c)%2==0){\\n            sum+=(b*5);\\n        }\\n        else{\\n            sum+=(b*5);\\n            sum=sum-1;\\n        }\\n        for(int i=1;i<=a;i++){\\n            if(0==(b+i+c)%2){\\n                //cout<<\"here\"<<endl;\\n                sum++;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int a=num%10;\\n        int b=(num/10)%10;\\n        int c=num/100;\\n        if(num==1000){\\n            return 499;\\n        }\\n        int sum=0;\\n        sum+=(c*50);\\n        if((b+c)%2==0){\\n            sum+=(b*5);\\n        }\\n        else{\\n            sum+=(b*5);\\n            sum=sum-1;\\n        }\\n        for(int i=1;i<=a;i++){\\n            if(0==(b+i+c)%2){\\n                //cout<<\"here\"<<endl;\\n                sum++;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1785861,
                "title": "c-simple-o-1-solution",
                "content": "I just tried to find a pattern in numbers where we need to decrement num or not before dividing it by 2. I\\'ve noticed the switch of this decision is happening at 10n, 100n, 100n etc. numbers. And since num <= 1000, we dont have to check it for > 1000 numbers. Which makes this O(1).\\n```\\n    public int CountEven(int num) {\\n        bool toDecrement = false;\\n        if (num / 10 % 2 == 1) toDecrement = !toDecrement;\\n        if (num / 100 % 2 == 1) toDecrement = !toDecrement;\\n        if (num / 1000 % 2 == 1) toDecrement = !toDecrement;\\n        if (toDecrement) num--;\\n        return num / 2;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int CountEven(int num) {\\n        bool toDecrement = false;\\n        if (num / 10 % 2 == 1) toDecrement = !toDecrement;\\n        if (num / 100 % 2 == 1) toDecrement = !toDecrement;\\n        if (num / 1000 % 2 == 1) toDecrement = !toDecrement;\\n        if (toDecrement) num--;\\n        return num / 2;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1785795,
                "title": "python-easy-to-understand-o-nlogn-100-acceptance",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(1, num + 1):\\n            n = i\\n            sum = 0\\n            while(n):\\n                sum += n % 10\\n                n //= 10\\n                \\n            if(sum % 2 == 0):\\n                count += 1\\n                \\n        return count\\n            \\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(1, num + 1):\\n            n = i\\n            sum = 0\\n            while(n):\\n                sum += n % 10\\n                n //= 10\\n                \\n            if(sum % 2 == 0):\\n                count += 1\\n                \\n        return count\\n            \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785761,
                "title": "python-easy-solution",
                "content": "```\\ndef countEven(self, num: int) -> int:\\n\\tans = 0\\n\\tfor i in range(1, num+1):\\n\\t\\tif self.digit_sum_even(i):\\n\\t\\t\\tans += 1\\n\\treturn ans        \\n\\ndef digit_sum_even(self, n):\\n\\tls = [int(x) for x in str(n)]\\n\\ta = sum(ls)\\n\\tif a % 2 == 0:\\n\\t\\treturn True\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef countEven(self, num: int) -> int:\\n\\tans = 0\\n\\tfor i in range(1, num+1):\\n\\t\\tif self.digit_sum_even(i):\\n\\t\\t\\tans += 1\\n\\treturn ans        \\n\\ndef digit_sum_even(self, n):\\n\\tls = [int(x) for x in str(n)]\\n\\ta = sum(ls)\\n\\tif a % 2 == 0:\\n\\t\\treturn True\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1785450,
                "title": "count-integers-with-even-digit-sum-java-solution-easy",
                "content": "```\\nclass Solution {\\n    public int digitsum(int i ){\\n        int sum =0;\\n        while(i!=0){\\n            int rem = i%10;\\n            sum = sum+rem;\\n            i=i/10;\\n        }\\n        return sum;\\n    }\\n    public int countEven(int num) {\\n       int count =0;\\n        for(int i =1;i<=num;i++){\\n            int ans = digitsum(i);\\n            if(ans%2==0)\\n                count++;\\n            \\n        }\\n        return count;\\n    \\n}\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int digitsum(int i ){\\n        int sum =0;\\n        while(i!=0){\\n            int rem = i%10;\\n            sum = sum+rem;\\n            i=i/10;\\n        }\\n        return sum;\\n    }\\n    public int countEven(int num) {\\n       int count =0;\\n        for(int i =1;i<=num;i++){\\n            int ans = digitsum(i);\\n            if(ans%2==0)\\n                count++;\\n            \\n        }\\n        return count;\\n    \\n}\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785286,
                "title": "java-easy-solution",
                "content": "\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i = 1; i <= num; i++){\\n            if(getDigitSum(i)) count++;\\n        }\\n        return count;\\n    }\\n    \\n    boolean getDigitSum(int num){\\n        int sum = 0;\\n        while (num > 0){\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return (sum % 2 == 0);\\n    }",
                "solutionTags": [],
                "code": "\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i = 1; i <= num; i++){\\n            if(getDigitSum(i)) count++;\\n        }\\n        return count;\\n    }\\n    \\n    boolean getDigitSum(int num){\\n        int sum = 0;\\n        while (num > 0){\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        return (sum % 2 == 0);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1785252,
                "title": "simple-solution",
                "content": "```\\npublic int CountEven(int num) \\n{\\n\\tint count = 0;\\n\\tfor (int i = 1; i <= num; i++)\\n\\t{\\n\\t\\tint Digit = i;\\n\\t\\tint sum = 0;\\n\\t\\twhile (Digit > 0)\\n\\t\\t{\\n\\t\\t\\tint rem = Digit % 10;\\n\\t\\t\\tDigit = Digit / 10;\\n\\t\\t\\tsum = sum + rem;\\n\\t\\t}\\n\\t\\tif (sum % 2 == 0)\\n\\t\\t\\tcount++;\\n\\t}\\n\\treturn count;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic int CountEven(int num) \\n{\\n\\tint count = 0;\\n\\tfor (int i = 1; i <= num; i++)\\n\\t{\\n\\t\\tint Digit = i;\\n\\t\\tint sum = 0;\\n\\t\\twhile (Digit > 0)\\n\\t\\t{\\n\\t\\t\\tint rem = Digit % 10;\\n\\t\\t\\tDigit = Digit / 10;\\n\\t\\t\\tsum = sum + rem;\\n\\t\\t}\\n\\t\\tif (sum % 2 == 0)\\n\\t\\t\\tcount++;\\n\\t}\\n\\treturn count;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1784966,
                "title": "o-1-solution-optimized",
                "content": "Half will be even and half odd.\\nJust check last \\nIf sum of last is odd that means 1 extra odd sum num in the set (as we begin from odd sum and alternate between odd and even sum)\\nPlease Like share and subuscribe\\n        \\n      int z=(num%10)+((num/10)%10)+((num/100)%10)+((num/1000)%10);\\n        return (num-(z&1))/2; // check last num sum is odd or not\\n        \\n",
                "solutionTags": [],
                "code": "Half will be even and half odd.\\nJust check last \\nIf sum of last is odd that means 1 extra odd sum num in the set (as we begin from odd sum and alternate between odd and even sum)\\nPlease Like share and subuscribe\\n        \\n      int z=(num%10)+((num/10)%10)+((num/100)%10)+((num/1000)%10);\\n        return (num-(z&1))/2; // check last num sum is odd or not\\n        \\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1784894,
                "title": "java-solution",
                "content": "\\n\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i = 2; i<=num; i++){\\n            if(digitSum(i)%2==0) count++;\\n        }\\n        return count;\\n    }\\n    public int digitSum(int num){\\n        int sum = 0;\\n        while(num>0){\\n            int r = num%10;\\n            num = num/10;\\n            sum+=r;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i = 2; i<=num; i++){\\n            if(digitSum(i)%2==0) count++;\\n        }\\n        return count;\\n    }\\n    public int digitSum(int num){\\n        int sum = 0;\\n        while(num>0){\\n            int r = num%10;\\n            num = num/10;\\n            sum+=r;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784758,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 2; i <= num; i++) {\\n            int digitsum = 0;\\n            int n = i;\\n            while (n != 0) {\\n                digitsum += n % 10;\\n                n /= 10;\\n            }\\n            if (digitsum % 2 == 0) \\n                count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 2; i <= num; i++) {\\n            int digitsum = 0;\\n            int n = i;\\n            while (n != 0) {\\n                digitsum += n % 10;\\n                n /= 10;\\n            }\\n            if (digitsum % 2 == 0) \\n                count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1784747,
                "title": "count-intergers",
                "content": "```\\npublic:\\n    int countEven(int num) {\\n        int ans=0;\\n        for(int i=2; i<=num; i++){\\n            if(helper(to_string(i))){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n    \\n    bool helper(string num){\\n        int temp=0;\\n        for(int i=0; i<num.size(); i++){\\n            temp+=(num[i]-\\'0\\');\\n        }\\n        if(temp%2) return false;\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\npublic:\\n    int countEven(int num) {\\n        int ans=0;\\n        for(int i=2; i<=num; i++){\\n            if(helper(to_string(i))){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n    \\n    bool helper(string num){\\n        int temp=0;\\n        for(int i=0; i<num.size(); i++){\\n            temp+=(num[i]-\\'0\\');\\n        }\\n        if(temp%2) return false;\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1784722,
                "title": "python-easy-to-understand",
                "content": "\\tclass Solution:\\n\\t\\tdef countEven(self, num: int) -> int:\\n\\t\\t\\tres = 0\\n\\t\\t\\tfor i in range(1, num + 1):\\n\\t\\t\\t\\ts = 0\\n\\t\\t\\t\\tfor c in str(i):\\n\\t\\t\\t\\t\\ts += int(c)\\n\\t\\t\\t\\tif s % 2 == 0:\\n\\t\\t\\t\\t\\tres += 1\\n\\t\\t\\treturn res",
                "solutionTags": [],
                "code": "\\tclass Solution:\\n\\t\\tdef countEven(self, num: int) -> int:\\n\\t\\t\\tres = 0\\n\\t\\t\\tfor i in range(1, num + 1):\\n\\t\\t\\t\\ts = 0\\n\\t\\t\\t\\tfor c in str(i):\\n\\t\\t\\t\\t\\ts += int(c)\\n\\t\\t\\t\\tif s % 2 == 0:\\n\\t\\t\\t\\t\\tres += 1\\n\\t\\t\\treturn res",
                "codeTag": "Java"
            },
            {
                "id": 4080180,
                "title": "max-9-iterations-to-solve-it",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int Evens = 0;\\n        while (((num % 10) != 9) && (num > 0)) {\\n            int n = num, sum = 0;\\n            while (n > 0) {\\n                sum += n % 10;\\n                n /= 10; \\n            }\\n            if (sum % 2 == 0) { Evens++; }\\n            --num;\\n        }\\n        return Evens + num/2; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int Evens = 0;\\n        while (((num % 10) != 9) && (num > 0)) {\\n            int n = num, sum = 0;\\n            while (n > 0) {\\n                sum += n % 10;\\n                n /= 10; \\n            }\\n            if (sum % 2 == 0) { Evens++; }\\n            --num;\\n        }\\n        return Evens + num/2; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4080089,
                "title": "rust-o-1-solution",
                "content": "# Approach\\nExploits the fact that the answer will only ever be n / 2 or n / 2 - 1 depending on oddness of the hundreds and tens digit and the number being equal. It works because numbers like 9 and 10 don\\'t count but it catches up because 19 and 20 count \\n\\n# Code\\n```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        num / 2 - sub_factor(num)\\n    }\\n}\\n\\nfn sub_factor(num: i32) -> i32 {\\n    if num == 1000 {\\n        return 1;\\n    }\\n    let even = num % 2 == 0;\\n    let odd_ten = (num / 10) % 2 == 1;\\n    let odd_hundred = (num / 100) % 2 == 1;\\n    if even && odd_ten != odd_hundred {\\n        1\\n    } else {\\n        0\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        num / 2 - sub_factor(num)\\n    }\\n}\\n\\nfn sub_factor(num: i32) -> i32 {\\n    if num == 1000 {\\n        return 1;\\n    }\\n    let even = num % 2 == 0;\\n    let odd_ten = (num / 10) % 2 == 1;\\n    let odd_hundred = (num / 100) % 2 == 1;\\n    if even && odd_ten != odd_hundred {\\n        1\\n    } else {\\n        0\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4078479,
                "title": "golang-solution",
                "content": "```\\nfunc countEven(num int) int {\\n\\n    count := 0\\n\\n    for i := 1; i <= num; i++ {\\n        if isEvenDigitSum(i) {\\n            count++\\n        }\\n    }\\n\\n    return count\\n}\\n\\nfunc isEvenDigitSum(num int) bool {\\n    digitSum := 0\\n\\n    for num > 0 {\\n        digit := num % 10\\n        digitSum += digit\\n        num /= 10\\n    }\\n\\n    return digitSum % 2 == 0\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc countEven(num int) int {\\n\\n    count := 0\\n\\n    for i := 1; i <= num; i++ {\\n        if isEvenDigitSum(i) {\\n            count++\\n        }\\n    }\\n\\n    return count\\n}\\n\\nfunc isEvenDigitSum(num int) bool {\\n    digitSum := 0\\n\\n    for num > 0 {\\n        digit := num % 10\\n        digitSum += digit\\n        num /= 10\\n    }\\n\\n    return digitSum % 2 == 0\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4078051,
                "title": "easy-solution-beats-100",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for (int i=1; i<=num; i++)\\n        {\\n            int sum=0;\\n            int num=i;\\n            while(num>0)\\n            {\\n                int dig=num%10;\\n                sum=sum+dig;\\n                num=num/10;\\n            }\\n            if (sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for (int i=1; i<=num; i++)\\n        {\\n            int sum=0;\\n            int num=i;\\n            while(num>0)\\n            {\\n                int dig=num%10;\\n                sum=sum+dig;\\n                num=num/10;\\n            }\\n            if (sum%2==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4076206,
                "title": "easy-java-code",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int totalNum=0;\\n        for(int i=2 ;i<=num ;i++){\\n            boolean res=digitSum(i);\\n            if(res == true) totalNum++; \\n        }\\n        return totalNum;\\n    }\\n    public boolean digitSum(int num){\\n        int sum=0;\\n        while(num>0){\\n            int rem=num % 10;\\n            sum+=rem;\\n            num=num/10;\\n        }\\n        if(sum % 2 == 0) return true;\\n        else return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int totalNum=0;\\n        for(int i=2 ;i<=num ;i++){\\n            boolean res=digitSum(i);\\n            if(res == true) totalNum++; \\n        }\\n        return totalNum;\\n    }\\n    public boolean digitSum(int num){\\n        int sum=0;\\n        while(num>0){\\n            int rem=num % 10;\\n            sum+=rem;\\n            num=num/10;\\n        }\\n        if(sum % 2 == 0) return true;\\n        else return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4073466,
                "title": "beginner-friendly-just-observation-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nJust observe, even sum of digits can be obtained if numbers are even+even, odd+odd. So we got number of digits whose digit sum is even by doing (num/2). So now, suppose you have num 32 => 32/2 = 16 but our last digit is even i.e.  we got numbers only till 31(2,4,6,8,11,13,15,17,19,20,22,24,26,28,31) so 16-1=15 numbers and take num=>23 whose sum is odd and last digit is odd i.e. we can get numbers till 22, 23/2 = 11. \\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int sum=0, temp=num;\\n        while(temp>0){\\n            sum += temp%10;\\n            temp/=10;\\n        }\\n\\n        if((sum&1) && (num%10)%2==0){\\n            return num/2 -1;\\n        }else{\\n            return num/2;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int sum=0, temp=num;\\n        while(temp>0){\\n            sum += temp%10;\\n            temp/=10;\\n        }\\n\\n        if((sum&1) && (num%10)%2==0){\\n            return num/2 -1;\\n        }else{\\n            return num/2;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4072730,
                "title": "c-solution-easy-to-understand-100-beats",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n      long long sum=0;\\n      int count=0;\\n      for(int i=1; i<=num; i++)\\n      {\\n          int n=i;\\n          while(n>0)\\n          {\\n              int digit=n%10;\\n              sum+=digit;\\n              n=n/10;\\n          }\\n          if(sum%2==0)\\n          {\\n              count++;\\n          }\\n          sum=0;\\n      }  \\n      return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n      long long sum=0;\\n      int count=0;\\n      for(int i=1; i<=num; i++)\\n      {\\n          int n=i;\\n          while(n>0)\\n          {\\n              int digit=n%10;\\n              sum+=digit;\\n              n=n/10;\\n          }\\n          if(sum%2==0)\\n          {\\n              count++;\\n          }\\n          sum=0;\\n      }  \\n      return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4070107,
                "title": "one-line-solution",
                "content": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n       return sum(not sum(map(int, str(n)))%2 for n in range(1, num+1))      \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n       return sum(not sum(map(int, str(n)))%2 for n in range(1, num+1))      \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069489,
                "title": "c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int s,r,d=0,i;\\n        for(int j=1; j<=num; j++)\\n        {\\n            s=0;\\n            i=j;\\n            while(i!=0)\\n            {\\n                r=i%10;\\n                s=s+r;\\n                i=i/10;\\n\\n            }\\n            if(s%2==0)\\n            {\\n                d++;\\n            }\\n        }\\n        return d;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int s,r,d=0,i;\\n        for(int j=1; j<=num; j++)\\n        {\\n            s=0;\\n            i=j;\\n            while(i!=0)\\n            {\\n                r=i%10;\\n                s=s+r;\\n                i=i/10;\\n\\n            }\\n            if(s%2==0)\\n            {\\n                d++;\\n            }\\n        }\\n        return d;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4061418,
                "title": "c-beats-100",
                "content": "# Intuition\\nPopi popipo popipo\\n\\n# Approach\\nWe should create function that returning our sum, than we shoud put every number from array <1, num> and we count them.\\nThen we are returning count.\\n\\n# Complexity\\n- Time complexity:\\nVery fast!\\n\\n- Space complexity:\\nNot that good!\\n\\n# Code\\n```\\nclass Solution \\n{\\npublic:\\n    int suma(int n)\\n    {\\n        int suma;\\n        suma = n / 1000 + n / 100 % 10 + n % 100 / 10 + n % 10;\\n        return suma;\\n    }\\n    int countEven(int num) \\n    {\\n        int counter = 0;\\n        for(int i = 1; i < num + 1; i++)\\n        {\\n            if(suma(i) % 2 == 0)\\n            {\\n                counter++;\\n            }\\n        }\\n        return counter;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int suma(int n)\\n    {\\n        int suma;\\n        suma = n / 1000 + n / 100 % 10 + n % 100 / 10 + n % 10;\\n        return suma;\\n    }\\n    int countEven(int num) \\n    {\\n        int counter = 0;\\n        for(int i = 1; i < num + 1; i++)\\n        {\\n            if(suma(i) % 2 == 0)\\n            {\\n                counter++;\\n            }\\n        }\\n        return counter;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4060838,
                "title": "string-solution-using-rust",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimpl Solution {\\n    pub fn count_even(mut num: i32) -> i32 {\\n        let mut count = 0;\\n        while num > 0 {\\n            if\\n            num.to_string().chars()\\n            .map(|x| x as i32 - 48)\\n            .sum::<i32>()\\n            & 0b1 == 0 {\\n                count += 1;\\n            }\\n\\n            num -= 1;\\n        }\\n        count\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust",
                    "String"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn count_even(mut num: i32) -> i32 {\\n        let mut count = 0;\\n        while num > 0 {\\n            if\\n            num.to_string().chars()\\n            .map(|x| x as i32 - 48)\\n            .sum::<i32>()\\n            & 0b1 == 0 {\\n                count += 1;\\n            }\\n\\n            num -= 1;\\n        }\\n        count\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4060378,
                "title": "python-solution-easy-to-understand-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def checker(nums):\\n            sa=0\\n            nums=str(nums)\\n            for i in nums:\\n                sa+=int(i)\\n            return sa%2==0\\n        s=0\\n        for i in range(1,num+1):\\n            if checker(i):\\n                s+=1\\n        return s\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def checker(nums):\\n            sa=0\\n            nums=str(nums)\\n            for i in nums:\\n                sa+=int(i)\\n            return sa%2==0\\n        s=0\\n        for i in range(1,num+1):\\n            if checker(i):\\n                s+=1\\n        return s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4059541,
                "title": "python3-beats-99-99-o-1-space",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        summ = 0 \\n        for i in str(num):\\n            c=int(i)\\n            summ +=c\\n        if v%2==0:\\n            return num .. 2\\n        return (num-1)//2\\n       \\n            \\n        \\n\\n\\n            \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        summ = 0 \\n        for i in str(num):\\n            c=int(i)\\n            summ +=c\\n        if v%2==0:\\n            return num .. 2\\n        return (num-1)//2\\n       \\n            \\n        \\n\\n\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4053056,
                "title": "easy-to-understand-python3-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def sumDigits(n):\\n            s = 0\\n\\n            while n > 0:\\n                r = n % 10\\n                s += r\\n                n = n // 10\\n            return s % 2 == 0\\n\\n        count = 0\\n        \\n        for i in range(2, num + 1):\\n            if sumDigits(i):\\n                count += 1\\n        \\n        return count\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        def sumDigits(n):\\n            s = 0\\n\\n            while n > 0:\\n                r = n % 10\\n                s += r\\n                n = n // 10\\n            return s % 2 == 0\\n\\n        count = 0\\n        \\n        for i in range(2, num + 1):\\n            if sumDigits(i):\\n                count += 1\\n        \\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4047977,
                "title": "simple-beginner-friendly-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        count=0\\n        for i in range(1,num+1):\\n            if i<10:\\n                if i%2==0:\\n                    count+=1\\n\\n            else:\\n                val=0\\n                while i>0:\\n                    val+=i%10\\n                    i=i//10\\n                if val%2==0:\\n                    count+=1\\n\\n        return count\\n\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        count=0\\n        for i in range(1,num+1):\\n            if i<10:\\n                if i%2==0:\\n                    count+=1\\n\\n            else:\\n                val=0\\n                while i>0:\\n                    val+=i%10\\n                    i=i//10\\n                if val%2==0:\\n                    count+=1\\n\\n        return count\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4046855,
                "title": "simple-math",
                "content": "# \\uD83D\\uDE09Don\\'t just watch & move away, also give an Upvote.\\uD83D\\uDE09\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int n) {\\n        int cnt = 0;\\n        for(int i=1; i<=n; i++)\\n        {\\n            int num = i;\\n            int sum = 0;\\n            while(num != 0)\\n            {\\n                sum += (num%10);\\n                num /= 10;\\n            }\\n\\n            if(sum%2 == 0)\\n                cnt++;\\n        }\\n\\n<!-- \\u2705Well before returning answer don\\'t forget to UPVOTE.\\u2705 -->\\n        return cnt;\\n    }\\n};\\n```\\n![Leetcode Upvote.gif](https://assets.leetcode.com/users/images/ddb58277-f81d-40f9-927f-046720177d8e_1683052648.39132.gif)",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int n) {\\n        int cnt = 0;\\n        for(int i=1; i<=n; i++)\\n        {\\n            int num = i;\\n            int sum = 0;\\n            while(num != 0)\\n            {\\n                sum += (num%10);\\n                num /= 10;\\n            }\\n\\n            if(sum%2 == 0)\\n                cnt++;\\n        }\\n\\n<!-- \\u2705Well before returning answer don\\'t forget to UPVOTE.\\u2705 -->\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4034293,
                "title": "python-simple-solution-bruteforce-string",
                "content": "# Complexity\\n- Time complexity: $$O(m)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```python\\nclass Solution:\\n  def countEven(self, num: int) -> int:\\n    count = 0\\n    for i in range(1, num + 1):\\n      if sum(int(x) for x in str(i)) % 2 == 0:\\n        count += 1\\n    return count\\n```\\n",
                "solutionTags": [
                    "Python3",
                    "Math",
                    "String"
                ],
                "code": "```python\\nclass Solution:\\n  def countEven(self, num: int) -> int:\\n    count = 0\\n    for i in range(1, num + 1):\\n      if sum(int(x) for x in str(i)) % 2 == 0:\\n        count += 1\\n    return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4022241,
                "title": "solution-using-python",
                "content": "# Complexity\\n- Time complexity: 18ms\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 13.27 MB\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        sum1 = 0\\n        count = 0\\n        list1 = [i for i in range(1, num+1)]\\n        for i in list1:\\n            while i!=0:\\n                digit = i%10\\n                sum1 = sum1 + digit\\n                i = i//10\\n            if sum1%2==0:\\n                count += 1\\n            sum1 = 0 \\n        return count\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        sum1 = 0\\n        count = 0\\n        list1 = [i for i in range(1, num+1)]\\n        for i in list1:\\n            while i!=0:\\n                digit = i%10\\n                sum1 = sum1 + digit\\n                i = i//10\\n            if sum1%2==0:\\n                count += 1\\n            sum1 = 0 \\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4021163,
                "title": "easy-and-understandable-solution-for-beginners",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    func countEven(_ num: Int) -> Int {\\n        var answer = 0\\n\\n        for i in 1...num{\\n            let numbers = Array(String(i))\\n            var sumOfNumbers = 0\\n            for j in numbers{\\n                sumOfNumbers += Int(String(j))!\\n            }\\n            if sumOfNumbers % 2 == 0{\\n                answer += 1\\n            }\\n            sumOfNumbers = 0\\n\\n        }\\n        return answer\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func countEven(_ num: Int) -> Int {\\n        var answer = 0\\n\\n        for i in 1...num{\\n            let numbers = Array(String(i))\\n            var sumOfNumbers = 0\\n            for j in numbers{\\n                sumOfNumbers += Int(String(j))!\\n            }\\n            if sumOfNumbers % 2 == 0{\\n                answer += 1\\n            }\\n            sumOfNumbers = 0\\n\\n        }\\n        return answer\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4015404,
                "title": "easy-solution-using-to-string-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:100\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:96\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n    int count=0;\\n    \\n    for(int i=1;i<=num;i++){\\n        int temp=0;\\n        string s=to_string(i);\\n        for(auto it:s){\\n            temp+=(it-\\'0\\');\\n        }\\n        if(temp%2==0) count++;\\n    } \\n    return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n    int count=0;\\n    \\n    for(int i=1;i<=num;i++){\\n        int temp=0;\\n        string s=to_string(i);\\n        for(auto it:s){\\n            temp+=(it-\\'0\\');\\n        }\\n        if(temp%2==0) count++;\\n    } \\n    return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4008235,
                "title": "simple-python-solution-best-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        count=0\\n        for i in range(1,num+1):\\n            sum=0\\n            while i:\\n                n=i%10\\n                sum+=n\\n                i=i//10\\n            if sum%2==0 and sum<=num:\\n                count+=1\\n        return count      \\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countEven(self, num):\\n        \"\"\"\\n        :type num: int\\n        :rtype: int\\n        \"\"\"\\n        count=0\\n        for i in range(1,num+1):\\n            sum=0\\n            while i:\\n                n=i%10\\n                sum+=n\\n                i=i//10\\n            if sum%2==0 and sum<=num:\\n                count+=1\\n        return count      \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4007460,
                "title": "o-n-o-1",
                "content": "# Code\\n```\\nclass Solution {\\n\\n    // TC: O(n)\\n    // SC: O(1)\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i=1;i<=num;i++){\\n            int currSum = 0;\\n            int curr = i;\\n            while(curr!=0){\\n                currSum+=curr%10;\\n                curr/=10;\\n            }\\n            if(currSum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n\\n    // TC: O(n)\\n    // SC: O(1)\\n    public int countEven(int num) {\\n        int count = 0;\\n        for(int i=1;i<=num;i++){\\n            int currSum = 0;\\n            int curr = i;\\n            while(curr!=0){\\n                currSum+=curr%10;\\n                curr/=10;\\n            }\\n            if(currSum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3998457,
                "title": "c-solution-by-ajeet20-iit-kanpur",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n\\n        int count = 0;\\n        for(int i = 1; i <= num; i++){\\n            int sum = 0;\\n            int n = i;\\n            while(n != 0){\\n                int d = n%10;\\n                sum = sum + d;\\n                n = n/10;\\n            }\\n            if(sum <= num && sum%2 == 0) count++;\\n        }\\n        return count;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n\\n        int count = 0;\\n        for(int i = 1; i <= num; i++){\\n            int sum = 0;\\n            int n = i;\\n            while(n != 0){\\n                int d = n%10;\\n                sum = sum + d;\\n                n = n/10;\\n            }\\n            if(sum <= num && sum%2 == 0) count++;\\n        }\\n        return count;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3988535,
                "title": "optimal-solution-using-java-beats-100",
                "content": "\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans = num;\\n        int sum = 0;\\n        while(num > 0){\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        if(sum % 2 == 0){\\n            return ans / 2;\\n        }\\n        return (ans - 1) / 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans = num;\\n        int sum = 0;\\n        while(num > 0){\\n            sum += num % 10;\\n            num /= 10;\\n        }\\n        if(sum % 2 == 0){\\n            return ans / 2;\\n        }\\n        return (ans - 1) / 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3987243,
                "title": "beats-easy-beginner-friendly-solution-simple-and-easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        for(int i=1;i<=num;i++){\\n            if(dSum(i)%2==0)    ans++;\\n        }\\n        return ans;\\n    }\\n    public int dSum(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=(n%10);\\n            n/=10;\\n        }\\n        return sum;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int ans=0;\\n        for(int i=1;i<=num;i++){\\n            if(dSum(i)%2==0)    ans++;\\n        }\\n        return ans;\\n    }\\n    public int dSum(int n){\\n        int sum=0;\\n        while(n>0){\\n            sum+=(n%10);\\n            n/=10;\\n        }\\n        return sum;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3970334,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nwith O(n*n) time complexity\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int n) {\\n        int count=0;\\n        for(int i=1;i<=n;i++){\\n            String s=\"\"+i;\\n            int sum=0;\\n            for(int j=0;j<s.length();j++){\\n                sum+=s.charAt(j)-\\'0\\';\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int n) {\\n        int count=0;\\n        for(int i=1;i<=n;i++){\\n            String s=\"\"+i;\\n            int sum=0;\\n            for(int j=0;j<s.length();j++){\\n                sum+=s.charAt(j)-\\'0\\';\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3955993,
                "title": "java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int n=i;\\n            \\n            int sum=0;\\n            while(n>0)\\n            {\\n            \\n            sum=sum+n%10;\\n            n=n/10;\\n        }\\n        if(sum%2==0)\\n        \\n        c++;\\n        \\n        }\\n        return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int n=i;\\n            \\n            int sum=0;\\n            while(n>0)\\n            {\\n            \\n            sum=sum+n%10;\\n            n=n/10;\\n        }\\n        if(sum%2==0)\\n        \\n        c++;\\n        \\n        }\\n        return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3945697,
                "title": "easy-solution-with-c",
                "content": "# Intuition\\nMy first thought was **\"How to extract the digits of a number one by one\"**. This can be done by doing this operation for every number:\\n```\\n    while(num != 0)\\n    {\\n        int digit = num % 10;\\n        num = num / 10;\\n    }   \\n```\\n\\n# Approach\\nFor each number less or equal to num, see its digits and calculate if the some of the digits are less than the number.Also check if the sum is an even number.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n- Space complexity:\\nO(1)\\n# Code\\n```\\npublic class Solution {\\n    public int CountEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <= num; i++) {\\n            int temp = i;\\n            int sum = 0;\\n            while(temp != 0)\\n            {\\n                int digit = temp % 10;\\n                temp = temp / 10;\\n                sum += digit;\\n            }   \\n            if (sum <= num && sum % 2 == 0) {\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\n    while(num != 0)\\n    {\\n        int digit = num % 10;\\n        num = num / 10;\\n    }   \\n```\n```\\npublic class Solution {\\n    public int CountEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <= num; i++) {\\n            int temp = i;\\n            int sum = 0;\\n            while(temp != 0)\\n            {\\n                int digit = temp % 10;\\n                temp = temp / 10;\\n                sum += digit;\\n            }   \\n            if (sum <= num && sum % 2 == 0) {\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3939079,
                "title": "dart-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    int countEven(int num) {\\n        var c = 0;\\n        for (int i = 1; i <= num; i++) {\\n            if (digitSumIsEven(i)) {\\n                c += 1;\\n            }\\n        }\\n\\n        return c;\\n    }\\n\\n    bool digitSumIsEven(int val) {\\n        return val.toString().split(\\'\\').map((e) => int.parse(e)).fold<int>(0, (a, b) => a + b) % 2 == 0 ? true : false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n    int countEven(int num) {\\n        var c = 0;\\n        for (int i = 1; i <= num; i++) {\\n            if (digitSumIsEven(i)) {\\n                c += 1;\\n            }\\n        }\\n\\n        return c;\\n    }\\n\\n    bool digitSumIsEven(int val) {\\n        return val.toString().split(\\'\\').map((e) => int.parse(e)).fold<int>(0, (a, b) => a + b) % 2 == 0 ? true : false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3928619,
                "title": "easiest-solution-in-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        \\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int s=0;\\n            int d=i;\\n            while(d>0)\\n            {\\n                s=d%10+s;\\n                d=d/10;\\n            }\\n            if(s%2==0)\\n                c++;\\n        }\\n        return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        \\n        int c=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int s=0;\\n            int d=i;\\n            while(d>0)\\n            {\\n                s=d%10+s;\\n                d=d/10;\\n            }\\n            if(s%2==0)\\n                c++;\\n        }\\n        return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3927900,
                "title": "c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool check(int n){\\n        int m = n;\\n        int sum = 0;\\n        while (m >= 10){\\n            sum += m%10;\\n            m = m/10;\\n        }\\n        sum += m;\\n        if (sum % 2 == 0)\\n            return true;\\n        \\n        return false;\\n    }\\n\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i=2 ; i<=num ; i++){\\n            if (check(i))\\n                ans++;\\n        }    \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool check(int n){\\n        int m = n;\\n        int sum = 0;\\n        while (m >= 10){\\n            sum += m%10;\\n            m = m/10;\\n        }\\n        sum += m;\\n        if (sum % 2 == 0)\\n            return true;\\n        \\n        return false;\\n    }\\n\\n    int countEven(int num) {\\n        int ans = 0;\\n        for (int i=2 ; i<=num ; i++){\\n            if (check(i))\\n                ans++;\\n        }    \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3898360,
                "title": "easy-python-solution",
                "content": "class Solution:\\n\\n    def countEven(self, num: int) -> int:\\n        c=0\\n        for i in range(2,num+1):\\n            s=0\\n            while(i!=0):\\n                r=i%10;\\n                s=s+r\\n                i=i//10\\n            if(s%2==0):\\n                c+=1\\n            \\n        return c",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n\\n    def countEven(self, num: int) -> int:\\n        c=0\\n        for i in range(2,num+1):\\n            s=0\\n            while(i!=0):\\n                r=i%10;\\n                s=s+r\\n                i=i//10\\n            if(s%2==0):\\n                c+=1\\n            \\n        return c",
                "codeTag": "Java"
            },
            {
                "id": 3897358,
                "title": "javascript-for-loop",
                "content": "Time complexity: $$O(n*logn)$$\\nSpace complexity: $$O(1)$$\\n\\n# Code\\n```\\nvar countEven = function(num) {\\n    let count = 0;\\n\\n    for (let i = num, digitSum = 0; num >= 2; i = --num, digitSum = 0) {\\n        while (i > 0)\\n            digitSum += i % 10, i = (i - i % 10) / 10;\\n        count += ++digitSum & 1;\\n    }\\n\\n    return count;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countEven = function(num) {\\n    let count = 0;\\n\\n    for (let i = num, digitSum = 0; num >= 2; i = --num, digitSum = 0) {\\n        while (i > 0)\\n            digitSum += i % 10, i = (i - i % 10) / 10;\\n        count += ++digitSum & 1;\\n    }\\n\\n    return count;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3893193,
                "title": "rust",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        let mut res = vec![];\\n        for i in 2..=num{\\n            let mut sum = 0;\\n            let mut j=1;\\n            while j <= i {\\n                let x = i % (10 * j) / j;\\n                sum += x;\\n                j *= 10\\n            }\\n            if sum % 2 == 0{\\n                res.push(i);\\n            }\\n        }\\n        res.len() as i32\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn count_even(num: i32) -> i32 {\\n        let mut res = vec![];\\n        for i in 2..=num{\\n            let mut sum = 0;\\n            let mut j=1;\\n            while j <= i {\\n                let x = i % (10 * j) / j;\\n                sum += x;\\n                j *= 10\\n            }\\n            if sum % 2 == 0{\\n                res.push(i);\\n            }\\n        }\\n        res.len() as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3890232,
                "title": "using-nested-loops",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    var ct=0;\\n    for(var i=2;i<=num;i++)\\n    {\\n        var x=i.toString();\\n        if(x<10 && Number(x)%2==0)\\n        {\\n            ct++;\\n        }\\n        if(x.length>1)\\n        {\\n            var sum=0;\\n            for(var j=0;j<x.length;j++)\\n            {\\n                sum=sum+Number(x[j])\\n            }\\n            if(Number(sum)%2==0)\\n            {\\n                ct++;\\n            }\\n        }\\n    }\\n    return ct;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    var ct=0;\\n    for(var i=2;i<=num;i++)\\n    {\\n        var x=i.toString();\\n        if(x<10 && Number(x)%2==0)\\n        {\\n            ct++;\\n        }\\n        if(x.length>1)\\n        {\\n            var sum=0;\\n            for(var j=0;j<x.length;j++)\\n            {\\n                sum=sum+Number(x[j])\\n            }\\n            if(Number(sum)%2==0)\\n            {\\n                ct++;\\n            }\\n        }\\n    }\\n    return ct;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3862247,
                "title": "c",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans = 0;\\n\\n        for(int i = 1; i <= num; i++){\\n            int temp = i;\\n            int sum = 0;\\n\\n            while(temp){\\n                int rem = temp%10;\\n                sum += rem;\\n                temp /= 10;\\n            }\\n\\n            if(sum%2 == 0){\\n                ans++;\\n            }\\n        }\\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans = 0;\\n\\n        for(int i = 1; i <= num; i++){\\n            int temp = i;\\n            int sum = 0;\\n\\n            while(temp){\\n                int rem = temp%10;\\n                sum += rem;\\n                temp /= 10;\\n            }\\n\\n            if(sum%2 == 0){\\n                ans++;\\n            }\\n        }\\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3858447,
                "title": "solution-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        a=[]\\n        for i in range(1,num+1) :\\n            i=str(i)\\n            sum=0\\n            for j in i :\\n                sum+=int(j)\\n            # sum=int(sum)\\n            if sum%2==0 :\\n                a.append(1)\\n        return len(a)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        a=[]\\n        for i in range(1,num+1) :\\n            i=str(i)\\n            sum=0\\n            for j in i :\\n                sum+=int(j)\\n            # sum=int(sum)\\n            if sum%2==0 :\\n                a.append(1)\\n        return len(a)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3854397,
                "title": "2180-count-integers-with-even-digit-sum",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(N^2)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\npublic class Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <= num; i++) {\\n            if (isDigitSumEven(i)) {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n    \\n    private boolean isDigitSumEven(int num) {\\n        int digitSum = 0;\\n        while (num > 0) {\\n            digitSum += num % 10;\\n            num /= 10;\\n        }\\n        return digitSum % 2 == 0;\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic class Solution {\\n    public int countEven(int num) {\\n        int count = 0;\\n        for (int i = 1; i <= num; i++) {\\n            if (isDigitSumEven(i)) {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n    \\n    private boolean isDigitSumEven(int num) {\\n        int digitSum = 0;\\n        while (num > 0) {\\n            digitSum += num % 10;\\n            num /= 10;\\n        }\\n        return digitSum % 2 == 0;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3850868,
                "title": "javascript-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nA number is odd if and only if the last digit of its binary representation is 1.\\n\\nSo if the sum of all those digits involves an even number of odd numbers then the total sum is even.\\n\\nExample\\n1001 + 0001 = 1010 \\n\\nWe could simply sum all the digits with reduce and then check if the total is even or not but that is not fun.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(n) {\\n  let output = 0;\\n  for (let i = 2; i <= n; i++) {\\n    const digitsArr = i.toString().split(\\'\\');\\n    let oddCounter = 0;\\n\\n    digitsArr.forEach(number => {\\n      let digitBinary = parseInt(number).toString(2); \\n      if (parseInt(digitBinary[digitBinary.length-1]) === 1) oddCounter++;\\n    });\\n\\n    if (oddCounter % 2 == 0) output++;\\n  }\\n  return output;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(n) {\\n  let output = 0;\\n  for (let i = 2; i <= n; i++) {\\n    const digitsArr = i.toString().split(\\'\\');\\n    let oddCounter = 0;\\n\\n    digitsArr.forEach(number => {\\n      let digitBinary = parseInt(number).toString(2); \\n      if (parseInt(digitBinary[digitBinary.length-1]) === 1) oddCounter++;\\n    });\\n\\n    if (oddCounter % 2 == 0) output++;\\n  }\\n  return output;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3847509,
                "title": "count-integers-with-even-digit-sum",
                "content": "# Code\\n```Python []\\nclass Solution:\\n    def countEven(self, num):\\n      if num < 1 or num > 1000:\\n        print(\"expected \\'num\\' to have value from 1 to 1000 only\")\\n        return 0\\n      count = 0\\n      for i in range(1,num+1):\\n        sum = 0\\n        while i > 0:\\n          sum = sum + i % 10\\n          i = i // 10\\n        if sum % 2 == 0:\\n          count += 1\\n      return count\\nnum = 1001\\nprint(Solution().countEven(num))\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```Python []\\nclass Solution:\\n    def countEven(self, num):\\n      if num < 1 or num > 1000:\\n        print(\"expected \\'num\\' to have value from 1 to 1000 only\")\\n        return 0\\n      count = 0\\n      for i in range(1,num+1):\\n        sum = 0\\n        while i > 0:\\n          sum = sum + i % 10\\n          i = i // 10\\n        if sum % 2 == 0:\\n          count += 1\\n      return count\\nnum = 1001\\nprint(Solution().countEven(num))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3837241,
                "title": "brute-force-python-3-o-n-time-o-1-space",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2, num + 1):\\n            if sum([int(x) for x in str(i)]) % 2 == 0:\\n                count += 1\\n        return count;\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countEven(self, num: int) -> int:\\n        count = 0\\n        for i in range(2, num + 1):\\n            if sum([int(x) for x in str(i)]) % 2 == 0:\\n                count += 1\\n        return count;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3831475,
                "title": "cpp-clean-code-beat-100-time-90-memory",
                "content": "\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool dunm(int n){\\n        long int e=0;\\n        while(n){\\n            int p=n%10;\\n            n/=10;\\n            e+=p;\\n        }\\n        if(e%2==0)return true;\\n        return false;\\n    }\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++){\\n            if(dunm(i))count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool dunm(int n){\\n        long int e=0;\\n        while(n){\\n            int p=n%10;\\n            n/=10;\\n            e+=p;\\n        }\\n        if(e%2==0)return true;\\n        return false;\\n    }\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++){\\n            if(dunm(i))count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3822929,
                "title": "formal-approach-90-beats",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nSimple for loop and If condition\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    static boolean isEven(int n){\\n        int sum=0;\\n        while(n>0){\\n            int rem = n%10;\\n            sum +=rem;\\n            n=n/10;\\n        }\\n        if(sum%2==0) return true;\\n        return false;\\n    }\\n    public int countEven(int num) {\\n        if(num<=1) return 0;\\n        int count=0;\\n        for(int i=2; i<=num; i++){\\n            if(isEven(i))\\n            count++;\\n        }\\n        return count;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    static boolean isEven(int n){\\n        int sum=0;\\n        while(n>0){\\n            int rem = n%10;\\n            sum +=rem;\\n            n=n/10;\\n        }\\n        if(sum%2==0) return true;\\n        return false;\\n    }\\n    public int countEven(int num) {\\n        if(num<=1) return 0;\\n        int count=0;\\n        for(int i=2; i<=num; i++){\\n            if(isEven(i))\\n            count++;\\n        }\\n        return count;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3808509,
                "title": "easy-java-readable",
                "content": "\\t// feel free to drop your doubts, happy to discuss!\\n\\tclass Solution {\\n\\t\\tpublic int countEven(int num) {\\n\\t\\t\\tint count =0;\\n\\t\\t\\tfor(int i=1; i<=num; i++){\\n\\t\\t\\t\\tint temp =i;\\n\\t\\t\\t\\tint sum =0;\\n\\t\\t\\t\\twhile(temp >0){\\n\\t\\t\\t\\t\\tsum += temp%10;\\n\\t\\t\\t\\t\\ttemp /=10;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(sum %2 ==0) count++;\\n\\t\\t\\t}\\n\\t\\t\\treturn count;\\n\\t\\t}\\n\\t}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\t\\tpublic int countEven(int num) {\\n\\t\\t\\tint count =0;\\n\\t\\t\\tfor(int i=1; i<=num; i++){\\n\\t\\t\\t\\tint temp =i;\\n\\t\\t\\t\\tint sum =0;\\n\\t\\t\\t\\twhile(temp >0){\\n\\t\\t\\t\\t\\tsum += temp%10;\\n\\t\\t\\t\\t\\ttemp /=10;\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3807714,
                "title": "beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        int sum=0;\\n        for(int i=1;i<=num;i++){\\n            if(i<10 && i%2==0){\\n                cout<<i<<\" \";\\n                count++;\\n            }\\n            if(i>9){\\n                int n=i;\\n                while(n){\\n                    sum+=n%10;\\n                    n=n/10;\\n                }\\n                \\n                if(sum%2==0){\\n                    count++;\\n                }\\n                sum=0;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        int sum=0;\\n        for(int i=1;i<=num;i++){\\n            if(i<10 && i%2==0){\\n                cout<<i<<\" \";\\n                count++;\\n            }\\n            if(i>9){\\n                int n=i;\\n                while(n){\\n                    sum+=n%10;\\n                    n=n/10;\\n                }\\n                \\n                if(sum%2==0){\\n                    count++;\\n                }\\n                sum=0;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3788571,
                "title": "easy-to-understand-sol-in-c",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++)\\n        {\\n            int sum=0,num=i;\\n            while(num>0)\\n            {\\n               sum+=num%10;\\n                num=num/10;\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int count=0;\\n        for(int i=1;i<=num;i++)\\n        {\\n            int sum=0,num=i;\\n            while(num>0)\\n            {\\n               sum+=num%10;\\n                num=num/10;\\n            }\\n            if(sum%2==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3781326,
                "title": "easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    const arr = Array.from({length: num });\\n   return arr.map((_,i)=>i*1+1).filter((nu)=>{\\n       if(nu > num) return false;\\n       if(nu === 0) return false;\\n       \\n        if(nu <= 9){\\n         return nu%2?false:true;\\n        }else if(nu < 100){\\n        return (+String(nu)[0] + +String(nu)[1])% 2? false : true;\\n        }else{\\n        return (+String(nu)[0] + +String(nu)[1] + +String(nu)[2])% 2? false : true;\\n\\n        }\\n    }).length\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} num\\n * @return {number}\\n */\\nvar countEven = function(num) {\\n    const arr = Array.from({length: num });\\n   return arr.map((_,i)=>i*1+1).filter((nu)=>{\\n       if(nu > num) return false;\\n       if(nu === 0) return false;\\n       \\n        if(nu <= 9){\\n         return nu%2?false:true;\\n        }else if(nu < 100){\\n        return (+String(nu)[0] + +String(nu)[1])% 2? false : true;\\n        }else{\\n        return (+String(nu)[0] + +String(nu)[1] + +String(nu)[2])% 2? false : true;\\n\\n        }\\n    }).length\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3777906,
                "title": "easy-solution-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(N^2)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int temp=i;\\n            int sum=0;\\n            while(temp!=0)\\n            {\\n                int x=temp%10;  // You take particular digit\\n                sum=sum+x;      // sum it\\n                temp=temp/10;\\n            }\\n            if(sum%2==0)        // Check it even or odd\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countEven(int num) {\\n        int count=0;\\n        for(int i=2;i<=num;i++)\\n        {\\n            int temp=i;\\n            int sum=0;\\n            while(temp!=0)\\n            {\\n                int x=temp%10;  // You take particular digit\\n                sum=sum+x;      // sum it\\n                temp=temp/10;\\n            }\\n            if(sum%2==0)        // Check it even or odd\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3772452,
                "title": "easy-solution-in-c",
                "content": "# Intuition\\n\\n\\n# Approach\\n\\n\\n# Complexity\\n- Time complexity:\\nO(n^2)\\n\\n- Space complexity:\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans=0;\\n        for(int i=2;i<=num;i++){\\n            string str=to_string(i);\\n            int sum=0;\\n            for(int i=0;i<str.length();i++){\\n                sum+=str[i]-\\'0\\';\\n            }\\n            if(sum%2==0)\\n            ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n        int ans=0;\\n        for(int i=2;i<=num;i++){\\n            string str=to_string(i);\\n            int sum=0;\\n            for(int i=0;i<str.length();i++){\\n                sum+=str[i]-\\'0\\';\\n            }\\n            if(sum%2==0)\\n            ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3759699,
                "title": "c-easy-solution",
                "content": "<!-- Describe your first thoughts on how to solve this problem. -->\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n      int count=0;\\n      for(int i=1;i<=num;i++)\\n      {\\n            int n=i;\\n            int sum=0;\\n            while(n!=0)\\n            {\\n              int  digit=n%10;\\n                   sum=sum+digit;\\n                   n=n/10;\\n            } \\n              if(sum%2==0)\\n              {\\n                count++;\\n              }\\n      }\\n       return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countEven(int num) {\\n      int count=0;\\n      for(int i=1;i<=num;i++)\\n      {\\n            int n=i;\\n            int sum=0;\\n            while(n!=0)\\n            {\\n              int  digit=n%10;\\n                   sum=sum+digit;\\n                   n=n/10;\\n            } \\n              if(sum%2==0)\\n              {\\n                count++;\\n              }\\n      }\\n       return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1576419,
                "content": [
                    {
                        "username": "Soba_1",
                        "content": "can we do this Q in O(1) ?"
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "[@Pandit2408](/Pandit2408) sol??"
                    },
                    {
                        "username": "Pandit2408",
                        "content": "Why not\\n"
                    },
                    {
                        "username": "speedyy",
                        "content": "If you want to see a solution using more bit manipulation with step by step explanation you can see my solution \nhttps://leetcode.com/problems/count-integers-with-even-digit-sum/solutions/3331857/o-1-bit-manipulation/"
                    },
                    {
                        "username": "21bcs069",
                        "content": "if any one did  it with some different, new logic please post.  using some pattern or any other. "
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "are you serious??"
                    }
                ]
            },
            {
                "id": 1841296,
                "content": [
                    {
                        "username": "Soba_1",
                        "content": "can we do this Q in O(1) ?"
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "[@Pandit2408](/Pandit2408) sol??"
                    },
                    {
                        "username": "Pandit2408",
                        "content": "Why not\\n"
                    },
                    {
                        "username": "speedyy",
                        "content": "If you want to see a solution using more bit manipulation with step by step explanation you can see my solution \nhttps://leetcode.com/problems/count-integers-with-even-digit-sum/solutions/3331857/o-1-bit-manipulation/"
                    },
                    {
                        "username": "21bcs069",
                        "content": "if any one did  it with some different, new logic please post.  using some pattern or any other. "
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "are you serious??"
                    }
                ]
            },
            {
                "id": 1998933,
                "content": [
                    {
                        "username": "Soba_1",
                        "content": "can we do this Q in O(1) ?"
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "[@Pandit2408](/Pandit2408) sol??"
                    },
                    {
                        "username": "Pandit2408",
                        "content": "Why not\\n"
                    },
                    {
                        "username": "speedyy",
                        "content": "If you want to see a solution using more bit manipulation with step by step explanation you can see my solution \nhttps://leetcode.com/problems/count-integers-with-even-digit-sum/solutions/3331857/o-1-bit-manipulation/"
                    },
                    {
                        "username": "21bcs069",
                        "content": "if any one did  it with some different, new logic please post.  using some pattern or any other. "
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "are you serious??"
                    }
                ]
            },
            {
                "id": 1984522,
                "content": [
                    {
                        "username": "Soba_1",
                        "content": "can we do this Q in O(1) ?"
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "[@Pandit2408](/Pandit2408) sol??"
                    },
                    {
                        "username": "Pandit2408",
                        "content": "Why not\\n"
                    },
                    {
                        "username": "speedyy",
                        "content": "If you want to see a solution using more bit manipulation with step by step explanation you can see my solution \nhttps://leetcode.com/problems/count-integers-with-even-digit-sum/solutions/3331857/o-1-bit-manipulation/"
                    },
                    {
                        "username": "21bcs069",
                        "content": "if any one did  it with some different, new logic please post.  using some pattern or any other. "
                    },
                    {
                        "username": "bhuppidhamii",
                        "content": "are you serious??"
                    }
                ]
            }
        ]
    }
]